[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS626 Portfolio",
    "section": "",
    "text": "Welcome! This is my course website for ISSS626.\n\nHands-on → see Ex01a in the navbar.\nIn-class / Take-home pages are placeholders for now."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex01/ex01b.html",
    "href": "Hands-on_Ex/Hands-on_ex01/ex01b.html",
    "title": "Hands-on Exercise 01b: Choropleth Mapping (Population 2024)",
    "section": "",
    "text": "This exercise demonstrates choropleth mapping techniques using Singapore’s 2024 population data. We’ll create two thematic maps:\n\nAged population share (65+) by Planning Area using quantile classification\nDependency ratio by Planning Area using Jenks natural breaks classification"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex01/ex01b.html#overview",
    "href": "Hands-on_Ex/Hands-on_ex01/ex01b.html#overview",
    "title": "Hands-on Exercise 01b: Choropleth Mapping (Population 2024)",
    "section": "",
    "text": "This exercise demonstrates choropleth mapping techniques using Singapore’s 2024 population data. We’ll create two thematic maps:\n\nAged population share (65+) by Planning Area using quantile classification\nDependency ratio by Planning Area using Jenks natural breaks classification"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex01/ex01b.html#setup-and-environment",
    "href": "Hands-on_Ex/Hands-on_ex01/ex01b.html#setup-and-environment",
    "title": "Hands-on Exercise 01b: Choropleth Mapping (Population 2024)",
    "section": "Setup and Environment",
    "text": "Setup and Environment\n\n\nCode\n# 兜底：没装 pacman 就装\nif (!requireNamespace(\"pacman\", quietly = TRUE)) install.packages(\"pacman\")\nif (!requireNamespace(\"pacman\", quietly = TRUE)) install.packages(\"pacman\")\npacman::p_load(sf, dplyr, tidyr, readr, janitor, stringr, xml2, rvest,\n               tmap, here, units, purrr)\n\n# 需要 purrr，因为后面用到 map_chr / keep\npacman::p_load(sf, dplyr, tidyr, readr, janitor, stringr, xml2, rvest,\n               tmap, here, units, purrr)\ntmap_mode(\"plot\")\n\npath_ex01 &lt;- here::here(\"Hands-on_Ex\", \"Hands-on_ex01\")\npath_geo  &lt;- file.path(path_ex01, \"data\", \"geospatial\")\npath_asp  &lt;- file.path(path_ex01, \"data\", \"aspatial\")\npath_fig  &lt;- file.path(path_ex01, \"figures\")\nif (!dir.exists(path_fig)) dir.create(path_fig, recursive = TRUE)\n\nmessage(\"Working directory: \", getwd())\nmessage(\"tmap version: \", as.character(packageVersion(\"tmap\")))\nmessage(\"Date: \", as.character(Sys.Date()))\ntmap_options(show.messages = FALSE)  # 关闭“组件被缩放”等提示"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex01/ex01b.html#data-import",
    "href": "Hands-on_Ex/Hands-on_ex01/ex01b.html#data-import",
    "title": "Hands-on Exercise 01b: Choropleth Mapping (Population 2024)",
    "section": "Data Import",
    "text": "Data Import\n\nImport Geospatial Data (KML)\n\n\nCode\n# Import Master Plan 2019 Subzone Boundary (No Sea) from KML\nkml_file &lt;- file.path(path_geo, \"MasterPlan2019SubzoneBoundaryNoSeaKML.kml\")\n\nif (!file.exists(kml_file)) {\n  stop(\"KML file not found at: \", kml_file)\n}\n\n# Read KML file\nsubzone &lt;- st_read(kml_file, quiet = FALSE)\n\n\nReading layer `URA_MP19_SUBZONE_NO_SEA_PL' from data source \n  `C:\\Users\\HOPE\\Desktop\\ISSS626\\Hands-on_Ex\\Hands-on_ex01\\data\\geospatial\\MasterPlan2019SubzoneBoundaryNoSeaKML.kml' \n  using driver `KML'\nSimple feature collection with 332 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\nCode\n# Check if GEOMETRYCOLLECTION and extract polygons if needed\nif (any(st_geometry_type(subzone) == \"GEOMETRYCOLLECTION\")) {\n  message(\"Extracting POLYGON from GEOMETRYCOLLECTION...\")\n  subzone &lt;- st_collection_extract(subzone, \"POLYGON\")\n}\n\n# Transform to SVY21 (EPSG:3414)\nsubzone &lt;- st_transform(subzone, crs = 3414)\n\nmessage(\"CRS after transformation: EPSG:\", st_crs(subzone)$epsg)\n\n\n\n\nParse KML Attributes\n\n\nCode\n# Function to extract field from HTML description\nextract_kml_field &lt;- function(html_text, field_name) {\n  if (is.na(html_text) || html_text == \"\") return(NA_character_)\n  \n  page &lt;- read_html(html_text)\n  rows &lt;- page %&gt;% html_elements(\"tr\")\n  \n  # Find the row with matching field name\n  value &lt;- rows %&gt;%\n    keep(~ html_text2(html_element(.x, \"th\")) == field_name) %&gt;%\n    html_element(\"td\") %&gt;%\n    html_text2()\n  \n  if (length(value) == 0) NA_character_ else value\n}\n\n# Check if PLN_AREA_N and SUBZONE_N exist\nif (!all(c(\"PLN_AREA_N\", \"SUBZONE_N\") %in% names(subzone))) {\n  message(\"Extracting planning area and subzone names from Description field...\")\n  \n  # Extract fields from HTML description\n  subzone &lt;- subzone %&gt;%\n    mutate(\n      pln_area_n = map_chr(Description, extract_kml_field, \"PLN_AREA_N\"),\n      subzone_n = map_chr(Description, extract_kml_field, \"SUBZONE_N\")\n    ) %&gt;%\n    select(-Name, -Description)\n} else {\n  # If fields exist, just rename to snake_case\n  subzone &lt;- subzone %&gt;%\n    clean_names()\n}\n\n# Display sample data\nmessage(\"Subzone data structure:\")\nmessage(\"- Records: \", nrow(subzone))\nmessage(\"- Planning areas: \", n_distinct(subzone$pln_area_n))\n\n\n\n\nAggregate to Planning Area Level\n\n\nCode\n# Aggregate subzones to planning area level\nplanning &lt;- subzone %&gt;%\n  group_by(pln_area_n) %&gt;%\n  summarise(\n    do_union = TRUE,\n    .groups = 'drop'\n  )\n\nmessage(\"Planning areas created: \", nrow(planning))\n\n# Verify CRS\nstopifnot(st_crs(planning) == st_crs(3414))\n\n\n\n\nImport Population Data\n\n\nCode\n# --- Import population CSV (robust rename) ---\npop_file &lt;- file.path(path_asp, \"respopagesextod2024.csv\")\nif (!file.exists(pop_file)) stop(\"Population CSV file not found at: \", pop_file)\n\npop_raw &lt;- read_csv(pop_file, show_col_types = FALSE)\nmessage(\"Raw columns: \", paste(names(pop_raw), collapse = \", \"))\n\n# 标准化列名为小写下划线\npopdata &lt;- pop_raw %&gt;% janitor::clean_names()\n\nnm &lt;- names(popdata)\nif (\"planning_area\"     %in% nm) popdata &lt;- dplyr::rename(popdata, pa  = planning_area)\nif (\"planning_area_name\"%in% nm) popdata &lt;- dplyr::rename(popdata, pa  = planning_area_name)\nif (\"age_group\"         %in% nm) popdata &lt;- dplyr::rename(popdata, ag  = age_group)\nif (\"type_of_dwelling\"  %in% nm) popdata &lt;- dplyr::rename(popdata, tod = type_of_dwelling)\nif (\"value\"             %in% nm) popdata &lt;- dplyr::rename(popdata, pop = value)\n\npopdata &lt;- popdata %&gt;%\n  mutate(\n    pa  = str_squish(pa),\n    ag  = str_replace_all(str_to_lower(ag), \"\\\\s+\", \"_\"),\n    tod = str_squish(tod),\n    sex = str_squish(sex)\n  )\n\n\n# 映射不同写法 -&gt; 统一到 pa / ag / sex / tod / pop\n# （左边=原始列名，右边=统一后的列名）\nalias_map &lt;- c(\n  \"planning_area\"    = \"pa\",\n  \"planning_area_name\" = \"pa\",\n  \"pa\"               = \"pa\",\n  \"age_group\"        = \"ag\",\n  \"ag\"               = \"ag\",\n  \"sex\"              = \"sex\",\n  \"type_of_dwelling\" = \"tod\",\n  \"tod\"              = \"tod\",\n  \"value\"            = \"pop\",\n  \"population\"       = \"pop\"\n)\n\n# 只对存在的列做重命名：rename(new = old)\nmap &lt;- alias_map[names(alias_map) %in% names(popdata)]\npopdata &lt;- dplyr::rename(popdata, !!!setNames(names(map), map))\n\n# 现在这5列应该都在：pa / ag / sex / tod / pop\nneed &lt;- c(\"pa\", \"ag\", \"sex\", \"tod\", \"pop\")\nmiss &lt;- setdiff(need, names(popdata))\nif (length(miss)) stop(\"These required columns are missing after rename: \", paste(miss, collapse = \", \"))\n\n# 文本清洗：去多余空格，小写化 age_group 并把空格变下划线\npopdata &lt;- popdata %&gt;%\n  dplyr::mutate(\n    pa = stringr::str_squish(pa),\n    ag = stringr::str_replace_all(stringr::str_to_lower(ag), \"\\\\s+\", \"_\"),\n    tod = stringr::str_squish(tod),\n    sex = stringr::str_squish(sex)\n  )\n\nmessage(\"Normalized columns: \", paste(names(popdata), collapse = \", \"))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex01/ex01b.html#data-wrangling",
    "href": "Hands-on_Ex/Hands-on_ex01/ex01b.html#data-wrangling",
    "title": "Hands-on Exercise 01b: Choropleth Mapping (Population 2024)",
    "section": "Data Wrangling",
    "text": "Data Wrangling\n\nProcess Population Data\n\n\nCode\n# --- Process population BY SUBZONE (sum across Sex and TOD) ---\n\n# 前提：import-population 已 clean_names()，并把列名统一成 pa/sz/ag/sex/tod/pop/time\n# 如果你还没统一列名，请在 import-population 那块 clean_names() 后加：\n# nm &lt;- names(popdata)\n# if (\"planning_area\" %in% nm) popdata &lt;- dplyr::rename(popdata, pa = planning_area)\n# if (\"subzone\"       %in% nm) popdata &lt;- dplyr::rename(popdata, sz = subzone)\n# if (\"age_group\"     %in% nm) popdata &lt;- dplyr::rename(popdata, ag = age_group)\n# if (\"type_of_dwelling\" %in% nm) popdata &lt;- dplyr::rename(popdata, tod = type_of_dwelling)\n# if (\"value\"         %in% nm) popdata &lt;- dplyr::rename(popdata, pop = value)\n\n# 0) 只取 2024（如果有 time 列）\npop_w &lt;- popdata\nif (\"time\" %in% names(pop_w)) {\n  pop_w &lt;- pop_w %&gt;% dplyr::filter(time == max(time, na.rm = TRUE))\n}\n\n# 1) 不再按 Sex/TOD 过滤，直接“对子区+年龄段”把人头加总（= Total）\npop_sz &lt;- pop_w %&gt;%\n  dplyr::group_by(sz, ag) %&gt;%\n  dplyr::summarise(pop = sum(pop, na.rm = TRUE), .groups = \"drop\") %&gt;%\n  # 标准化子区名，提取起始年龄\n  dplyr::mutate(\n    sz_clean  = stringr::str_squish(stringr::str_to_upper(sz)),\n    ag_start  = readr::parse_integer(stringr::str_extract(ag, \"^[0-9]+\")),\n    age_category = dplyr::case_when(\n      !is.na(ag_start) & ag_start &lt;= 19 ~ \"young\",\n      !is.na(ag_start) & ag_start &lt;= 64 ~ \"econ\",\n      TRUE                              ~ \"aged\"\n    )\n  ) %&gt;%\n  dplyr::count(sz_clean, age_category, wt = pop, name = \"population\") %&gt;%\n  tidyr::complete(sz_clean, age_category, fill = list(population = 0)) %&gt;%\n  tidyr::pivot_wider(names_from = age_category, values_from = population, values_fill = 0)\n\n# 2) 指标（安全版）\nfor (col in c(\"young\",\"econ\",\"aged\")) if (!col %in% names(pop_sz)) pop_sz[[col]] &lt;- 0\npop_sz &lt;- pop_sz %&gt;%\n  dplyr::mutate(\n    total       = young + econ + aged,\n    aged_share  = dplyr::if_else(total &gt; 0, 100 * aged / total, 0),\n    dependency  = dplyr::if_else(econ  &gt; 0, 100 * (young + aged) / econ, NA_real_)\n  )\n\nmessage(\"Subzone-level population rows: \", nrow(pop_sz))\n\n\n\n\nJoin Spatial and Population Data\n\n\nCode\n# --- Build SZ -&gt; PA bridge from KML, then aggregate to PA ---\n\n# 注意：你的子区几何对象在前文叫 subzone（若叫 mpsz，请把下行的 subzone 改成 mpsz）\nbridge &lt;- subzone %&gt;%\n  sf::st_drop_geometry() %&gt;%\n  dplyr::transmute(\n    sz_clean       = stringr::str_squish(stringr::str_to_upper(subzone_n)),\n    pln_area_clean = stringr::str_squish(stringr::str_to_upper(pln_area_n))\n  ) %&gt;%\n  dplyr::distinct()\n\n# 子区人口接上映射 → 聚合到规划区\npop_pa &lt;- pop_sz %&gt;%\n  dplyr::left_join(bridge, by = \"sz_clean\") %&gt;%\n  dplyr::filter(!is.na(pln_area_clean)) %&gt;%\n  dplyr::group_by(pln_area_clean) %&gt;%\n  dplyr::summarise(\n    young = sum(young, na.rm = TRUE),\n    econ  = sum(econ,  na.rm = TRUE),\n    aged  = sum(aged,  na.rm = TRUE),\n    .groups = \"drop\"\n  ) %&gt;%\n  dplyr::mutate(\n    total       = young + econ + aged,\n    aged_share  = dplyr::if_else(total &gt; 0, 100 * aged / total, 0),\n    dependency  = dplyr::if_else(econ  &gt; 0, 100 * (young + aged) / econ, NA_real_)\n  )\n\nmessage(\"Aggregated to planning areas: \", nrow(pop_pa), \" (expected ≈55)\")\n\n# 用 inner_join 接回规划区几何（保证有值的区才保留）\nplanning &lt;- planning %&gt;% dplyr::mutate(\n  pln_area_clean = stringr::str_squish(stringr::str_to_upper(pln_area_n))\n)\nplanning_pop &lt;- planning %&gt;%\n  dplyr::inner_join(pop_pa, by = \"pln_area_clean\")\n\n# 必须 &gt;0（否则仍是 NA）\nstopifnot(sum(!is.na(planning_pop$aged_share)) &gt; 0)\nstopifnot(sum(!is.na(planning_pop$dependency)) &gt; 0)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex01/ex01b.html#create-choropleth-maps",
    "href": "Hands-on_Ex/Hands-on_ex01/ex01b.html#create-choropleth-maps",
    "title": "Hands-on Exercise 01b: Choropleth Mapping (Population 2024)",
    "section": "Create Choropleth Maps",
    "text": "Create Choropleth Maps\n\nMap A: Aged Population Share (65+)\n\n\nCode\ntmap_options(show.messages = FALSE)\n\n# Map A —— Aged 65+ share（过滤 NA，避免 Missing）\nplanning_aged &lt;- planning_pop[!is.na(planning_pop$aged_share) & !sf::st_is_empty(planning_pop), ]\n\nmap_aged &lt;- tm_shape(planning_aged) +\n  tm_polygons(col = \"aged_share\", style = \"quantile\", n = 5, palette = \"Reds\",\n              title = \"Aged Share (%)\") +\n  tm_layout(legend.outside = TRUE) +\n  tm_compass(type = \"8star\", size = 1.8, position = c(\"left\",\"top\")) +\n  tm_scale_bar(position = c(\"left\",\"bottom\")) +\n  tm_credits(\"Data: URA MP19 (No Sea), SingStat 2024\\nCRS: SVY21 / EPSG:3414\",\n             position = c(\"right\",\"bottom\"), size = 0.6)\n\nmap_aged\n\n\n\n\n\n\n\n\n\nCode\ntmap_save(map_aged, file.path(path_fig, \"ex01b_aged_share_quantile.png\"),\n          width = 1600, height = 1200, dpi = 300, units = \"px\")\n\n\n\n\nMap B: Dependency Ratio\n\n\nCode\n# Map B —— Dependency ratio（过滤 NA）\nplanning_dep &lt;- planning_pop[!is.na(planning_pop$dependency) & !sf::st_is_empty(planning_pop), ]\n\nmap_dependency &lt;- tm_shape(planning_dep) +\n  tm_polygons(col = \"dependency\", style = \"jenks\", n = 5, palette = \"PuBuGn\",\n              title = \"Dependency Ratio (%)\") +\n  tm_layout(legend.outside = TRUE) +\n  tm_compass(type = \"8star\", size = 1.8, position = c(\"left\",\"top\")) +\n  tm_scale_bar(position = c(\"left\",\"bottom\")) +\n  tm_credits(\"Data: URA MP19 (No Sea), SingStat 2024\\nCRS: SVY21 / EPSG:3414\",\n             position = c(\"right\",\"bottom\"), size = 0.6)\n\nmap_dependency\n\n\n\n\n\n\n\n\n\nCode\ntmap_save(map_dependency, file.path(path_fig, \"ex01b_dependency_jenks.png\"),\n          width = 1600, height = 1200, dpi = 300, units = \"px\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex01/ex01b.html#results",
    "href": "Hands-on_Ex/Hands-on_ex01/ex01b.html#results",
    "title": "Hands-on Exercise 01b: Choropleth Mapping (Population 2024)",
    "section": "Results",
    "text": "Results\nThe two choropleth maps have been successfully created and saved to the figures folder:\n\nMap A: Share of Aged Population (65+)\n\n\n\nAged Population Share\n\n\nThis map uses quantile classification with 5 classes to show the distribution of aged population (65 years and above) as a percentage of total population across Singapore’s planning areas. The red color ramp helps identify areas with higher concentrations of elderly residents.\n\n\nMap B: Dependency Ratio\n\n\n\nDependency Ratio\n\n\nThis map uses Jenks natural breaks classification with 5 classes to visualize the dependency ratio across planning areas. The dependency ratio represents the proportion of economically dependent population (young and aged) to the economically active population. The PuBuGn color scheme provides clear visual distinction between areas with different dependency levels."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex01/ex01b.html#summary-statistics",
    "href": "Hands-on_Ex/Hands-on_ex01/ex01b.html#summary-statistics",
    "title": "Hands-on Exercise 01b: Choropleth Mapping (Population 2024)",
    "section": "Summary Statistics",
    "text": "Summary Statistics\n\n\nCode\n# Display summary statistics\ncat(\"\\n=== Summary Statistics ===\\n\")\n\n\n\n=== Summary Statistics ===\n\n\nCode\ncat(\"\\nAged Population Share (%):\\n\")\n\n\n\nAged Population Share (%):\n\n\nCode\nsummary(planning_pop$aged_share)\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.000   1.639  14.964  12.790  21.026  28.801 \n\n\nCode\ncat(\"\\nDependency Ratio (%):\\n\")\n\n\n\nDependency Ratio (%):\n\n\nCode\nsummary(planning_pop$dependency)\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n  27.30   51.08   58.48   56.26   64.18   72.89      13 \n\n\nCode\n# Top 5 areas with highest aged share\ncat(\"\\nTop 5 Planning Areas - Highest Aged Share:\\n\")\n\n\n\nTop 5 Planning Areas - Highest Aged Share:\n\n\nCode\nplanning_pop %&gt;%\n  st_drop_geometry() %&gt;%\n  select(pln_area_n, aged_share) %&gt;%\n  arrange(desc(aged_share)) %&gt;%\n  head(5) %&gt;%\n  print()\n\n\n# A tibble: 5 × 2\n  pln_area_n   aged_share\n  &lt;chr&gt;             &lt;dbl&gt;\n1 OUTRAM             28.8\n2 ANG MO KIO         25.4\n3 ROCHOR             24.8\n4 SUNGEI KADUT       24.6\n5 BUKIT MERAH        24.5\n\n\nCode\n# Top 5 areas with highest dependency ratio\ncat(\"\\nTop 5 Planning Areas - Highest Dependency Ratio:\\n\")\n\n\n\nTop 5 Planning Areas - Highest Dependency Ratio:\n\n\nCode\nplanning_pop %&gt;%\n  st_drop_geometry() %&gt;%\n  select(pln_area_n, dependency) %&gt;%\n  arrange(desc(dependency)) %&gt;%\n  head(5) %&gt;%\n  print()\n\n\n# A tibble: 5 × 2\n  pln_area_n  dependency\n  &lt;chr&gt;            &lt;dbl&gt;\n1 OUTRAM            72.9\n2 CHANGI            71.4\n3 BUKIT TIMAH       70.6\n4 ANG MO KIO        67.9\n5 BUKIT MERAH       67.4\n\n\n\nEnd of Hands-on Exercise 01b"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex01/ex01a.html",
    "href": "Hands-on_Ex/Hands-on_ex01/ex01a.html",
    "title": "Hands-on Exercise 01a: Geospatial Data Wrangling",
    "section": "",
    "text": "This exercise focuses on importing, cleaning, and standardizing geospatial data for Singapore. We will process three spatial datasets (subzones, cycling paths, and pre-schools) and one aspatial dataset (Airbnb listings), ensuring all spatial data uses the SVY21 (EPSG:3414) coordinate reference system."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex01/ex01a.html#overview",
    "href": "Hands-on_Ex/Hands-on_ex01/ex01a.html#overview",
    "title": "Hands-on Exercise 01a: Geospatial Data Wrangling",
    "section": "",
    "text": "This exercise focuses on importing, cleaning, and standardizing geospatial data for Singapore. We will process three spatial datasets (subzones, cycling paths, and pre-schools) and one aspatial dataset (Airbnb listings), ensuring all spatial data uses the SVY21 (EPSG:3414) coordinate reference system."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex01/ex01a.html#setup-and-environment",
    "href": "Hands-on_Ex/Hands-on_ex01/ex01a.html#setup-and-environment",
    "title": "Hands-on Exercise 01a: Geospatial Data Wrangling",
    "section": "Setup and Environment",
    "text": "Setup and Environment\n\n\nCode\n# Load required packages (including lwgeom for geometry validation)\nif (!requireNamespace(\"pacman\", quietly = TRUE)) install.packages(\"pacman\")\n\npacman::p_load(sf, lwgeom, dplyr, readr, janitor, stringr, here, tmap, ggplot2, units)\n\n# Print session information for reproducibility\ncat(\"R version:\", R.version.string, \"\\n\")\n\n\nR version: R version 4.5.0 (2025-04-11 ucrt) \n\n\nCode\ncat(\"sf version:\", as.character(packageVersion(\"sf\")), \"\\n\")\n\n\nsf version: 1.0.20 \n\n\nCode\nmessage(\"Date: \", as.character(Sys.Date()))\n\n# Define path variables using here::here()\npath_root &lt;- here::here()\npath_ex01 &lt;- here::here(\"Hands-on_Ex\", \"Hands-on_ex01\")\npath_geo &lt;- here::here(\"Hands-on_Ex\", \"Hands-on_ex01\", \"data\", \"geospatial\")\npath_asp &lt;- here::here(\"Hands-on_Ex\", \"Hands-on_ex01\", \"data\", \"aspatial\")\n\n# Display paths for verification\nmessage(\"Project root: \", path_root)\nmessage(\"Exercise 01 path: \", path_ex01)\nmessage(\"Geospatial data path: \", path_geo)\nmessage(\"Aspatial data path: \", path_asp)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex01/ex01a.html#workflow",
    "href": "Hands-on_Ex/Hands-on_ex01/ex01a.html#workflow",
    "title": "Hands-on Exercise 01a: Geospatial Data Wrangling",
    "section": "Workflow",
    "text": "Workflow\n\nStep 1: Import Geospatial Data\n\n\nCode\n# 1.1 Import MP14_SUBZONE_WEB_PL (Polygon)\nmessage(\"\\n=== Importing Subzone Data ===\")\n\n\n\n=== Importing Subzone Data ===\n\n\nCode\nsubzone_file &lt;- file.path(path_geo, \"MP14_SUBZONE_WEB_PL.shp\")\nif (!file.exists(subzone_file)) {\n  stop(\"MP14_SUBZONE_WEB_PL.shp not found at: \", subzone_file,\n       \"\\nPlease ensure the file is placed in: \", path_geo)\n}\n\nmpsz &lt;- sf::st_read(dsn = path_geo, layer = \"MP14_SUBZONE_WEB_PL\", quiet = FALSE)\n\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\Users\\HOPE\\Desktop\\ISSS626\\Hands-on_Ex\\Hands-on_ex01\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nCode\nsub_crs &lt;- sf::st_crs(mpsz)\nif (is.na(sub_crs$epsg)) {\n  hint &lt;- paste(sub_crs$input, sub_crs$wkt)\n  if (grepl(\"SVY21|Singapore TM|3414\", hint, ignore.case = TRUE)) {\n    message(\"Subzone CRS shows 'SVY21' but EPSG is missing — setting EPSG:3414 explicitly.\")\n    mpsz &lt;- sf::st_set_crs(mpsz, 3414)\n  } else {\n    stop(\"Subzone CRS has no EPSG and doesn't look like SVY21. Check the .prj file.\")\n  }\n}\n\n\nSubzone CRS shows 'SVY21' but EPSG is missing — setting EPSG:3414 explicitly.\n\n\nCode\n# Display basic information\nmessage(\"Subzone data imported successfully\")\n\n\nSubzone data imported successfully\n\n\nCode\nmessage(\"- Records: \", nrow(mpsz))\n\n\n- Records: 323\n\n\nCode\nmessage(\"- CRS: \", sf::st_crs(mpsz)$input, \" | EPSG: \", sf::st_crs(mpsz)$epsg)\n\n\n- CRS: EPSG:3414 | EPSG: 3414\n\n\nCode\nmessage(\"- Geometry type: \", paste(unique(sf::st_geometry_type(mpsz)), collapse = \", \"))\n\n\n- Geometry type: MULTIPOLYGON\n\n\n\n\nCode\n# 1.2 Import CyclingPathGazette (Line)\nmessage(\"\\n=== Importing Cycling Path Data ===\")\n\n\n\n=== Importing Cycling Path Data ===\n\n\nCode\ncycling_file &lt;- file.path(path_geo, \"CyclingPath_Aug2025\", \"CyclingPathGazette.shp\")\nif (!file.exists(cycling_file)) {\n  stop(\"CyclingPathGazette.shp not found at: \", cycling_file,\n       \"\\nPlease ensure the file is placed in: \", file.path(path_geo, \"CyclingPath_Aug2025\"))\n}\n\ncycling_path &lt;- sf::st_read(cycling_file, quiet = FALSE)\n\n\nReading layer `CyclingPathGazette' from data source \n  `C:\\Users\\HOPE\\Desktop\\ISSS626\\Hands-on_Ex\\Hands-on_ex01\\data\\geospatial\\CyclingPath_Aug2025\\CyclingPathGazette.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 4674 features and 7 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 11721.1 ymin: 27550.13 xmax: 42809.37 ymax: 49702.59\nProjected CRS: SVY21\n\n\nCode\ncy_crs &lt;- sf::st_crs(cycling_path)\nif (is.na(cy_crs$epsg)) {\n  hint &lt;- paste(cy_crs$input, cy_crs$wkt)\n  if (grepl(\"SVY21|Singapore TM|3414\", hint, ignore.case = TRUE)) {\n    message(\"Cycling Path CRS shows 'SVY21' but EPSG is missing — setting EPSG:3414 explicitly.\")\n    cycling_path &lt;- sf::st_set_crs(cycling_path, 3414)\n  } else {\n    stop(\"Cycling Path CRS has no EPSG and doesn't look like SVY21. Check the .prj file.\")\n  }\n}\n\n\nCycling Path CRS shows 'SVY21' but EPSG is missing — setting EPSG:3414 explicitly.\n\n\nCode\n# Display basic information\nmessage(\"Cycling path data imported successfully\")\n\n\nCycling path data imported successfully\n\n\nCode\nmessage(\"- Records: \", nrow(cycling_path))\n\n\n- Records: 4674\n\n\nCode\nmessage(\"- CRS: \", sf::st_crs(cycling_path)$input, \" | EPSG: \", sf::st_crs(cycling_path)$epsg)\n\n\n- CRS: EPSG:3414 | EPSG: 3414\n\n\nCode\nmessage(\"- Geometry type: \", paste(unique(sf::st_geometry_type(cycling_path)), collapse = \", \"))\n\n\n- Geometry type: MULTILINESTRING\n\n\n\n\nCode\n# 1.3 Import PreSchoolsLocation (Point)\nmessage(\"\\n=== Importing Pre-Schools Data ===\")\n\n\n\n=== Importing Pre-Schools Data ===\n\n\nCode\npreschool_file &lt;- file.path(path_geo, \"PreSchoolsLocation.kml\")\nif (!file.exists(preschool_file)) {\n  stop(\"PreSchoolsLocation.kml not found at: \", preschool_file,\n       \"\\nPlease ensure the file is placed in: \", path_geo)\n}\n\npreschools &lt;- st_read(preschool_file, quiet = FALSE)\n\n\nReading layer `PRESCHOOLS_LOCATION' from data source \n  `C:\\Users\\HOPE\\Desktop\\ISSS626\\Hands-on_Ex\\Hands-on_ex01\\data\\geospatial\\PreSchoolsLocation.kml' \n  using driver `KML'\nSimple feature collection with 2290 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\nCode\n# Display basic information before transformation\nmessage(\"Pre-schools data imported successfully\")\n\n\nPre-schools data imported successfully\n\n\nCode\nmessage(\"- Records: \", nrow(preschools))\n\n\n- Records: 2290\n\n\nCode\nmessage(\"- Original CRS EPSG: \", st_crs(preschools)$epsg)\n\n\n- Original CRS EPSG: 4326\n\n\nCode\nmessage(\"- Geometry type: \", unique(st_geometry_type(preschools)))\n\n\n- Geometry type: POINT\n\n\n\n\nCode\n# 1.4 Import listings.csv (Aspatial)\nmessage(\"\\n=== Importing Airbnb Listings Data ===\")\n\n\n\n=== Importing Airbnb Listings Data ===\n\n\nCode\nlistings_file &lt;- file.path(path_asp, \"listings.csv\")\nif (!file.exists(listings_file)) {\n  stop(\"listings.csv not found at: \", listings_file,\n       \"\\nPlease ensure the file is placed in: \", path_asp)\n}\n\nlistings &lt;- read_csv(listings_file, show_col_types = FALSE)\n\n# Verify required columns exist\nif (!all(c(\"latitude\", \"longitude\") %in% names(listings))) {\n  stop(\"listings.csv must contain 'latitude' and 'longitude' columns\")\n}\n\nmessage(\"Listings data imported successfully\")\n\n\nListings data imported successfully\n\n\nCode\nmessage(\"- Records: \", nrow(listings))\n\n\n- Records: 3659\n\n\nCode\nmessage(\"- Columns: \", ncol(listings))\n\n\n- Columns: 79\n\n\nCode\nmessage(\"- Latitude/Longitude columns: VERIFIED\")\n\n\n- Latitude/Longitude columns: VERIFIED\n\n\n\n\nStep 2: Exploratory Data Inspection (Ch. 1.5–1.6)\n\n\nCode\nmessage(\"\\n=== Inspecting Subzone Data Structure ===\")\n\n\n\n=== Inspecting Subzone Data Structure ===\n\n\nCode\n# Geometry column summary and CRS bbox overview\nprint(st_geometry(mpsz))\n\n\nGeometry set for 323 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21 / Singapore TM\nFirst 5 geometries:\n\n\nMULTIPOLYGON (((31495.56 30140.01, 31980.96 296...\n\n\nMULTIPOLYGON (((29092.28 30021.89, 29119.64 300...\n\n\nMULTIPOLYGON (((29932.33 29879.12, 29947.32 298...\n\n\nMULTIPOLYGON (((27131.28 30059.73, 27088.33 297...\n\n\nMULTIPOLYGON (((26451.03 30396.46, 26440.47 303...\n\n\nCode\nprint(st_bbox(mpsz))\n\n\n     xmin      ymin      xmax      ymax \n 2667.538 15748.721 56396.440 50256.334 \n\n\nCode\n# Attribute glimpse and sample records\nglimpse(mpsz)\n\n\nRows: 323\nColumns: 16\n$ OBJECTID   &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, …\n$ SUBZONE_NO &lt;int&gt; 1, 1, 3, 8, 3, 7, 9, 2, 13, 7, 12, 6, 1, 5, 1, 1, 3, 2, 2, …\n$ SUBZONE_N  &lt;chr&gt; \"MARINA SOUTH\", \"PEARL'S HILL\", \"BOAT QUAY\", \"HENDERSON HIL…\n$ SUBZONE_C  &lt;chr&gt; \"MSSZ01\", \"OTSZ01\", \"SRSZ03\", \"BMSZ08\", \"BMSZ03\", \"BMSZ07\",…\n$ CA_IND     &lt;chr&gt; \"Y\", \"Y\", \"Y\", \"N\", \"N\", \"N\", \"N\", \"Y\", \"N\", \"N\", \"N\", \"N\",…\n$ PLN_AREA_N &lt;chr&gt; \"MARINA SOUTH\", \"OUTRAM\", \"SINGAPORE RIVER\", \"BUKIT MERAH\",…\n$ PLN_AREA_C &lt;chr&gt; \"MS\", \"OT\", \"SR\", \"BM\", \"BM\", \"BM\", \"BM\", \"SR\", \"QT\", \"QT\",…\n$ REGION_N   &lt;chr&gt; \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENT…\n$ REGION_C   &lt;chr&gt; \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\",…\n$ INC_CRC    &lt;chr&gt; \"5ED7EB253F99252E\", \"8C7149B9EB32EEFC\", \"C35FEFF02B13E0E5\",…\n$ FMEL_UPD_D &lt;date&gt; 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05…\n$ X_ADDR     &lt;dbl&gt; 31595.84, 28679.06, 29654.96, 26782.83, 26201.96, 25358.82,…\n$ Y_ADDR     &lt;dbl&gt; 29220.19, 29782.05, 29974.66, 29933.77, 30005.70, 29991.38,…\n$ SHAPE_Leng &lt;dbl&gt; 5267.381, 3506.107, 1740.926, 3313.625, 2825.594, 4428.913,…\n$ SHAPE_Area &lt;dbl&gt; 1630379.27, 559816.25, 160807.50, 595428.89, 387429.44, 103…\n$ geometry   &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((31495.56 30..., MULTIPOLYGON (…\n\n\nCode\nprint(head(mpsz, 3))\n\n\nSimple feature collection with 3 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 28160.23 ymin: 28369.47 xmax: 32362.39 ymax: 30247.18\nProjected CRS: SVY21 / Singapore TM\n  OBJECTID SUBZONE_NO    SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N PLN_AREA_C\n1        1          1 MARINA SOUTH    MSSZ01      Y    MARINA SOUTH         MS\n2        2          1 PEARL'S HILL    OTSZ01      Y          OUTRAM         OT\n3        3          3    BOAT QUAY    SRSZ03      Y SINGAPORE RIVER         SR\n        REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR   Y_ADDR\n1 CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84 29220.19\n2 CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06 29782.05\n3 CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96 29974.66\n  SHAPE_Leng SHAPE_Area                       geometry\n1   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n\n\n\n\nCode\nmessage(\"\\n=== Inspecting Cycling Path Data Structure ===\")\n\n\n\n=== Inspecting Cycling Path Data Structure ===\n\n\nCode\nprint(st_geometry(cycling_path))\n\n\nGeometry set for 4674 features \nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 11721.1 ymin: 27550.13 xmax: 42809.37 ymax: 49702.59\nProjected CRS: SVY21 / Singapore TM\nFirst 5 geometries:\n\n\nMULTILINESTRING ((40128.23 37076.74, 40130.44 3...\n\n\nMULTILINESTRING ((35123.93 42970.72, 35121.12 4...\n\n\nMULTILINESTRING ((35088.86 42820.93, 35089.18 4...\n\n\nMULTILINESTRING ((35099.12 42871.11, 35097.69 4...\n\n\nMULTILINESTRING ((16031.65 36921.59, 16035.79 3...\n\n\nCode\nprint(st_bbox(cycling_path))\n\n\n    xmin     ymin     xmax     ymax \n11721.10 27550.13 42809.37 49702.59 \n\n\nCode\nglimpse(cycling_path)\n\n\nRows: 4,674\nColumns: 8\n$ RD_CD      &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ PLANNING_A &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ PATH_OWNER &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ SHAPE_LEN  &lt;dbl&gt; 18.732594, 94.469928, 9.169593, 51.320348, 29.886054, 38.38…\n$ PLANNING_1 &lt;chr&gt; \"TAMPINES\", \"PUNGGOL\", \"PUNGGOL\", \"PUNGGOL\", \"JURONG WEST\",…\n$ RD_CD_DESC &lt;chr&gt; \"TAMPINES AVENUE 4\", \"PUNGGOL FIELD\", \"PUNGGOL FIELD\", \"PUN…\n$ PATH_OWN_1 &lt;chr&gt; \"Land Transport Authority\", \"Land Transport Authority\", \"La…\n$ geometry   &lt;MULTILINESTRING [m]&gt; MULTILINESTRING ((40128.23 ..., MULTILINEST…\n\n\nCode\nprint(head(cycling_path, 3))\n\n\nSimple feature collection with 3 features and 7 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 35088.86 ymin: 37076.69 xmax: 40146.92 ymax: 42970.72\nProjected CRS: SVY21 / Singapore TM\n  RD_CD PLANNING_A PATH_OWNER SHAPE_LEN PLANNING_1        RD_CD_DESC\n1  &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt; 18.732594   TAMPINES TAMPINES AVENUE 4\n2  &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt; 94.469928    PUNGGOL     PUNGGOL FIELD\n3  &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt;  9.169593    PUNGGOL     PUNGGOL FIELD\n                PATH_OWN_1                       geometry\n1 Land Transport Authority MULTILINESTRING ((40128.23 ...\n2 Land Transport Authority MULTILINESTRING ((35123.93 ...\n3 Land Transport Authority MULTILINESTRING ((35088.86 ...\n\n\n\n\nCode\nmessage(\"\\n=== Inspecting Pre-School Data Structure ===\")\n\n\n\n=== Inspecting Pre-School Data Structure ===\n\n\nCode\nprint(st_geometry(preschools))\n\n\nGeometry set for 2290 features \nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nFirst 5 geometries:\n\n\nPOINT Z (103.8072 1.299333 0)\n\n\nPOINT Z (103.826 1.312839 0)\n\n\nPOINT Z (103.8409 1.348843 0)\n\n\nPOINT Z (103.8048 1.435024 0)\n\n\nPOINT Z (103.839 1.33315 0)\n\n\nCode\nprint(st_bbox(preschools))\n\n\n      xmin       ymin       xmax       ymax \n103.687842   1.247759 103.989707   1.462134 \n\n\nCode\nglimpse(preschools)\n\n\nRows: 2,290\nColumns: 3\n$ Name        &lt;chr&gt; \"kml_1\", \"kml_2\", \"kml_3\", \"kml_4\", \"kml_5\", \"kml_6\", \"kml…\n$ Description &lt;chr&gt; \"&lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Att…\n$ geometry    &lt;POINT [°]&gt; POINT Z (103.8072 1.299333 0), POINT Z (103.826 1.31…\n\n\nCode\nprint(head(preschools, 3))\n\n\nSimple feature collection with 3 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.8072 ymin: 1.299333 xmax: 103.8409 ymax: 1.348843\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n   Name\n1 kml_1\n2 kml_2\n3 kml_3\n                                                                                                                                                                                                                                                                                                                                                                                          Description\n1     &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;CENTRE_NAME&lt;/th&gt; &lt;td&gt;CHILDREN'S COVE PRESCHOOL PTE.LTD.&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;CENTRE_CODE&lt;/th&gt; &lt;td&gt;PT9390&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;498CC9FE48CC94D4&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20211201093631&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt;\n2              &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;CENTRE_NAME&lt;/th&gt; &lt;td&gt;CHILDREN'S COVE PTE. LTD.&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;CENTRE_CODE&lt;/th&gt; &lt;td&gt;PT8675&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;22877550804213FD&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20211201093631&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt;\n3 &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;CENTRE_NAME&lt;/th&gt; &lt;td&gt;CHILDREN'S VINEYARD PRESCHOOL PTE. LTD&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;CENTRE_CODE&lt;/th&gt; &lt;td&gt;PT9308&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;B2FE90E44AD494E3&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20211201093631&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt;\n                       geometry\n1 POINT Z (103.8072 1.299333 0)\n2  POINT Z (103.826 1.312839 0)\n3 POINT Z (103.8409 1.348843 0)\n\n\n\n\nCode\nmessage(\"\\n=== Quick Look Plots (Chapter 1.6) ===\")\n\n\n\n=== Quick Look Plots (Chapter 1.6) ===\n\n\nCode\nop &lt;- par(mfrow = c(2, 2))\nplot(mpsz, main = \"MPSZ Subzones\")\n\n\n\n\n\n\n\n\n\nCode\nplot(st_geometry(mpsz), main = \"Subzone Geometry Only\")\nif (\"PLN_AREA_N\" %in% names(mpsz)) {\n  plot(mpsz[\"PLN_AREA_N\"], main = \"Planning Area Names\")\n} else if (\"pln_area_n\" %in% names(mpsz)) {\n  plot(mpsz[\"pln_area_n\"], main = \"Planning Area Names\")\n} else {\n  plot(st_geometry(mpsz), main = \"Planning Area Names\")\n}\n\n\n\n\n\n\n\n\n\nCode\nplot(st_geometry(mpsz), main = \"Subzones with Pre-Schools\")\nplot(st_geometry(preschools), add = TRUE, col = \"red\", pch = 20)\npar(op)\n\n\n\n\n\n\n\n\n\n\n\nStep 3: Converting Aspatial Data to sf (Ch. 1.8.2)\n\n\nCode\nmessage(\"\\n=== Converting Airbnb Listings to sf ===\")\n\n\n\n=== Converting Airbnb Listings to sf ===\n\n\nCode\nlistings_sf &lt;- listings %&gt;%\n  st_as_sf(coords = c(\"longitude\", \"latitude\"), crs = 4326, remove = FALSE) %&gt;%\n  st_transform(3414)\n\nmessage(\"Listings converted to sf with CRS EPSG:\", st_crs(listings_sf)$epsg)\n\n\nListings converted to sf with CRS EPSG:3414\n\n\nCode\nglimpse(listings_sf)\n\n\nRows: 3,659\nColumns: 80\n$ id                                           &lt;dbl&gt; 71609, 71896, 71903, 2753…\n$ listing_url                                  &lt;chr&gt; \"https://www.airbnb.com/r…\n$ scrape_id                                    &lt;dbl&gt; 2.025063e+13, 2.025063e+1…\n$ last_scraped                                 &lt;date&gt; 2025-06-26, 2025-06-27, …\n$ source                                       &lt;chr&gt; \"city scrape\", \"previous …\n$ name                                         &lt;chr&gt; \"Ensuite Room (Room 1 & 2…\n$ description                                  &lt;chr&gt; \"For 3 rooms.Book room 1&…\n$ neighborhood_overview                        &lt;chr&gt; NA, NA, \"Quiet and view o…\n$ picture_url                                  &lt;chr&gt; \"https://a0.muscache.com/…\n$ host_id                                      &lt;dbl&gt; 367042, 367042, 367042, 1…\n$ host_url                                     &lt;chr&gt; \"https://www.airbnb.com/u…\n$ host_name                                    &lt;chr&gt; \"Belinda\", \"Belinda\", \"Be…\n$ host_since                                   &lt;date&gt; 2011-01-29, 2011-01-29, …\n$ host_location                                &lt;chr&gt; \"Singapore\", \"Singapore\",…\n$ host_about                                   &lt;chr&gt; \"Hi My name is Belinda -H…\n$ host_response_time                           &lt;chr&gt; \"within an hour\", \"within…\n$ host_response_rate                           &lt;chr&gt; \"100%\", \"100%\", \"100%\", \"…\n$ host_acceptance_rate                         &lt;chr&gt; \"100%\", \"100%\", \"100%\", \"…\n$ host_is_superhost                            &lt;lgl&gt; FALSE, FALSE, FALSE, FALS…\n$ host_thumbnail_url                           &lt;chr&gt; \"https://a0.muscache.com/…\n$ host_picture_url                             &lt;chr&gt; \"https://a0.muscache.com/…\n$ host_neighbourhood                           &lt;chr&gt; \"Tampines\", \"Tampines\", \"…\n$ host_listings_count                          &lt;dbl&gt; 5, 5, 5, 59, 59, 7, 59, 5…\n$ host_total_listings_count                    &lt;dbl&gt; 10, 10, 10, 88, 88, 8, 88…\n$ host_verifications                           &lt;chr&gt; \"['email', 'phone']\", \"['…\n$ host_has_profile_pic                         &lt;lgl&gt; TRUE, TRUE, TRUE, TRUE, T…\n$ host_identity_verified                       &lt;lgl&gt; TRUE, TRUE, TRUE, TRUE, T…\n$ neighbourhood                                &lt;chr&gt; NA, NA, \"Singapore, Singa…\n$ neighbourhood_cleansed                       &lt;chr&gt; \"Tampines\", \"Tampines\", \"…\n$ neighbourhood_group_cleansed                 &lt;chr&gt; \"East Region\", \"East Regi…\n$ latitude                                     &lt;dbl&gt; 1.34537, 1.34754, 1.34531…\n$ longitude                                    &lt;dbl&gt; 103.9589, 103.9596, 103.9…\n$ property_type                                &lt;chr&gt; \"Private room in villa\", …\n$ room_type                                    &lt;chr&gt; \"Private room\", \"Private …\n$ accommodates                                 &lt;dbl&gt; 2, 1, 2, 1, 1, 2, 1, 1, 1…\n$ bathrooms                                    &lt;dbl&gt; 1.0, NA, 0.5, NA, NA, 1.0…\n$ bathrooms_text                               &lt;chr&gt; \"1 private bath\", \"Shared…\n$ bedrooms                                     &lt;dbl&gt; 2, NA, 1, NA, NA, 2, NA, …\n$ beds                                         &lt;dbl&gt; 3, NA, 2, NA, NA, 1, NA, …\n$ amenities                                    &lt;chr&gt; \"[\\\"Shampoo\\\", \\\"Fire pit…\n$ price                                        &lt;chr&gt; \"$143.00\", NA, \"$76.00\", …\n$ minimum_nights                               &lt;dbl&gt; 92, 92, 92, 180, 180, 92,…\n$ maximum_nights                               &lt;dbl&gt; 365, 365, 365, 999, 999, …\n$ minimum_minimum_nights                       &lt;dbl&gt; 92, 92, 92, 180, 180, 92,…\n$ maximum_minimum_nights                       &lt;dbl&gt; 92, 92, 92, 180, 180, 92,…\n$ minimum_maximum_nights                       &lt;dbl&gt; 1125, 1125, 1125, 1125, 1…\n$ maximum_maximum_nights                       &lt;dbl&gt; 1125, 1125, 1125, 1125, 1…\n$ minimum_nights_avg_ntm                       &lt;dbl&gt; 92, 92, 92, 180, 180, 92,…\n$ maximum_nights_avg_ntm                       &lt;dbl&gt; 1125, 1125, 1125, 1125, 1…\n$ calendar_updated                             &lt;lgl&gt; NA, NA, NA, NA, NA, NA, N…\n$ has_availability                             &lt;lgl&gt; TRUE, TRUE, TRUE, TRUE, T…\n$ availability_30                              &lt;dbl&gt; 30, 20, 30, 0, 0, 30, 0, …\n$ availability_60                              &lt;dbl&gt; 60, 49, 60, 24, 25, 60, 2…\n$ availability_90                              &lt;dbl&gt; 90, 79, 90, 54, 55, 90, 5…\n$ availability_365                             &lt;dbl&gt; 90, 79, 90, 153, 153, 365…\n$ calendar_last_scraped                        &lt;date&gt; 2025-06-26, 2025-06-27, …\n$ number_of_reviews                            &lt;dbl&gt; 19, 24, 46, 20, 16, 131, …\n$ number_of_reviews_ltm                        &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ number_of_reviews_l30d                       &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ availability_eoy                             &lt;dbl&gt; 90, 79, 90, 153, 153, 185…\n$ number_of_reviews_ly                         &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ estimated_occupancy_l365d                    &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ estimated_revenue_l365d                      &lt;dbl&gt; 0, NA, 0, NA, NA, 0, NA, …\n$ first_review                                 &lt;date&gt; 2011-12-19, 2011-07-30, …\n$ last_review                                  &lt;date&gt; 2020-01-17, 2019-10-13, …\n$ review_scores_rating                         &lt;dbl&gt; 4.44, 4.16, 4.41, 4.40, 4…\n$ review_scores_accuracy                       &lt;dbl&gt; 4.37, 4.22, 4.39, 4.16, 4…\n$ review_scores_cleanliness                    &lt;dbl&gt; 4.00, 4.09, 4.52, 4.26, 4…\n$ review_scores_checkin                        &lt;dbl&gt; 4.63, 4.43, 4.63, 4.47, 4…\n$ review_scores_communication                  &lt;dbl&gt; 4.78, 4.43, 4.64, 4.42, 4…\n$ review_scores_location                       &lt;dbl&gt; 4.26, 4.17, 4.50, 4.53, 4…\n$ review_scores_value                          &lt;dbl&gt; 4.32, 4.04, 4.36, 4.63, 4…\n$ license                                      &lt;chr&gt; NA, NA, NA, \"S0399\", \"S03…\n$ instant_bookable                             &lt;lgl&gt; FALSE, FALSE, FALSE, TRUE…\n$ calculated_host_listings_count               &lt;dbl&gt; 5, 5, 5, 58, 58, 7, 58, 5…\n$ calculated_host_listings_count_entire_homes  &lt;dbl&gt; 0, 0, 0, 0, 0, 1, 0, 0, 0…\n$ calculated_host_listings_count_private_rooms &lt;dbl&gt; 5, 5, 5, 58, 58, 6, 58, 5…\n$ calculated_host_listings_count_shared_rooms  &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ reviews_per_month                            &lt;dbl&gt; 0.12, 0.14, 0.27, 0.13, 0…\n$ geometry                                     &lt;POINT [m]&gt; POINT (41972.5 3639…\n\n\nCode\nprint(head(listings_sf, 3))\n\n\nSimple feature collection with 3 features and 79 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 41972.5 ymin: 36383.43 xmax: 42209.55 ymax: 36630.01\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 3 × 80\n     id listing_url              scrape_id last_scraped source name  description\n  &lt;dbl&gt; &lt;chr&gt;                        &lt;dbl&gt; &lt;date&gt;       &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;      \n1 71609 https://www.airbnb.com/…   2.03e13 2025-06-26   city … Ensu… For 3 room…\n2 71896 https://www.airbnb.com/…   2.03e13 2025-06-27   previ… B&B … &lt;NA&gt;       \n3 71903 https://www.airbnb.com/…   2.03e13 2025-06-27   city … Room… Like your …\n# ℹ 73 more variables: neighborhood_overview &lt;chr&gt;, picture_url &lt;chr&gt;,\n#   host_id &lt;dbl&gt;, host_url &lt;chr&gt;, host_name &lt;chr&gt;, host_since &lt;date&gt;,\n#   host_location &lt;chr&gt;, host_about &lt;chr&gt;, host_response_time &lt;chr&gt;,\n#   host_response_rate &lt;chr&gt;, host_acceptance_rate &lt;chr&gt;,\n#   host_is_superhost &lt;lgl&gt;, host_thumbnail_url &lt;chr&gt;, host_picture_url &lt;chr&gt;,\n#   host_neighbourhood &lt;chr&gt;, host_listings_count &lt;dbl&gt;,\n#   host_total_listings_count &lt;dbl&gt;, host_verifications &lt;chr&gt;, …\n\n\n\n\nCode\nmessage(\"\\n=== DIY Map: Airbnb Listings over Subzones ===\")\n\nold_tmap_mode &lt;- tmap_mode(\"plot\")\n\ntmap::tm_shape(mpsz) +\n  tmap::tm_polygons(col = \"grey90\", border.col = \"grey60\") +\n  tmap::tm_shape(listings_sf) +\n  tmap::tm_symbols(col = \"tomato\", size = 0.03, alpha = 0.5) +\n  tmap::tm_layout(\n    title = \"Airbnb Listings across Singapore Subzones\",\n    legend.show = FALSE,\n    frame = FALSE\n  )\n\n\n\n\n\n\n\n\n\nCode\ntmap_mode(old_tmap_mode)\n\n\n\n\nStep 4: Coordinate System Transformation and Validation\n\n\nCode\nmessage(\"\\n=== CRS Transformation and Validation ===\")\n\n\n\n=== CRS Transformation and Validation ===\n\n\nCode\n# Define target CRS\ncrs_target &lt;- sf::st_crs(3414)\n\n# Transform Pre-Schools from WGS84 (4326) to SVY21 (3414)\nif (st_crs(preschools)$epsg == 4326) {\n  message(\"Transforming Pre-Schools from EPSG:4326 to EPSG:3414...\")\n  preschools &lt;- st_transform(preschools, crs = crs_target)\n  message(\"Transformation completed\")\n} else if (st_crs(preschools) != crs_target) {\n  stop(\"Unexpected CRS for Pre-Schools. Expected 4326 or 3414, got: \", \n       st_crs(preschools)$epsg)\n}\n\n\nTransforming Pre-Schools from EPSG:4326 to EPSG:3414...\n\n\nTransformation completed\n\n\nCode\n# Handle potential GEOMETRYCOLLECTION from KML\nif (any(st_geometry_type(preschools) == \"GEOMETRYCOLLECTION\")) {\n  message(\"Extracting POINT geometries from GEOMETRYCOLLECTION...\")\n  preschools &lt;- st_collection_extract(preschools, \"POINT\")\n}\n\n# Verify all spatial data is in EPSG:3414\nmessage(\"\\nVerifying CRS consistency...\")\n\n\n\nVerifying CRS consistency...\n\n\nCode\n# Assert CRS for all spatial datasets using object comparison\nif (st_crs(mpsz) != crs_target) {\n  stop(\"Subzone CRS is not EPSG:3414. Current CRS: \", st_crs(mpsz)$input)\n}\n\nif (st_crs(cycling_path) != crs_target) {\n  stop(\"Cycling Path CRS is not EPSG:3414. Current CRS: \", st_crs(cycling_path)$input)\n}\n\nif (st_crs(preschools) != crs_target) {\n  stop(\"Pre-Schools CRS is not EPSG:3414 after transform. Current CRS: \", st_crs(preschools)$input)\n}\n\nmessage(\"✓ All spatial datasets are in EPSG:3414 (SVY21)\")\n\n\n✓ All spatial datasets are in EPSG:3414 (SVY21)\n\n\nCode\n# Verify geometry types\nmessage(\"\\nVerifying geometry types...\")\n\n\n\nVerifying geometry types...\n\n\nCode\n# Check subzone geometry\nsubzone_geom &lt;- unique(st_geometry_type(mpsz))\nif (!all(subzone_geom %in% c(\"POLYGON\", \"MULTIPOLYGON\"))) {\n  stop(\"Subzone should be POLYGON or MULTIPOLYGON, got: \", paste(subzone_geom, collapse=\", \"))\n}\n\n# Check cycling path geometry  \ncycling_geom &lt;- unique(st_geometry_type(cycling_path))\nif (!all(cycling_geom %in% c(\"LINESTRING\", \"MULTILINESTRING\"))) {\n  stop(\"Cycling Path should be LINESTRING or MULTILINESTRING, got: \", paste(cycling_geom, collapse=\", \"))\n}\n\n# Check preschools geometry\npreschool_geom &lt;- unique(st_geometry_type(preschools))\nif (!all(preschool_geom %in% c(\"POINT\"))) {\n  stop(\"Pre-Schools should be POINT, got: \", paste(preschool_geom, collapse=\", \"))\n}\n\nmessage(\"✓ All geometry types verified\")\n\n\n✓ All geometry types verified\n\n\n\n\nStep 5: Data Cleaning and Standardization\n\n\nCode\nmessage(\"\\n=== Data Cleaning and Standardization ===\")\n\n\n\n=== Data Cleaning and Standardization ===\n\n\nCode\n# 3.1 Clean column names (snake_case)\nmessage(\"Standardizing column names to snake_case...\")\n\n\nStandardizing column names to snake_case...\n\n\nCode\nmpsz &lt;- mpsz %&gt;% janitor::clean_names()\ncycling_path &lt;- cycling_path %&gt;% janitor::clean_names()\npreschools &lt;- preschools %&gt;% janitor::clean_names()\n\n# 3.2 Select and retain key fields\nmessage(\"Selecting key fields...\")\n\n\nSelecting key fields...\n\n\nCode\n# For subzone: retain subzone_n and pln_area_n\nif (all(c(\"subzone_n\", \"pln_area_n\") %in% names(mpsz))) {\n  mpsz_clean &lt;- mpsz %&gt;%\n    select(subzone_n, pln_area_n, geometry)\n} else {\n  message(\"Note: Expected fields 'subzone_n' or 'pln_area_n' not found. Retaining all fields.\")\n  mpsz_clean &lt;- mpsz\n}\n\n# For cycling path: retain basic identification fields\ncycling_clean &lt;- cycling_path %&gt;%\n  select(any_of(c(\"objectid\", \"name\", \"type\", \"status\")), geometry)\n\n# For preschools: retain name field\nif (\"name\" %in% names(preschools)) {\n  preschools_clean &lt;- preschools %&gt;%\n    select(name, geometry)\n} else {\n  message(\"Note: 'name' field not found in Pre-Schools. Retaining all fields.\")\n  preschools_clean &lt;- preschools\n}\n\n# 3.3 Remove empty geometries\nmessage(\"Checking for empty geometries...\")\n\n\nChecking for empty geometries...\n\n\nCode\n# Check and remove empty geometries\nn_empty_mpsz &lt;- sum(st_is_empty(mpsz_clean))\nn_empty_cycling &lt;- sum(st_is_empty(cycling_clean))\nn_empty_preschools &lt;- sum(st_is_empty(preschools_clean))\n\nif (n_empty_mpsz &gt; 0) {\n  message(\"Removing \", n_empty_mpsz, \" empty geometries from subzone data\")\n  mpsz_clean &lt;- mpsz_clean[!st_is_empty(mpsz_clean), ]\n}\n\nif (n_empty_cycling &gt; 0) {\n  message(\"Removing \", n_empty_cycling, \" empty geometries from cycling path data\")\n  cycling_clean &lt;- cycling_clean[!st_is_empty(cycling_clean), ]\n}\n\nif (n_empty_preschools &gt; 0) {\n  message(\"Removing \", n_empty_preschools, \" empty geometries from preschools data\")\n  preschools_clean &lt;- preschools_clean[!st_is_empty(preschools_clean), ]\n}\n\nmessage(\"✓ Data cleaning completed\")\n\n\n✓ Data cleaning completed\n\n\nCode\n# 3.4 Make geometries valid if needed\nmessage(\"Validating geometries...\")\n\n\nValidating geometries...\n\n\nCode\n# Check and fix invalid geometries\nif (any(!st_is_valid(mpsz_clean))) {\n  message(\"Fixing invalid geometries in subzone data...\")\n  mpsz_clean &lt;- st_make_valid(mpsz_clean)\n}\n\n\nFixing invalid geometries in subzone data...\n\n\nCode\nif (any(!st_is_valid(cycling_clean))) {\n  message(\"Fixing invalid geometries in cycling path data...\")\n  cycling_clean &lt;- st_make_valid(cycling_clean)\n}\n\nif (any(!st_is_valid(preschools_clean))) {\n  message(\"Fixing invalid geometries in preschools data...\")\n  preschools_clean &lt;- st_make_valid(preschools_clean)\n}\n\nmessage(\"✓ All geometries are valid\")\n\n\n✓ All geometries are valid\n\n\n\n\nStep 6: Export Clean Data\n\n\nCode\nmessage(\"\\n=== Exporting Clean Data ===\")\n\n\n\n=== Exporting Clean Data ===\n\n\nCode\n# Define output file paths\nsubzone_out &lt;- file.path(path_geo, \"clean_subzone.gpkg\")\ncycling_out &lt;- file.path(path_geo, \"clean_cycling_path.gpkg\")\npreschools_out &lt;- file.path(path_geo, \"clean_preschools_svy21.gpkg\")\n\n# Remove existing files to avoid multiple layers\nif (file.exists(subzone_out)) {\n  message(\"Removing existing clean_subzone.gpkg\")\n  file.remove(subzone_out)\n}\n\n\nRemoving existing clean_subzone.gpkg\n\n\n[1] TRUE\n\n\nCode\nif (file.exists(cycling_out)) {\n  message(\"Removing existing clean_cycling_path.gpkg\")\n  file.remove(cycling_out)\n}\n\n\nRemoving existing clean_cycling_path.gpkg\n\n\n[1] TRUE\n\n\nCode\nif (file.exists(preschools_out)) {\n  message(\"Removing existing clean_preschools_svy21.gpkg\")\n  file.remove(preschools_out)\n}\n\n\nRemoving existing clean_preschools_svy21.gpkg\n\n\n[1] TRUE\n\n\nCode\n# Export to GeoPackage\nmessage(\"Writing clean data to GeoPackage files...\")\n\n\nWriting clean data to GeoPackage files...\n\n\nCode\nst_write(mpsz_clean, subzone_out, layer = \"subzone\", quiet = FALSE)\n\n\nWriting layer `subzone' to data source \n  `C:/Users/HOPE/Desktop/ISSS626/Hands-on_Ex/Hands-on_ex01/data/geospatial/clean_subzone.gpkg' using driver `GPKG'\nWriting 323 features with 2 fields and geometry type Unknown (any).\n\n\nCode\nst_write(cycling_clean, cycling_out, layer = \"cycling_path\", quiet = FALSE)\n\n\nWriting layer `cycling_path' to data source \n  `C:/Users/HOPE/Desktop/ISSS626/Hands-on_Ex/Hands-on_ex01/data/geospatial/clean_cycling_path.gpkg' using driver `GPKG'\nWriting 4674 features with 0 fields and geometry type Multi Line String.\n\n\nCode\nst_write(preschools_clean, preschools_out, layer = \"preschools\", quiet = FALSE)\n\n\nWriting layer `preschools' to data source \n  `C:/Users/HOPE/Desktop/ISSS626/Hands-on_Ex/Hands-on_ex01/data/geospatial/clean_preschools_svy21.gpkg' using driver `GPKG'\nWriting 2290 features with 1 fields and geometry type 3D Point.\n\n\nCode\nmessage(\"\\n✓ All clean data exported successfully\")\n\n\n\n✓ All clean data exported successfully\n\n\nCode\nmessage(\"Output files:\")\n\n\nOutput files:\n\n\nCode\nmessage(\"- \", subzone_out)\n\n\n- C:/Users/HOPE/Desktop/ISSS626/Hands-on_Ex/Hands-on_ex01/data/geospatial/clean_subzone.gpkg\n\n\nCode\nmessage(\"- \", cycling_out)\n\n\n- C:/Users/HOPE/Desktop/ISSS626/Hands-on_Ex/Hands-on_ex01/data/geospatial/clean_cycling_path.gpkg\n\n\nCode\nmessage(\"- \", preschools_out)\n\n\n- C:/Users/HOPE/Desktop/ISSS626/Hands-on_Ex/Hands-on_ex01/data/geospatial/clean_preschools_svy21.gpkg\n\n\n\n\nStep 7: Geospatial Processing Examples (Ch. 1.9)\n\n\nCode\nmessage(\"\\n=== Cycling Path Buffer and Area Calculations ===\")\n\n\n\n=== Cycling Path Buffer and Area Calculations ===\n\n\nCode\n# Create 5 metre buffer around cleaned cycling paths (per feature)\ncycling_buffer &lt;- cycling_clean %&gt;%\n  st_buffer(dist = 5) %&gt;%\n  mutate(\n    buffer_area_sqm = st_area(.),\n    buffer_area_sqkm = set_units(buffer_area_sqm, \"km^2\")\n  )\n\ntotal_buffer_area &lt;- sum(cycling_buffer$buffer_area_sqkm)\nmessage(\n  \"Total buffered cycling corridor area (5 m): \",\n  signif(as.numeric(total_buffer_area), 4),\n  \" sq km\"\n)\n\n\nTotal buffered cycling corridor area (5 m): 3.56 sq km\n\n\nCode\n# Intersect buffer with Tampines West subzone (if available)\ntampines_west &lt;- mpsz_clean %&gt;%\n  filter(\n    toupper(pln_area_n) == \"TAMPINES\",\n    toupper(subzone_n) == \"TAMPINES WEST\"\n  )\n\nif (nrow(tampines_west) == 0) {\n  message(\"Tampines West subzone not found – selecting first available subzone instead.\")\n  tampines_west &lt;- mpsz_clean[1, ]\n}\n\ntampines_buffer &lt;- st_intersection(st_make_valid(tampines_west), st_union(cycling_buffer))\n\nif (nrow(tampines_buffer) &gt; 0) {\n  tampines_area &lt;- set_units(st_area(tampines_buffer), \"km^2\")\n  message(\n    \"Buffered cycling area within selected subzone: \",\n    signif(as.numeric(tampines_area), 4),\n    \" sq km\"\n  )\n} else {\n  message(\"No buffered cycling segments found within the selected subzone.\")\n}\n\n\nBuffered cycling area within selected subzone: 0.09913 sq km\n\n\n\n\nCode\nmessage(\"\\n=== Visualising Cycling Buffer in Tampines West ===\")\n\nold_tmap_mode &lt;- tmap_mode(\"plot\")\n\nif (nrow(tampines_buffer) &gt; 0) {\n  tmap::tm_shape(tampines_west) +\n    tmap::tm_polygons(col = \"#f0f4ff\", border.col = \"#26456e\") +\n    tmap::tm_shape(tampines_buffer) +\n    tmap::tm_fill(col = \"#ffb347\", alpha = 0.6) +\n    tmap::tm_layout(\n      title = \"5 m Cycling Corridor Buffer in Tampines West\",\n      legend.show = FALSE,\n      frame = FALSE\n    )\n} else {\n  message(\"Skipping map because no buffered cycling segments were found in the selected subzone.\")\n}\n\n\n\n\n\n\n\n\n\nCode\ntmap_mode(old_tmap_mode)\n\n\n\n\nCode\n# Count pre-schools per subzone\nmessage(\"\\n=== Preschool Counts by Subzone ===\")\n\n\n\n=== Preschool Counts by Subzone ===\n\n\nCode\nsubzone_preschool &lt;- mpsz_clean %&gt;%\n  dplyr::mutate(\n    subzone_area_sqkm = as.numeric(units::set_units(sf::st_area(.), \"km^2\")),\n    preschool_count   = lengths(sf::st_intersects(., preschools_clean)),\n    preschool_density = preschool_count / subzone_area_sqkm\n  )\n\nsubzone_summary &lt;- subzone_preschool %&gt;%\n  sf::st_drop_geometry() %&gt;%\n  dplyr::transmute(\n    subzone_n,\n    planning_area      = pln_area_n,\n    subzone_area_sqkm,\n    preschool_count,\n    preschool_density\n  )\n\nprint(head(subzone_summary, 5))\n\n\n       subzone_n   planning_area subzone_area_sqkm preschool_count\n1   MARINA SOUTH    MARINA SOUTH         1.6303793               0\n2   PEARL'S HILL          OUTRAM         0.5598162               6\n3      BOAT QUAY SINGAPORE RIVER         0.1608075               0\n4 HENDERSON HILL     BUKIT MERAH         0.5954289               5\n5        REDHILL     BUKIT MERAH         0.3874294               3\n  preschool_density\n1          0.000000\n2         10.717803\n3          0.000000\n4          8.397308\n5          7.743345\n\n\nCode\nmessage(\"\\nSummary of preschool density (counts per sq km):\")\n\n\n\nSummary of preschool density (counts per sq km):\n\n\nCode\nprint(summary(subzone_summary$preschool_density))\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.000   0.000   5.154   6.449  10.908  35.602 \n\n\nCode\ntop_subzone &lt;- subzone_summary %&gt;%\n  dplyr::arrange(dplyr::desc(preschool_count)) %&gt;%\n  dplyr::slice_head(n = 1)\n\nmessage(\"\\nSubzone with the highest preschool count:\")\n\n\n\nSubzone with the highest preschool count:\n\n\nCode\nprint(top_subzone)\n\n\n      subzone_n planning_area subzone_area_sqkm preschool_count\n1 TAMPINES EAST      TAMPINES          4.339824              72\n  preschool_density\n1          16.59053\n\n\n\n\nCode\np_hist &lt;- ggplot(subzone_summary, aes(x = preschool_density)) +\n  geom_histogram(fill = \"#74a9cf\", colour = \"white\", bins = 20) +\n  labs(\n    x = \"Preschool Density (count per sq km)\",\n    y = \"Number of Subzones\",\n    title = \"Distribution of Preschool Density across Subzones\"\n  ) +\n  theme_minimal()\np_hist\n\n\n\n\n\n\n\n\n\n\n\nCode\np_scatter &lt;- ggplot(subzone_summary, aes(x = preschool_count, y = preschool_density)) +\n  geom_point(alpha = 0.6, colour = \"#2b8cbe\") +\n  labs(\n    x = \"Preschool Count\",\n    y = \"Preschool Density (count per sq km)\",\n    title = \"Preschool Density vs. Count\"\n  ) +\n  theme_minimal()\np_scatter"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex01/ex01a.html#results",
    "href": "Hands-on_Ex/Hands-on_ex01/ex01a.html#results",
    "title": "Hands-on Exercise 01a: Geospatial Data Wrangling",
    "section": "Results",
    "text": "Results\n\nData Summary\n\n\nCode\nmessage(\"\\n\", strrep(\"=\", 60), \"\\n\")\n\n\n\n============================================================\n\n\nCode\nmessage(\"DATA PROCESSING SUMMARY\")\n\n\nDATA PROCESSING SUMMARY\n\n\nCode\nmessage(strrep(\"=\", 60), \"\\n\")\n\n\n============================================================\n\n\nCode\n# Subzone Summary\nmessage(\"1. SUBZONE DATA (clean_subzone.gpkg)\")\n\n\n1. SUBZONE DATA (clean_subzone.gpkg)\n\n\nCode\nmessage(\"   - Records: \", nrow(mpsz_clean))\n\n\n   - Records: 323\n\n\nCode\nmessage(\"   - CRS: EPSG:\", sf::st_crs(mpsz_clean)$epsg, \" (SVY21)\")\n\n\n   - CRS: EPSG:3414 (SVY21)\n\n\nCode\nmessage(\"   - Geometry types: \", paste(unique(sf::st_geometry_type(mpsz_clean)), collapse=\", \"))\n\n\n   - Geometry types: POLYGON, MULTIPOLYGON\n\n\nCode\nmessage(\"   - Fields: \", paste(names(sf::st_drop_geometry(mpsz_clean)), collapse=\", \"))\n\n\n   - Fields: subzone_n, pln_area_n\n\n\nCode\n# Cycling Path Summary\nmessage(\"\\n2. CYCLING PATH DATA (clean_cycling_path.gpkg)\")\n\n\n\n2. CYCLING PATH DATA (clean_cycling_path.gpkg)\n\n\nCode\nmessage(\"   - Records: \", nrow(cycling_clean))\n\n\n   - Records: 4674\n\n\nCode\nmessage(\"   - CRS: EPSG:\", sf::st_crs(cycling_clean)$epsg, \" (SVY21)\")\n\n\n   - CRS: EPSG:3414 (SVY21)\n\n\nCode\nmessage(\"   - Geometry types: \", paste(unique(sf::st_geometry_type(cycling_clean)), collapse=\", \"))\n\n\n   - Geometry types: MULTILINESTRING\n\n\nCode\nmessage(\"   - Fields: \", paste(names(sf::st_drop_geometry(cycling_clean)), collapse=\", \"))\n\n\n   - Fields: \n\n\nCode\n# Pre-Schools Summary\nmessage(\"\\n3. PRE-SCHOOLS DATA (clean_preschools_svy21.gpkg)\")\n\n\n\n3. PRE-SCHOOLS DATA (clean_preschools_svy21.gpkg)\n\n\nCode\nmessage(\"   - Records: \", nrow(preschools_clean))\n\n\n   - Records: 2290\n\n\nCode\nmessage(\"   - CRS: EPSG:\", sf::st_crs(preschools_clean)$epsg, \" (SVY21)\")\n\n\n   - CRS: EPSG:3414 (SVY21)\n\n\nCode\nmessage(\"   - Geometry types: \", paste(unique(sf::st_geometry_type(preschools_clean)), collapse=\", \"))\n\n\n   - Geometry types: POINT\n\n\nCode\nmessage(\"   - Fields: \", paste(names(sf::st_drop_geometry(preschools_clean)), collapse=\", \"))\n\n\n   - Fields: name\n\n\nCode\n# Listings Summary\nmessage(\"\\n4. LISTINGS DATA (listings.csv - read only)\")\n\n\n\n4. LISTINGS DATA (listings.csv - read only)\n\n\nCode\nmessage(\"   - Records: \", nrow(listings))\n\n\n   - Records: 3659\n\n\nCode\nmessage(\"   - Latitude range: [\", round(min(listings$latitude), 4), \", \",\n        round(max(listings$latitude), 4), \"]\")\n\n\n   - Latitude range: [1.2227, 1.4578]\n\n\nCode\nmessage(\"   - Longitude range: [\", round(min(listings$longitude), 4), \", \",\n        round(max(listings$longitude), 4), \"]\")\n\n\n   - Longitude range: [103.6346, 103.9896]\n\n\nCode\nmessage(\"\\n5. LISTINGS DATA (listings_sf - transformed)\")\n\n\n\n5. LISTINGS DATA (listings_sf - transformed)\n\n\nCode\nmessage(\"   - Records: \", nrow(listings_sf))\n\n\n   - Records: 3659\n\n\nCode\nmessage(\"   - CRS: EPSG:\", sf::st_crs(listings_sf)$epsg)\n\n\n   - CRS: EPSG:3414\n\n\nCode\nmessage(\"   - Geometry type: \", unique(sf::st_geometry_type(listings_sf)))\n\n\n   - Geometry type: POINT\n\n\nCode\nmessage(\"\\n\", strrep(\"=\", 60))\n\n\n\n============================================================\n\n\nCode\nmessage(\"✓ All data processing completed successfully!\")\n\n\n✓ All data processing completed successfully!\n\n\nCode\nmessage(strrep(\"=\", 60))\n\n\n============================================================\n\n\n\n\nSample Data Preview\n\n\nCode\n# Preview first 3 records without geometry\nmessage(\"\\nSample records from cleaned datasets:\")\n\nmessage(\"\\nSubzone (first 3 records):\")\nprint(head(sf::st_drop_geometry(mpsz_clean), 3))\n\n\n     subzone_n      pln_area_n\n1 MARINA SOUTH    MARINA SOUTH\n2 PEARL'S HILL          OUTRAM\n3    BOAT QUAY SINGAPORE RIVER\n\n\nCode\nmessage(\"\\nCycling Path (first 3 records):\")\nprint(head(sf::st_drop_geometry(cycling_clean), 3))\n\n\ndata frame with 0 columns and 3 rows\n\n\nCode\nmessage(\"\\nPre-Schools (first 3 records):\")\nprint(head(sf::st_drop_geometry(preschools_clean), 3))\n\n\n   name\n1 kml_1\n2 kml_2\n3 kml_3"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex02/ex02a.html",
    "href": "Hands-on_Ex/Hands-on_ex02/ex02a.html",
    "title": "Hands-on Exercise 02a: Choropleth Mapping for Child Care Services",
    "section": "",
    "text": "This exercise follows the Chapter 4 workflow from the course notes. We will:\n\nImport the 2019 Master Plan subzone polygons and the Early Childhood Development Agency (ECDA) child care point locations.\nClean and standardize the data, ensuring all geometries use the SVY21 / EPSG:3414 projection.\nCompute analytical summaries, including the number of centres and (when available) registered capacity by subzone and planning area.\nCreate exploratory maps (point overlay) and thematic choropleths that illustrate spatial patterns in the provision of child care services.\n\nThe original data files should be placed at:\n\nHands-on_Ex/Hands-on_ex02/data/MasterPlan2019SubzoneBoundaryNoSeaGEOJSON.geojson\nHands-on_Ex/Hands-on_ex02/data/ChildCareServices.geojson"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex02/ex02a.html#overview",
    "href": "Hands-on_Ex/Hands-on_ex02/ex02a.html#overview",
    "title": "Hands-on Exercise 02a: Choropleth Mapping for Child Care Services",
    "section": "",
    "text": "This exercise follows the Chapter 4 workflow from the course notes. We will:\n\nImport the 2019 Master Plan subzone polygons and the Early Childhood Development Agency (ECDA) child care point locations.\nClean and standardize the data, ensuring all geometries use the SVY21 / EPSG:3414 projection.\nCompute analytical summaries, including the number of centres and (when available) registered capacity by subzone and planning area.\nCreate exploratory maps (point overlay) and thematic choropleths that illustrate spatial patterns in the provision of child care services.\n\nThe original data files should be placed at:\n\nHands-on_Ex/Hands-on_ex02/data/MasterPlan2019SubzoneBoundaryNoSeaGEOJSON.geojson\nHands-on_Ex/Hands-on_ex02/data/ChildCareServices.geojson"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex02/ex02a.html#setup-and-environment",
    "href": "Hands-on_Ex/Hands-on_ex02/ex02a.html#setup-and-environment",
    "title": "Hands-on Exercise 02a: Choropleth Mapping for Child Care Services",
    "section": "Setup and Environment",
    "text": "Setup and Environment\n\n\nCode\nif (!requireNamespace(\"pacman\", quietly = TRUE)) install.packages(\"pacman\")\n\npacman::p_load(\n  sf, tidyverse, janitor, stringr, rvest,\n  here, tmap, units, readr, sessioninfo)\n\ntmap_mode(\"plot\")\n\nroot_dir &lt;- here::here()\nexo_dir &lt;- here::here(\"Hands-on_Ex\", \"Hands-on_ex02\")\nexo_data &lt;- here::here(\"Hands-on_Ex\", \"Hands-on_ex02\", \"data\")\nexo_fig &lt;- here::here(\"Hands-on_Ex\", \"Hands-on_ex02\", \"figures\")\n\nif (!dir.exists(exo_fig)) dir.create(exo_fig, recursive = TRUE, showWarnings = FALSE)\n\nmessage(\"Project root: \", root_dir)\nmessage(\"Exercise directory: \", exo_dir)\nmessage(\"Data directory: \", exo_data)\nmessage(\"Figures directory: \", exo_fig)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex02/ex02a.html#import-and-inspect-spatial-data",
    "href": "Hands-on_Ex/Hands-on_ex02/ex02a.html#import-and-inspect-spatial-data",
    "title": "Hands-on Exercise 02a: Choropleth Mapping for Child Care Services",
    "section": "Import and Inspect Spatial Data",
    "text": "Import and Inspect Spatial Data\n\nMaster Plan Subzones (Polygon)\n\n\nCode\nmessage(\"\\n=== Loading Master Plan 2019 subzones ===\")\nsubzone_path &lt;- file.path(exo_data, \"MasterPlan2019SubzoneBoundaryNoSeaGEOJSON.geojson\")\n\nif (!file.exists(subzone_path)) {\n  stop(\"Subzone boundary GeoJSON not found at: \", subzone_path,\n       \"\\nDownload it from data.gov.sg and place it in the data directory before knitting.\")\n}\n\nmpsz_2019 &lt;- st_read(subzone_path, quiet = FALSE)\n\n\nReading layer `MasterPlan2019SubzoneBoundaryNoSeaGEOJSON' from data source \n  `C:\\Users\\HOPE\\Desktop\\ISSS626\\Hands-on_Ex\\Hands-on_ex02\\data\\MasterPlan2019SubzoneBoundaryNoSeaGEOJSON.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 332 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\nCode\nif (is.na(st_crs(mpsz_2019))) {\n  stop(\"Master Plan subzones are missing CRS information. Please check the source file.\")\n}\n\nif (st_crs(mpsz_2019)$epsg != 3414) {\n  message(\"Transforming subzones to EPSG:3414 (SVY21).\")\n  mpsz_2019 &lt;- st_transform(mpsz_2019, 3414)\n}\n\n# Make geometries valid using sf package\nmpsz_2019 &lt;- st_make_valid(mpsz_2019)\n\nmessage(\"Records loaded: \", nrow(mpsz_2019))\nmessage(\"Geometry type(s): \", paste(unique(st_geometry_type(mpsz_2019)), collapse = \", \"))\nmessage(\"Subzone attributes: \", paste(head(names(mpsz_2019), 10), collapse = \", \"))\n\n\n\n\nExtract fields from HTML Description\n\n\nCode\n# Function to extract KML fields from HTML description\nextract_kml_field &lt;- function(html_text, field_name) {\n  if (is.na(html_text) || html_text == \"\") return(NA_character_)\n  \n  page &lt;- read_html(html_text)\n  rows &lt;- page %&gt;% html_elements(\"tr\")\n  \n  value &lt;- rows %&gt;%\n    keep(~ html_text2(html_element(.x, \"th\")) == field_name) %&gt;%\n    map_chr(~ html_text2(html_element(.x, \"td\")))\n  \n  if (length(value) == 0) NA_character_ else value[1]\n}\n\n# Extract SUBZONE_N and PLN_AREA_N from Description field\nmpsz_2019 &lt;- mpsz_2019 %&gt;%\n  mutate(\n    subzone_name = map_chr(Description, extract_kml_field, \"SUBZONE_N\"),\n    planning_area = map_chr(Description, extract_kml_field, \"PLN_AREA_N\")\n  ) %&gt;%\n  select(-Name, -Description) %&gt;%\n  relocate(geometry, .after = last_col())\n\n# Clean the extracted data\nmpsz_2019 &lt;- mpsz_2019 %&gt;%\n  mutate(\n    subzone_name = str_squish(as.character(subzone_name)),\n    planning_area = str_squish(as.character(planning_area))\n  )\n\n# Display sample data\nsubzone_glimpse &lt;- mpsz_2019 %&gt;%\n  st_drop_geometry() %&gt;%\n  select(subzone_name, planning_area) %&gt;%\n  distinct() %&gt;%\n  head(10)\n\nprint(subzone_glimpse)\n\n\n          subzone_name planning_area\n1           DEPOT ROAD   BUKIT MERAH\n2          BUKIT MERAH   BUKIT MERAH\n3            CHINATOWN        OUTRAM\n4              PHILLIP DOWNTOWN CORE\n5        RAFFLES PLACE DOWNTOWN CORE\n6         CHINA SQUARE        OUTRAM\n7          TIONG BAHRU   BUKIT MERAH\n8     BAYFRONT SUBZONE DOWNTOWN CORE\n9  TIONG BAHRU STATION   BUKIT MERAH\n10       CLIFFORD PIER DOWNTOWN CORE\n\n\n\n\nChild Care Services (Point)\n\n\nCode\nmessage(\"\\n=== Loading ECDA child care locations ===\")\nchildcare_path &lt;- file.path(exo_data, \"ChildCareServices.geojson\")\n\nif (!file.exists(childcare_path)) {\n  stop(\"Child care services GeoJSON not found at: \", childcare_path,\n       \"\\nDownload the ECDA dataset and place it in the data directory before knitting.\")\n}\n\nchildcare_raw &lt;- st_read(childcare_path, quiet = FALSE) %&gt;%\n  janitor::clean_names()\n\n\nReading layer `ChildCareServices' from data source \n  `C:\\Users\\HOPE\\Desktop\\ISSS626\\Hands-on_Ex\\Hands-on_ex02\\data\\ChildCareServices.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 1925 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\nCode\nif (is.na(st_crs(childcare_raw))) {\n  stop(\"Child care services data is missing CRS information. Please check the source file.\")\n}\n\nif (st_crs(childcare_raw)$epsg != 3414) {\n  message(\"Transforming child care locations to EPSG:3414 (SVY21).\")\n  childcare_sf &lt;- st_transform(childcare_raw, 3414)\n} else {\n  childcare_sf &lt;- childcare_raw\n}\n\n# Check if Description field contains HTML\n# Check if Description field contains HTML\nif (grepl(\"&lt;\", childcare_sf$description[1], fixed = TRUE)) {\n  # Extract centre name from HTML if present\n  childcare_sf &lt;- childcare_sf %&gt;%\n    mutate(\n      centre_name = map2_chr(description, name, function(desc, nm) {\n        if (is.na(desc) || desc == \"\") return(nm)\n        # Try to extract centre name from HTML\n        result &lt;- tryCatch({\n          extract_kml_field(desc, \"CENTRE_NAME\")\n        }, error = function(e) {\n          NA_character_\n        })\n        # If extraction fails, use name field\n        if (is.na(result)) return(nm) else return(result)\n      })\n    )\n} else {\n  # Use name field directly\n  childcare_sf &lt;- childcare_sf %&gt;%\n    mutate(centre_name = name)\n}\n\nchildcare_sf &lt;- childcare_sf %&gt;%\n  mutate(across(where(is.character), ~ str_squish(.x)))\n\nmessage(\"Records loaded: \", nrow(childcare_sf))\nmessage(\"Geometry type(s): \", paste(unique(st_geometry_type(childcare_sf)), collapse = \", \"))\nmessage(\"Child care attributes (first 10): \", paste(head(names(childcare_sf), 10), collapse = \", \"))\n\n# Display sample data\nchildcare_sf %&gt;%\n  st_drop_geometry() %&gt;%\n  select(any_of(c(\"centre_name\", \"name\"))) %&gt;%\n  head(5)\n\n\n  centre_name  name\n1       kml_1 kml_1\n2       kml_2 kml_2\n3       kml_3 kml_3\n4       kml_4 kml_4\n5       kml_5 kml_5"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex02/ex02a.html#spatial-join-and-aggregation",
    "href": "Hands-on_Ex/Hands-on_ex02/ex02a.html#spatial-join-and-aggregation",
    "title": "Hands-on Exercise 02a: Choropleth Mapping for Child Care Services",
    "section": "Spatial Join and Aggregation",
    "text": "Spatial Join and Aggregation\n\nPrepare Helper Columns\n\n\nCode\n# No capacity column in this dataset, so we'll only count centres\ncapacity_col &lt;- NA_character_\nmessage(\"No capacity column detected; analyses will use only centre counts.\")\n\n# Prepare childcare data\nchildcare_ready &lt;- childcare_sf %&gt;%\n  mutate(\n    centre_name = coalesce(centre_name, name, \"(Unnamed centre)\"),\n    capacity = NA_real_  # No capacity data available\n  )\n\n\n\n\nSpatial Join (Points-in-Polygons)\n\n\nCode\nmessage(\"\\n=== Computing child care counts per subzone ===\")\nchildcare_joined &lt;- st_join(childcare_ready, mpsz_2019 %&gt;% select(subzone_name, planning_area),\n                            join = st_within, left = FALSE)\n\nchildcare_counts &lt;- childcare_joined %&gt;%\n  st_drop_geometry() %&gt;%\n  group_by(planning_area, subzone_name) %&gt;%\n  summarise(\n    centres = n(),\n    capacity_total = NA_real_,  # No capacity data\n    .groups = \"drop\"\n  )\n\nhas_capacity_information &lt;- FALSE\n\nprint(childcare_counts %&gt;% head(10))\n\n\n# A tibble: 10 × 4\n   planning_area subzone_name           centres capacity_total\n   &lt;chr&gt;         &lt;chr&gt;                    &lt;int&gt;          &lt;dbl&gt;\n 1 ANG MO KIO    ANG MO KIO TOWN CENTRE       3             NA\n 2 ANG MO KIO    CHENG SAN                   10             NA\n 3 ANG MO KIO    CHONG BOON                   7             NA\n 4 ANG MO KIO    KEBUN BAHRU                  8             NA\n 5 ANG MO KIO    SEMBAWANG HILLS              3             NA\n 6 ANG MO KIO    SHANGRI-LA                   7             NA\n 7 ANG MO KIO    TAGORE                       7             NA\n 8 ANG MO KIO    TOWNSVILLE                   9             NA\n 9 ANG MO KIO    YIO CHU KANG                 7             NA\n10 ANG MO KIO    YIO CHU KANG EAST            5             NA\n\n\n\n\nSubzone Summary\n\n\nCode\nsubzone_summary &lt;- mpsz_2019 %&gt;%\n  left_join(childcare_counts, by = c(\"planning_area\", \"subzone_name\")) %&gt;%\n  mutate(\n    centres = replace_na(centres, 0L),\n    capacity_total = NA_real_,  # No capacity data\n    area_sqm = st_area(geometry),\n    area_km2 = units::set_units(area_sqm, km^2) %&gt;% units::drop_units(),\n    centres_per_km2 = if_else(area_km2 &gt; 0, centres / area_km2, NA_real_),\n    capacity_per_km2 = NA_real_  # No capacity data\n  )\n\nsubzone_summary %&gt;%\n  st_drop_geometry() %&gt;%\n  arrange(desc(centres)) %&gt;%\n  select(planning_area, subzone_name, centres, centres_per_km2) %&gt;%\n  head(10)\n\n\n   planning_area         subzone_name centres centres_per_km2\n1       TAMPINES        TAMPINES EAST      58       13.352509\n2      WOODLANDS       WOODLANDS EAST      49       19.189621\n3          BEDOK          BEDOK NORTH      32        9.988565\n4        GEYLANG             ALJUNIED      32       10.805459\n5       TAMPINES        TAMPINES WEST      30        8.632466\n6       SENGKANG SENGKANG TOWN CENTRE      30       20.540426\n7          BEDOK              FRANKEL      28        6.515961\n8    JURONG WEST               YUNNAN      27       12.237655\n9    JURONG WEST             HONG KAH      25       13.939508\n10      SENGKANG            RIVERVALE      24       15.296028\n\n\n\n\nPlanning Area Aggregation\n\n\nCode\nplanning_summary &lt;- subzone_summary %&gt;%\n  st_drop_geometry() %&gt;%\n  group_by(planning_area) %&gt;%\n  summarise(\n    centres = sum(centres, na.rm = TRUE),\n    capacity_total = NA_real_,  # No capacity data\n    area_km2 = sum(area_km2, na.rm = TRUE),\n    centres_per_km2 = if_else(area_km2 &gt; 0, centres / area_km2, NA_real_),\n    capacity_per_km2 = NA_real_,  # No capacity data\n    .groups = \"drop\"\n  ) %&gt;%\n  arrange(desc(centres))\n\nprint(planning_summary %&gt;% head(10))\n\n\n# A tibble: 10 × 6\n   planning_area centres capacity_total area_km2 centres_per_km2\n   &lt;chr&gt;           &lt;int&gt;          &lt;dbl&gt;    &lt;dbl&gt;           &lt;dbl&gt;\n 1 BEDOK             130             NA    21.7             5.98\n 2 TAMPINES          117             NA    20.8             5.63\n 3 JURONG WEST       110             NA    14.7             7.49\n 4 WOODLANDS         107             NA    13.6             7.86\n 5 HOUGANG            98             NA    13.9             7.03\n 6 SENGKANG           94             NA    10.6             8.87\n 7 YISHUN             87             NA    20.9             4.17\n 8 CHOA CHU KANG      74             NA     6.12           12.1 \n 9 ANG MO KIO         72             NA    13.9             5.16\n10 PUNGGOL            72             NA     9.37            7.68\n# ℹ 1 more variable: capacity_per_km2 &lt;dbl&gt;"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex02/ex02a.html#visual-analytics",
    "href": "Hands-on_Ex/Hands-on_ex02/ex02a.html#visual-analytics",
    "title": "Hands-on Exercise 02a: Choropleth Mapping for Child Care Services",
    "section": "Visual Analytics",
    "text": "Visual Analytics\n\nPoint Overlay Map\n\n\nCode\n# Check tmap version and use appropriate syntax\ntmap_version &lt;- packageVersion(\"tmap\")\n\nif (tmap_version &gt;= \"4.0\") {\n  # tmap v4 syntax\n  childcare_map &lt;- tm_shape(mpsz_2019) +\n    tm_polygons(fill = \"grey95\", col = \"grey70\", lwd = 0.3) +\n    tm_shape(childcare_ready) +\n    tm_dots(size = 0.05, fill = \"#0072B2\", fill_alpha = 0.6) +\n    tm_title(\"ECDA-registered Child Care Centres\") +\n    tm_scalebar(position = c(\"left\", \"bottom\")) +\n    tm_compass(position = c(\"right\", \"top\"), size = 1.2) +\n    tm_layout(frame = FALSE)\n} else {\n  # tmap v3 syntax\n  childcare_map &lt;- tm_shape(mpsz_2019) +\n    tm_polygons(col = \"grey95\", border.col = \"grey70\", lwd = 0.3) +\n    tm_shape(childcare_ready) +\n    tm_dots(size = 0.05, col = \"#0072B2\", alpha = 0.6,\n            title = \"Child care centres\") +\n    tm_layout(\n      title = \"ECDA-registered Child Care Centres\",\n      frame = FALSE,\n      legend.outside = TRUE,\n      outer.margins = 0.02,\n      main.title.position = \"center\"\n    ) +\n    tm_scale_bar(position = c(\"left\", \"bottom\")) +\n    tm_compass(position = c(\"right\", \"top\"), size = 1.2)\n}\n\nprint(childcare_map)\n\n\n\n\n\n\n\n\n\n\n\nCode\ntmap_save(childcare_map,\n          filename = file.path(exo_fig, \"ex02a_childcare_points.png\"),\n          width = 8, height = 6, units = \"in\", dpi = 300)\n\n\n\n\nChoropleth: Centres per Subzone\n\n\nCode\nif (tmap_version &gt;= \"4.0\") {\n  # tmap v4 syntax\n  centres_map &lt;- tm_shape(subzone_summary) +\n    tm_polygons(\n      fill = \"centres\",\n      fill.scale = tm_scale_intervals(\n        style = \"quantile\",\n        n = 5,\n        values = \"brewer.reds\"\n      ),\n      fill.legend = tm_legend(title = \"Centres\"),\n      col = \"grey60\",\n      lwd = 0.3\n    ) +\n    tm_title(\"Number of Child Care Centres by Subzone\") +\n    tm_scalebar(position = c(\"left\", \"bottom\")) +\n    tm_compass(position = c(\"right\", \"top\"), size = 1.1) +\n    tm_layout(frame = FALSE)\n} else {\n  # tmap v3 syntax\n  centres_map &lt;- tm_shape(subzone_summary) +\n    tm_polygons(\n      col = \"centres\",\n      palette = \"Reds\",\n      style = \"quantile\",\n      n = 5,\n      border.col = \"grey60\",\n      lwd = 0.3,\n      title = \"Centres\"\n    ) +\n    tm_layout(\n      title = \"Number of Child Care Centres by Subzone\",\n      frame = FALSE,\n      legend.outside = TRUE,\n      main.title.position = \"center\"\n    ) +\n    tm_scale_bar(position = c(\"left\", \"bottom\")) +\n    tm_compass(position = c(\"right\", \"top\"), size = 1.1)\n}\n\nprint(centres_map)\n\n\n\n\n\n\n\n\n\n\n\nCode\ntmap_save(centres_map,\n          filename = file.path(exo_fig, \"ex02a_childcare_centres.png\"),\n          width = 8, height = 6, units = \"in\", dpi = 300)\n\n\n\n\nChoropleth: Density of Centres\n\n\nCode\nif (!all(is.na(subzone_summary$centres_per_km2))) {\n  if (tmap_version &gt;= \"4.0\") {\n    # tmap v4 syntax\n    density_map &lt;- tm_shape(subzone_summary) +\n      tm_polygons(\n        fill = \"centres_per_km2\",\n        fill.scale = tm_scale_intervals(\n          style = \"jenks\",\n          n = 5,\n          values = \"brewer.blues\"\n        ),\n        fill.legend = tm_legend(title = \"Centres per km²\"),\n        col = \"grey60\",\n        lwd = 0.3\n      ) +\n      tm_title(\"Density of Child Care Centres by Subzone\") +\n      tm_scalebar(position = c(\"left\", \"bottom\")) +\n      tm_compass(position = c(\"right\", \"top\"), size = 1.1) +\n      tm_layout(frame = FALSE)\n  } else {\n    # tmap v3 syntax\n    density_map &lt;- tm_shape(subzone_summary) +\n      tm_polygons(\n        col = \"centres_per_km2\",\n        palette = \"Blues\",\n        style = \"jenks\",\n        n = 5,\n        border.col = \"grey60\",\n        lwd = 0.3,\n        title = \"Centres per km²\"\n      ) +\n      tm_layout(\n        title = \"Density of Child Care Centres by Subzone\",\n        frame = FALSE,\n        legend.outside = TRUE,\n        main.title.position = \"center\"\n      ) +\n      tm_scale_bar(position = c(\"left\", \"bottom\")) +\n      tm_compass(position = c(\"right\", \"top\"), size = 1.1)\n  }\n  \n  print(density_map)\n  \n  tmap_save(density_map,\n            filename = file.path(exo_fig, \"ex02a_childcare_density.png\"),\n            width = 8, height = 6, units = \"in\", dpi = 300)\n} else {\n  message(\"Centres per km² could not be computed (missing area information).\")\n}"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex02/ex02a.html#descriptive-summaries",
    "href": "Hands-on_Ex/Hands-on_ex02/ex02a.html#descriptive-summaries",
    "title": "Hands-on Exercise 02a: Choropleth Mapping for Child Care Services",
    "section": "Descriptive Summaries",
    "text": "Descriptive Summaries\n\nOverall Statistics\n\n\nCode\nsummary_stats &lt;- subzone_summary %&gt;%\n  st_drop_geometry() %&gt;%\n  summarise(\n    total_centres = sum(centres, na.rm = TRUE),\n    mean_centres = mean(centres, na.rm = TRUE),\n    median_centres = median(centres, na.rm = TRUE),\n    max_centres = max(centres, na.rm = TRUE),\n    min_centres = min(centres, na.rm = TRUE),\n    sd_centres = sd(centres, na.rm = TRUE)\n  )\n\nprint(summary_stats)\n\n\n  total_centres mean_centres median_centres max_centres min_centres sd_centres\n1          1925     5.798193              3          58           0   7.642993\n\n\n\n\nTop Subzones by Centre Count\n\n\nCode\ntop_subzones &lt;- subzone_summary %&gt;%\n  st_drop_geometry() %&gt;%\n  arrange(desc(centres)) %&gt;%\n  select(planning_area, subzone_name, centres, centres_per_km2) %&gt;%\n  head(10)\n\nprint(top_subzones)\n\n\n   planning_area         subzone_name centres centres_per_km2\n1       TAMPINES        TAMPINES EAST      58       13.352509\n2      WOODLANDS       WOODLANDS EAST      49       19.189621\n3          BEDOK          BEDOK NORTH      32        9.988565\n4        GEYLANG             ALJUNIED      32       10.805459\n5       TAMPINES        TAMPINES WEST      30        8.632466\n6       SENGKANG SENGKANG TOWN CENTRE      30       20.540426\n7          BEDOK              FRANKEL      28        6.515961\n8    JURONG WEST               YUNNAN      27       12.237655\n9    JURONG WEST             HONG KAH      25       13.939508\n10      SENGKANG            RIVERVALE      24       15.296028\n\n\n\n\nBottom Subzones by Centre Count\n\n\nCode\nbottom_subzones &lt;- subzone_summary %&gt;%\n  st_drop_geometry() %&gt;%\n  filter(centres == 0) %&gt;%\n  select(planning_area, subzone_name, centres, centres_per_km2) %&gt;%\n  head(10)\n\nprint(paste(\"Number of subzones with no childcare centres:\", \n            sum(subzone_summary$centres == 0, na.rm = TRUE)))\n\n\n[1] \"Number of subzones with no childcare centres: 101\"\n\n\nCode\nprint(bottom_subzones)\n\n\n     planning_area            subzone_name centres centres_per_km2\n1           OUTRAM            CHINA SQUARE       0               0\n2    DOWNTOWN CORE        BAYFRONT SUBZONE       0               0\n3     MARINA SOUTH            MARINA SOUTH       0               0\n4    DOWNTOWN CORE                  NICOLL       0               0\n5      MARINA EAST             MARINA EAST       0               0\n6  WESTERN ISLANDS JURONG ISLAND AND BUKOM       0               0\n7           MUSEUM            FORT CANNING       0               0\n8  SINGAPORE RIVER               BOAT QUAY       0               0\n9    MARINE PARADE        MARINA EAST (MP)       0               0\n10 WESTERN ISLANDS                  SUDONG       0               0\n\n\n\n\nTop Planning Areas\n\n\nCode\ntop_planning &lt;- planning_summary %&gt;%\n  arrange(desc(centres)) %&gt;%\n  select(planning_area, centres, area_km2, centres_per_km2) %&gt;%\n  head(10)\n\nprint(top_planning)\n\n\n# A tibble: 10 × 4\n   planning_area centres area_km2 centres_per_km2\n   &lt;chr&gt;           &lt;int&gt;    &lt;dbl&gt;           &lt;dbl&gt;\n 1 BEDOK             130    21.7             5.98\n 2 TAMPINES          117    20.8             5.63\n 3 JURONG WEST       110    14.7             7.49\n 4 WOODLANDS         107    13.6             7.86\n 5 HOUGANG            98    13.9             7.03\n 6 SENGKANG           94    10.6             8.87\n 7 YISHUN             87    20.9             4.17\n 8 CHOA CHU KANG      74     6.12           12.1 \n 9 ANG MO KIO         72    13.9             5.16\n10 PUNGGOL            72     9.37            7.68"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex02/ex02a.html#session-information",
    "href": "Hands-on_Ex/Hands-on_ex02/ex02a.html#session-information",
    "title": "Hands-on Exercise 02a: Choropleth Mapping for Child Care Services",
    "section": "Session Information",
    "text": "Session Information\n\n\nCode\nsessioninfo::session_info()\n\n\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.5.0 (2025-04-11 ucrt)\n os       Windows 11 x64 (build 26100)\n system   x86_64, mingw32\n ui       RTerm\n language (EN)\n collate  Chinese (Simplified)_Hong Kong SAR.utf8\n ctype    Chinese (Simplified)_Hong Kong SAR.utf8\n tz       Asia/Shanghai\n date     2025-10-18\n pandoc   3.2 @ C:/Program Files/RStudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)\n quarto   NA @ C:\\\\PROGRA~1\\\\Quarto\\\\bin\\\\quarto.exe\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package        * version   date (UTC) lib source\n abind            1.4-8     2024-09-12 [1] CRAN (R 4.5.0)\n base64enc        0.1-3     2015-07-28 [1] CRAN (R 4.5.0)\n chromote         0.5.1     2025-04-24 [1] CRAN (R 4.5.0)\n class            7.3-23    2025-01-01 [1] CRAN (R 4.5.0)\n classInt         0.4-11    2025-01-08 [1] CRAN (R 4.5.0)\n cli              3.6.5     2025-04-23 [1] CRAN (R 4.5.0)\n codetools        0.2-20    2024-03-31 [1] CRAN (R 4.5.0)\n colorspace       2.1-1     2024-07-26 [1] CRAN (R 4.5.0)\n cols4all         0.9       2025-08-28 [1] CRAN (R 4.5.1)\n crosstalk        1.2.1     2023-11-23 [1] CRAN (R 4.5.0)\n data.table       1.17.0    2025-02-22 [1] CRAN (R 4.5.0)\n DBI              1.2.3     2024-06-02 [1] CRAN (R 4.5.0)\n dichromat        2.0-0.1   2022-05-02 [1] CRAN (R 4.5.0)\n digest           0.6.37    2024-08-19 [1] CRAN (R 4.5.0)\n dplyr          * 1.1.4     2023-11-17 [1] CRAN (R 4.5.0)\n e1071            1.7-16    2024-09-16 [1] CRAN (R 4.5.0)\n evaluate         1.0.3     2025-01-10 [1] CRAN (R 4.5.0)\n farver           2.1.2     2024-05-13 [1] CRAN (R 4.5.0)\n fastmap          1.2.0     2024-05-15 [1] CRAN (R 4.5.0)\n forcats        * 1.0.0     2023-01-29 [1] CRAN (R 4.5.0)\n generics         0.1.3     2022-07-05 [1] CRAN (R 4.5.0)\n ggplot2        * 3.5.2     2025-04-09 [1] CRAN (R 4.5.0)\n glue             1.8.0     2024-09-30 [1] CRAN (R 4.5.0)\n gtable           0.3.6     2024-10-25 [1] CRAN (R 4.5.0)\n here           * 1.0.2     2025-09-15 [1] CRAN (R 4.5.1)\n hms              1.1.3     2023-03-21 [1] CRAN (R 4.5.0)\n htmltools        0.5.8.1   2024-04-04 [1] CRAN (R 4.5.0)\n htmlwidgets      1.6.4     2023-12-06 [1] CRAN (R 4.5.0)\n httr             1.4.7     2023-08-15 [1] CRAN (R 4.5.0)\n janitor        * 2.2.1     2024-12-22 [1] CRAN (R 4.5.1)\n jsonlite         2.0.0     2025-03-27 [1] CRAN (R 4.5.0)\n KernSmooth       2.23-26   2025-01-01 [1] CRAN (R 4.5.0)\n knitr            1.50      2025-03-16 [1] CRAN (R 4.5.0)\n later            1.4.2     2025-04-08 [1] CRAN (R 4.5.0)\n lattice          0.22-6    2024-03-20 [1] CRAN (R 4.5.0)\n leafem           0.2.5     2025-08-28 [1] CRAN (R 4.5.1)\n leaflegend       1.2.1     2024-05-09 [1] CRAN (R 4.5.1)\n leaflet          2.2.3     2025-09-04 [1] CRAN (R 4.5.1)\n leafsync         0.1.0     2019-03-05 [1] CRAN (R 4.5.1)\n lifecycle        1.0.4     2023-11-07 [1] CRAN (R 4.5.0)\n logger           0.4.0     2024-10-22 [1] CRAN (R 4.5.0)\n lubridate      * 1.9.4     2024-12-08 [1] CRAN (R 4.5.0)\n lwgeom           0.2-14    2024-02-21 [1] CRAN (R 4.5.1)\n magrittr         2.0.3     2022-03-30 [1] CRAN (R 4.5.0)\n maptiles         0.10.0    2025-05-07 [1] CRAN (R 4.5.1)\n microbenchmark   1.5.0     2024-09-04 [1] CRAN (R 4.5.0)\n pacman           0.5.1     2019-03-11 [1] CRAN (R 4.5.0)\n pillar           1.10.2    2025-04-05 [1] CRAN (R 4.5.0)\n pkgconfig        2.0.3     2019-09-22 [1] CRAN (R 4.5.0)\n png              0.1-8     2022-11-29 [1] CRAN (R 4.5.0)\n processx         3.8.6     2025-02-21 [1] CRAN (R 4.5.0)\n promises         1.3.2     2024-11-28 [1] CRAN (R 4.5.0)\n proxy            0.4-27    2022-06-09 [1] CRAN (R 4.5.0)\n ps               1.9.1     2025-04-12 [1] CRAN (R 4.5.0)\n purrr          * 1.0.4     2025-02-05 [1] CRAN (R 4.5.0)\n R6               2.6.1     2025-02-15 [1] CRAN (R 4.5.0)\n raster           3.6-32    2025-03-28 [1] CRAN (R 4.5.0)\n RColorBrewer     1.1-3     2022-04-03 [1] CRAN (R 4.5.0)\n Rcpp             1.0.14    2025-01-12 [1] CRAN (R 4.5.0)\n readr          * 2.1.5     2024-01-10 [1] CRAN (R 4.5.0)\n rlang            1.1.6     2025-04-11 [1] CRAN (R 4.5.0)\n rmarkdown        2.29      2024-11-04 [1] CRAN (R 4.5.0)\n rprojroot        2.1.1     2025-08-26 [1] CRAN (R 4.5.1)\n rstudioapi       0.17.1    2024-10-22 [1] CRAN (R 4.5.0)\n rvest          * 1.0.4     2024-02-12 [1] CRAN (R 4.5.0)\n s2               1.1.7     2024-07-17 [1] CRAN (R 4.5.0)\n scales           1.4.0     2025-04-24 [1] CRAN (R 4.5.0)\n selectr          0.4-2     2019-11-20 [1] CRAN (R 4.5.0)\n sessioninfo    * 1.2.3     2025-02-05 [1] CRAN (R 4.5.1)\n sf             * 1.0-21    2025-05-15 [1] CRAN (R 4.5.1)\n snakecase        0.11.1    2023-08-27 [1] CRAN (R 4.5.1)\n sp               2.2-0     2025-02-01 [1] CRAN (R 4.5.0)\n spacesXYZ        1.5-1     2025-02-10 [1] CRAN (R 4.5.0)\n stars            0.6-8     2025-02-01 [1] CRAN (R 4.5.1)\n stringi          1.8.7     2025-03-27 [1] CRAN (R 4.5.0)\n stringr        * 1.5.1     2023-11-14 [1] CRAN (R 4.5.0)\n terra            1.8-60    2025-07-21 [1] CRAN (R 4.5.1)\n tibble         * 3.3.0     2025-06-08 [1] CRAN (R 4.5.0)\n tidyr          * 1.3.1     2024-01-24 [1] CRAN (R 4.5.0)\n tidyselect       1.2.1     2024-03-11 [1] CRAN (R 4.5.0)\n tidyverse      * 2.0.0     2023-02-22 [1] CRAN (R 4.5.0)\n timechange       0.3.0     2024-01-18 [1] CRAN (R 4.5.0)\n tmap           * 4.2       2025-09-10 [1] CRAN (R 4.5.1)\n tmaptools        3.3       2025-07-24 [1] CRAN (R 4.5.1)\n tzdb             0.5.0     2025-03-15 [1] CRAN (R 4.5.0)\n units          * 0.8-7     2025-03-11 [1] CRAN (R 4.5.0)\n utf8             1.2.5     2025-05-01 [1] CRAN (R 4.5.0)\n vctrs            0.6.5     2023-12-01 [1] CRAN (R 4.5.0)\n websocket        1.4.4     2025-04-10 [1] CRAN (R 4.5.0)\n withr            3.0.2     2024-10-28 [1] CRAN (R 4.5.0)\n wk               0.9.4     2024-10-11 [1] CRAN (R 4.5.0)\n xfun             0.52      2025-04-02 [1] CRAN (R 4.5.0)\n XML              3.99-0.18 2025-01-01 [1] CRAN (R 4.5.0)\n xml2             1.3.8     2025-03-14 [1] CRAN (R 4.5.0)\n yaml             2.3.10    2024-07-26 [1] CRAN (R 4.5.0)\n\n [1] C:/dev/R-4.5.0/library\n * ── Packages attached to the search path.\n\n──────────────────────────────────────────────────────────────────────────────"
  }
]