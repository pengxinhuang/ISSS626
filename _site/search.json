[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS626 Portfolio",
    "section": "",
    "text": "Welcome! This is my course website for ISSS626.\n\nHands-on → see Ex01a in the navbar.\nIn-class / Take-home pages are placeholders for now."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex02/ex02b.html",
    "href": "Hands-on_Ex/Hands-on_ex02/ex02b.html",
    "title": "Hands-on Exercise 02b: 2nd Order Spatial Point Patterns Analysis",
    "section": "",
    "text": "Second-order spatial point pattern analysis examines the spatial relationships between points in a pattern, specifically focusing on how the presence of one point influences the location of others. Using appropriate functions of spatstat package, this hands-on exercise aims to discover the spatial point processes of childcare centres in Singapore.\nThe specific questions we would like to answer are: - Are the childcare centres in Singapore randomly distributed throughout the country? - If the answer is not, then where are the locations with higher concentration of childcare centres?"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex02/ex02b.html#overview",
    "href": "Hands-on_Ex/Hands-on_ex02/ex02b.html#overview",
    "title": "Hands-on Exercise 02b: 2nd Order Spatial Point Patterns Analysis",
    "section": "",
    "text": "Second-order spatial point pattern analysis examines the spatial relationships between points in a pattern, specifically focusing on how the presence of one point influences the location of others. Using appropriate functions of spatstat package, this hands-on exercise aims to discover the spatial point processes of childcare centres in Singapore.\nThe specific questions we would like to answer are: - Are the childcare centres in Singapore randomly distributed throughout the country? - If the answer is not, then where are the locations with higher concentration of childcare centres?"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex02/ex02b.html#setup-and-loading-r-packages",
    "href": "Hands-on_Ex/Hands-on_ex02/ex02b.html#setup-and-loading-r-packages",
    "title": "Hands-on Exercise 02b: 2nd Order Spatial Point Patterns Analysis",
    "section": "Setup and Loading R Packages",
    "text": "Setup and Loading R Packages\n\n\nCode\nif (!requireNamespace(\"pacman\", quietly = TRUE)) install.packages(\"pacman\")\n\npacman::p_load(sf, tidyverse, tmap, spatstat, rvest, \n               here, janitor, stringr, units)\n\n# Set tmap to plot mode\ntmap_mode(\"plot\")\n\n# Set up directory paths\nroot_dir &lt;- here::here()\nexo_data &lt;- here::here(\"Hands-on_Ex\", \"Hands-on_ex02\", \"data\")\nexo_fig &lt;- here::here(\"Hands-on_Ex\", \"Hands-on_ex02\", \"figures\")\n\nif (!dir.exists(exo_fig)) dir.create(exo_fig, recursive = TRUE, showWarnings = FALSE)\n\nmessage(\"Data directory: \", exo_data)\nmessage(\"Figures directory: \", exo_fig)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex02/ex02b.html#data-import-and-preparation",
    "href": "Hands-on_Ex/Hands-on_ex02/ex02b.html#data-import-and-preparation",
    "title": "Hands-on Exercise 02b: 2nd Order Spatial Point Patterns Analysis",
    "section": "Data Import and Preparation",
    "text": "Data Import and Preparation\n\nImport Master Plan Subzones\n\n\nCode\n# Function to extract KML fields from HTML description\nextract_kml_field &lt;- function(html_text, field_name) {\n  if (is.na(html_text) || html_text == \"\") return(NA_character_)\n  \n  page &lt;- read_html(html_text)\n  rows &lt;- page %&gt;% html_elements(\"tr\")\n  \n  value &lt;- rows %&gt;%\n    keep(~ html_text2(html_element(.x, \"th\")) == field_name) %&gt;%\n    map_chr(~ html_text2(html_element(.x, \"td\")))\n  \n  if (length(value) == 0) NA_character_ else value[1]\n}\n\n# Load Master Plan 2019 subzones\nmessage(\"Loading Master Plan 2019 subzones...\")\nsubzone_path &lt;- file.path(exo_data, \"MasterPlan2019SubzoneBoundaryNoSeaGEOJSON.geojson\")\n\nmpsz &lt;- st_read(subzone_path, quiet = TRUE)\n\n# Transform to SVY21 if needed\nif (st_crs(mpsz)$epsg != 3414) {\n  mpsz &lt;- st_transform(mpsz, 3414)\n}\n\n# Extract fields from HTML Description\nmpsz &lt;- mpsz %&gt;%\n  mutate(\n    SUBZONE_N = map_chr(Description, extract_kml_field, \"SUBZONE_N\"),\n    PLN_AREA_N = map_chr(Description, extract_kml_field, \"PLN_AREA_N\"),\n    SUBZONE_C = map_chr(Description, extract_kml_field, \"SUBZONE_C\"),\n    REGION_N = map_chr(Description, extract_kml_field, \"REGION_N\")\n  ) %&gt;%\n  select(-Name, -Description) %&gt;%\n  relocate(geometry, .after = last_col())\n\n# Make geometries valid\nmpsz &lt;- st_make_valid(mpsz)\n\nmessage(\"Master Plan subzones loaded: \", nrow(mpsz), \" records\")\n\n\n\n\nImport Childcare Services\n\n\nCode\nmessage(\"Loading childcare services...\")\nchildcare_path &lt;- file.path(exo_data, \"ChildCareServices.geojson\")\n\nchildcare_sf &lt;- st_read(childcare_path, quiet = TRUE) %&gt;%\n  janitor::clean_names()\n\n# Transform to SVY21 if needed\nif (st_crs(childcare_sf)$epsg != 3414) {\n  childcare_sf &lt;- st_transform(childcare_sf, 3414)\n}\n\n# Remove Z dimension if present\nchildcare_sf &lt;- st_zm(childcare_sf, drop = TRUE, what = \"ZM\")\n\nmessage(\"Childcare services loaded: \", nrow(childcare_sf), \" records\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex02/ex02b.html#geospatial-data-wrangling-for-spatstat",
    "href": "Hands-on_Ex/Hands-on_ex02/ex02b.html#geospatial-data-wrangling-for-spatstat",
    "title": "Hands-on Exercise 02b: 2nd Order Spatial Point Patterns Analysis",
    "section": "Geospatial Data Wrangling for spatstat",
    "text": "Geospatial Data Wrangling for spatstat\n\nConverting to spatstat format\n\n\nCode\n# Convert childcare points to ppp format\nchildcare_ppp &lt;- as.ppp(childcare_sf)\nclass(childcare_ppp)\n\n\n[1] \"ppp\"\n\n\nCode\n# Check summary\nsummary(childcare_ppp)\n\n\nMarked planar point pattern:  1925 points\nAverage intensity 2.417323e-06 points per square unit\n\nCoordinates are given to 11 decimal places\n\nMark variables: name, description\nSummary:\n     name           description       \n Length:1925        Length:1925       \n Class :character   Class :character  \n Mode  :character   Mode  :character  \n\nWindow: rectangle = [11810.03, 45404.24] x [25596.33, 49300.88] units\n                    (33590 x 23700 units)\nWindow area = 796335000 square units\n\n\nCode\n# Create Singapore boundary owin object\nsg_owin &lt;- as.owin(mpsz)\nclass(sg_owin)\n\n\n[1] \"owin\"\n\n\nCode\n# Plot the owin object\nplot(sg_owin)\n\n\n\n\n\n\n\n\n\nCode\n# Combine points and window\nchildcareSG_ppp = childcare_ppp[sg_owin]\nsummary(childcareSG_ppp)\n\n\nMarked planar point pattern:  1925 points\nAverage intensity 2.452904e-06 points per square unit\n\nCoordinates are given to 11 decimal places\n\nMark variables: name, description\nSummary:\n     name           description       \n Length:1925        Length:1925       \n Class :character   Class :character  \n Mode  :character   Mode  :character  \n\nWindow: polygonal boundary\n88 separate polygons (43 holes)\n                  vertices         area relative.area\npolygon 1              285  1.61128e+06      2.05e-03\npolygon 2              719  5.40368e+07      6.89e-02\npolygon 3               44  2.26577e+03      2.89e-06\npolygon 4               27  1.50315e+04      1.92e-05\npolygon 5              706  1.28815e+07      1.64e-02\npolygon 6 (hole)        41 -4.01660e+04     -5.12e-05\npolygon 7 (hole)       317 -5.11280e+04     -6.51e-05\npolygon 8 (hole)         3 -3.42709e-01     -4.37e-10\npolygon 9               77  3.29939e+05      4.20e-04\npolygon 10 (hole)        3 -4.14100e-04     -5.28e-13\npolygon 11              30  2.80002e+04      3.57e-05\npolygon 12 (hole)        4 -2.86396e-01     -3.65e-10\npolygon 13 (hole)        3 -1.81439e-04     -2.31e-13\npolygon 14 (hole)        3 -5.99531e-04     -7.64e-13\npolygon 15 (hole)        3 -3.04560e-04     -3.88e-13\npolygon 16 (hole)        3 -4.46108e-04     -5.68e-13\npolygon 17 (hole)        5 -2.44408e-04     -3.11e-13\npolygon 18 (hole)        5 -3.64686e-02     -4.65e-11\npolygon 19              71  8.18750e+03      1.04e-05\npolygon 20 (hole)       38 -7.79904e+03     -9.94e-06\npolygon 21 (hole)        3 -3.41897e-05     -4.36e-14\npolygon 22 (hole)        3 -3.65499e-03     -4.66e-12\npolygon 23 (hole)        3 -4.95057e-02     -6.31e-11\npolygon 24              91  1.49663e+04      1.91e-05\npolygon 25 (hole)        3 -3.79135e-02     -4.83e-11\npolygon 26 (hole)      270 -1.21455e+03     -1.55e-06\npolygon 27 (hole)       19 -4.39650e+00     -5.60e-09\npolygon 28 (hole)       35 -1.38385e+02     -1.76e-07\npolygon 29 (hole)       23 -1.99656e+01     -2.54e-08\npolygon 30              40  1.38607e+04      1.77e-05\npolygon 31 (hole)       41 -6.00381e+03     -7.65e-06\npolygon 32 (hole)        7 -1.40546e-01     -1.79e-10\npolygon 33 (hole)       11 -8.36705e+01     -1.07e-07\npolygon 34 (hole)        3 -2.33435e-03     -2.97e-12\npolygon 35              45  2.51218e+03      3.20e-06\npolygon 36             139  3.22293e+03      4.11e-06\npolygon 37             148  3.10395e+03      3.96e-06\npolygon 38 (hole)        4 -1.72650e-04     -2.20e-13\npolygon 39              75  1.73526e+04      2.21e-05\npolygon 40              83  5.28920e+03      6.74e-06\npolygon 41             211  4.70521e+05      6.00e-04\npolygon 42             106  3.04104e+03      3.88e-06\npolygon 43             264  1.50631e+06      1.92e-03\npolygon 44              71  5.63061e+03      7.17e-06\npolygon 45              10  1.99717e+02      2.54e-07\npolygon 46 (hole)        3 -1.37223e-02     -1.75e-11\npolygon 47             487  2.06117e+06      2.63e-03\npolygon 48             155  2.67502e+05      3.41e-04\npolygon 49            1020  1.27781e+06      1.63e-03\npolygon 50 (hole)       12 -5.81913e-01     -7.41e-10\npolygon 51 (hole)        4 -6.55702e-01     -8.36e-10\npolygon 52 (hole)        4 -3.13199e-05     -3.99e-14\npolygon 53 (hole)        3 -3.15099e-05     -4.02e-14\npolygon 54              65  8.42861e+04      1.07e-04\npolygon 55 (hole)        3 -1.20875e-01     -1.54e-10\npolygon 56              47  3.82087e+04      4.87e-05\npolygon 57               6  4.50259e+02      5.74e-07\npolygon 58             129  9.53761e+04      1.22e-04\npolygon 59 (hole)        3 -3.23305e-04     -4.12e-13\npolygon 60               4  2.69313e+02      3.43e-07\npolygon 61            1045  4.44510e+06      5.66e-03\npolygon 62              22  6.74651e+03      8.60e-06\npolygon 63              59  3.43150e+04      4.37e-05\npolygon 64              14  5.86546e+03      7.47e-06\npolygon 65              94  5.96187e+04      7.60e-05\npolygon 66             234  2.08755e+06      2.66e-03\npolygon 67              10  4.90942e+02      6.26e-07\npolygon 68             232  4.72886e+05      6.03e-04\npolygon 69 (hole)       13 -3.91907e+02     -4.99e-07\npolygon 70              15  4.03300e+04      5.14e-05\npolygon 71             227  1.10308e+06      1.41e-03\npolygon 72              10  6.60195e+03      8.41e-06\npolygon 73              19  3.09221e+04      3.94e-05\npolygon 74             145  9.61782e+05      1.23e-03\npolygon 75              30  4.28933e+03      5.47e-06\npolygon 76              37  1.29481e+04      1.65e-05\npolygon 77               4  9.47108e+01      1.21e-07\npolygon 78 (hole)        3 -8.68789e-04     -1.11e-12\npolygon 79 (hole)        3 -3.39815e-04     -4.33e-13\npolygon 80 (hole)        3 -4.52041e-05     -5.76e-14\npolygon 81 (hole)        3 -3.90173e-05     -4.97e-14\npolygon 82 (hole)        3 -9.59845e-05     -1.22e-13\npolygon 83 (hole)        8 -4.28707e-01     -5.46e-10\npolygon 84 (hole)        4 -2.18619e-04     -2.79e-13\npolygon 85 (hole)        6 -8.37554e-01     -1.07e-09\npolygon 86 (hole)        5 -2.92235e-04     -3.72e-13\npolygon 87           15307  7.00834e+08      8.93e-01\npolygon 88 (hole)        3 -7.43616e-06     -9.48e-15\nenclosing rectangle: [2667.54, 56396.44] x [15748.72, 50256.33] units\n                     (53730 x 34510 units)\nWindow area = 784784000 square units\nFraction of frame area: 0.423\n\n\nCode\n# Plot the combined object\nplot(childcareSG_ppp)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex02/ex02b.html#extract-study-areas",
    "href": "Hands-on_Ex/Hands-on_ex02/ex02b.html#extract-study-areas",
    "title": "Hands-on Exercise 02b: 2nd Order Spatial Point Patterns Analysis",
    "section": "Extract Study Areas",
    "text": "Extract Study Areas\nFor this analysis, we’ll focus on four planning areas: Choa Chu Kang, Tampines, Punggol, and Jurong West.\n\n\nCode\n# Extract the four planning areas\npg &lt;- mpsz %&gt;% \n  filter(PLN_AREA_N == \"PUNGGOL\")\ntm &lt;- mpsz %&gt;% \n  filter(PLN_AREA_N == \"TAMPINES\")\nck &lt;- mpsz %&gt;% \n  filter(PLN_AREA_N == \"CHOA CHU KANG\")\njw &lt;- mpsz %&gt;% \n  filter(PLN_AREA_N == \"JURONG WEST\")\n\n# Plot the four areas\npar(mfrow=c(2,2))\nplot(st_geometry(pg), main = \"Punggol\")\nplot(st_geometry(tm), main = \"Tampines\")\nplot(st_geometry(ck), main = \"Choa Chu Kang\")\nplot(st_geometry(jw), main = \"Jurong West\")\n\n\n\n\n\n\n\n\n\n\nCreate owin objects for each area\n\n\nCode\npg_owin &lt;- as.owin(pg)\ntm_owin &lt;- as.owin(tm)\nck_owin &lt;- as.owin(ck)\njw_owin &lt;- as.owin(jw)\n\n\n\n\nExtract childcare points for each area\n\n\nCode\nchildcare_pg_ppp &lt;- childcare_ppp[pg_owin]\nchildcare_tm_ppp &lt;- childcare_ppp[tm_owin]\nchildcare_ck_ppp &lt;- childcare_ppp[ck_owin]\nchildcare_jw_ppp &lt;- childcare_ppp[jw_owin]\n\n# Rescale to kilometer\nchildcare_pg_ppp.km &lt;- rescale.ppp(childcare_pg_ppp, 1000, \"km\")\nchildcare_tm_ppp.km &lt;- rescale.ppp(childcare_tm_ppp, 1000, \"km\")\nchildcare_ck_ppp.km &lt;- rescale.ppp(childcare_ck_ppp, 1000, \"km\")\nchildcare_jw_ppp.km &lt;- rescale.ppp(childcare_jw_ppp, 1000, \"km\")\n\n# Plot the study areas\npar(mfrow=c(2,2))\nplot(childcare_pg_ppp.km, main=\"Punggol\")\nplot(childcare_tm_ppp.km, main=\"Tampines\")\nplot(childcare_ck_ppp.km, main=\"Choa Chu Kang\")\nplot(childcare_jw_ppp.km, main=\"Jurong West\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex02/ex02b.html#second-order-spatial-point-patterns-analysis",
    "href": "Hands-on_Ex/Hands-on_ex02/ex02b.html#second-order-spatial-point-patterns-analysis",
    "title": "Hands-on Exercise 02b: 2nd Order Spatial Point Patterns Analysis",
    "section": "Second-order Spatial Point Patterns Analysis",
    "text": "Second-order Spatial Point Patterns Analysis"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex02/ex02b.html#g-function-analysis",
    "href": "Hands-on_Ex/Hands-on_ex02/ex02b.html#g-function-analysis",
    "title": "Hands-on Exercise 02b: 2nd Order Spatial Point Patterns Analysis",
    "section": "G-Function Analysis",
    "text": "G-Function Analysis\nThe G function measures the distribution of distances from an arbitrary event to its nearest event.\n\nChoa Chu Kang - G Function\n\n\nCode\n# Computing G-function estimation\nG_ck &lt;- Gest(childcare_ck_ppp.km, correction = \"border\")\nplot(G_ck, main = \"G-function: Choa Chu Kang\")\n\n\n\n\n\n\n\n\n\n\nComplete Spatial Randomness Test for Choa Chu Kang\n\n\nCode\n# Perform CSR test with envelope\nG_ck.csr &lt;- envelope(childcare_ck_ppp.km, Gest, \n                     nsim = 999,\n                     rank = 1,\n                     ginterval = c(0, 500))\n\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\n\nCode\nplot(G_ck.csr, main = \"G-function CSR Test: Choa Chu Kang\")\n\n\n\n\n\n\n\n\n\n\n\n\nTampines - G Function\n\n\nCode\n# Computing G-function estimation\nG_tm &lt;- Gest(childcare_tm_ppp.km, correction = \"best\")\nplot(G_tm, main = \"G-function: Tampines\")\n\n\n\n\n\n\n\n\n\n\nComplete Spatial Randomness Test for Tampines\n\n\nCode\n# Perform CSR test with envelope\nG_tm.csr &lt;- envelope(childcare_tm_ppp.km, Gest,\n                     nsim = 999,\n                     rank = 1,\n                     ginterval = c(0, 500))\n\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\n\nCode\nplot(G_tm.csr, main = \"G-function CSR Test: Tampines\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex02/ex02b.html#f-function-analysis",
    "href": "Hands-on_Ex/Hands-on_ex02/ex02b.html#f-function-analysis",
    "title": "Hands-on Exercise 02b: 2nd Order Spatial Point Patterns Analysis",
    "section": "F-Function Analysis",
    "text": "F-Function Analysis\nThe F function estimates the empty space function or its hazard rate from a point pattern.\n\nChoa Chu Kang - F Function\n\n\nCode\n# Computing F-function estimation\nF_ck &lt;- Fest(childcare_ck_ppp.km, correction = \"best\")\nplot(F_ck, main = \"F-function: Choa Chu Kang\")\n\n\n\n\n\n\n\n\n\n\nComplete Spatial Randomness Test for Choa Chu Kang\n\n\nCode\n# Perform CSR test with envelope\nF_ck.csr &lt;- envelope(childcare_ck_ppp.km, Fest,\n                     nsim = 999,\n                     rank = 1,\n                     ginterval = c(0, 500))\n\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\n\nCode\nplot(F_ck.csr, main = \"F-function CSR Test: Choa Chu Kang\")\n\n\n\n\n\n\n\n\n\n\n\n\nTampines - F Function\n\n\nCode\n# Computing F-function estimation\nF_tm &lt;- Fest(childcare_tm_ppp.km, correction = \"best\")\nplot(F_tm, main = \"F-function: Tampines\")\n\n\n\n\n\n\n\n\n\n\nComplete Spatial Randomness Test for Tampines\n\n\nCode\n# Perform CSR test with envelope\nF_tm.csr &lt;- envelope(childcare_tm_ppp.km, Fest,\n                     nsim = 999,\n                     rank = 1,\n                     ginterval = c(0, 500))\n\n\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n\n\nCode\nplot(F_tm.csr, main = \"F-function CSR Test: Tampines\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex02/ex02b.html#k-function-analysis",
    "href": "Hands-on_Ex/Hands-on_ex02/ex02b.html#k-function-analysis",
    "title": "Hands-on Exercise 02b: 2nd Order Spatial Point Patterns Analysis",
    "section": "K-Function Analysis",
    "text": "K-Function Analysis\nK-function measures the number of events found up to a given distance of any particular event.\n\nChoa Chu Kang - K Function\n\n\nCode\n# Computing K-function estimate\nK_ck &lt;- Kest(childcare_ck_ppp.km, correction = \"border\")\nplot(K_ck, main = \"K-function: Choa Chu Kang\")\n\n\n\n\n\n\n\n\n\n\nComplete Spatial Randomness Test for Choa Chu Kang\n\n\nCode\n# Perform CSR test with envelope\nK_ck.csr &lt;- envelope(childcare_ck_ppp.km, Kest,\n                     nsim = 99,\n                     rank = 1,\n                     ginterval = c(0, 500))\n\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\n\nCode\nplot(K_ck.csr, main = \"K-function CSR Test: Choa Chu Kang\")\n\n\n\n\n\n\n\n\n\n\n\n\nTampines - K Function\n\n\nCode\n# Computing K-function estimate\nK_tm &lt;- Kest(childcare_tm_ppp.km, correction = \"border\")\nplot(K_tm, main = \"K-function: Tampines\")\n\n\n\n\n\n\n\n\n\n\nComplete Spatial Randomness Test for Tampines\n\n\nCode\n# Perform CSR test with envelope\nK_tm.csr &lt;- envelope(childcare_tm_ppp.km, Kest,\n                     nsim = 99,\n                     rank = 1,\n                     ginterval = c(0, 500))\n\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\n\nCode\nplot(K_tm.csr, main = \"K-function CSR Test: Tampines\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex02/ex02b.html#l-function-analysis",
    "href": "Hands-on_Ex/Hands-on_ex02/ex02b.html#l-function-analysis",
    "title": "Hands-on Exercise 02b: 2nd Order Spatial Point Patterns Analysis",
    "section": "L-Function Analysis",
    "text": "L-Function Analysis\nL-function is the normalized version of K-function.\n\nChoa Chu Kang - L Function\n\n\nCode\n# Computing L-function estimate\nL_ck &lt;- Lest(childcare_ck_ppp.km, correction = \"border\")\nplot(L_ck, main = \"L-function: Choa Chu Kang\")\n\n\n\n\n\n\n\n\n\n\nComplete Spatial Randomness Test for Choa Chu Kang\n\n\nCode\n# Perform CSR test with envelope\nL_ck.csr &lt;- envelope(childcare_ck_ppp.km, Lest,\n                     nsim = 99,\n                     rank = 1,\n                     ginterval = c(0, 500))\n\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\n\nCode\nplot(L_ck.csr, . - r ~ r, \n     main = \"L-function CSR Test: Choa Chu Kang\",\n     ylab = \"L(r) - r\")\n\n\n\n\n\n\n\n\n\n\n\n\nTampines - L Function\n\n\nCode\n# Computing L-function estimate\nL_tm &lt;- Lest(childcare_tm_ppp.km, correction = \"border\")\nplot(L_tm, main = \"L-function: Tampines\")\n\n\n\n\n\n\n\n\n\n\nComplete Spatial Randomness Test for Tampines\n\n\nCode\n# Perform CSR test with envelope\nL_tm.csr &lt;- envelope(childcare_tm_ppp.km, Lest,\n                     nsim = 99,\n                     rank = 1,\n                     ginterval = c(0, 500))\n\n\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n\n\nCode\nplot(L_tm.csr, . - r ~ r,\n     main = \"L-function CSR Test: Tampines\",\n     ylab = \"L(r) - r\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex02/ex02b.html#summary-and-interpretation",
    "href": "Hands-on_Ex/Hands-on_ex02/ex02b.html#summary-and-interpretation",
    "title": "Hands-on Exercise 02b: 2nd Order Spatial Point Patterns Analysis",
    "section": "Summary and Interpretation",
    "text": "Summary and Interpretation\n\nKey Findings\nBased on the second-order spatial point pattern analyses:\n\nG-Function Results:\n\nBoth Choa Chu Kang and Tampines show clustering patterns\nThe observed G-function lies above the theoretical CSR envelope\nThis indicates that childcare centres are closer to each other than expected under random distribution\n\nF-Function Results:\n\nThe empty space function shows shorter distances to the nearest childcare centre than expected\nThis further confirms the clustering pattern\n\nK-Function Results:\n\nAt various distance scales, there are more neighbours than expected under CSR\nThe clustering is significant across multiple spatial scales\n\nL-Function Results:\n\nThe normalized L-function confirms clustering patterns\nThe deviation from the theoretical line (L(r) - r = 0) indicates non-random distribution\n\n\n\n\nConclusions\nThe childcare centres in both Choa Chu Kang and Tampines planning areas are NOT randomly distributed. Instead, they exhibit significant clustering patterns. This clustering likely reflects:\n\nConcentration in residential areas\nProximity to HDB estates\nStrategic placement near transport nodes\nMarket-driven location decisions\n\nThe null hypothesis of Complete Spatial Randomness is rejected for both areas at the 0.001 significance level."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex01/ex01b.html",
    "href": "Hands-on_Ex/Hands-on_ex01/ex01b.html",
    "title": "Hands-on Exercise 01b: Choropleth Mapping (Population 2024)",
    "section": "",
    "text": "This exercise demonstrates choropleth mapping techniques using Singapore’s 2024 population data. We’ll create two thematic maps:\n\nAged population share (65+) by Planning Area using quantile classification\nDependency ratio by Planning Area using Jenks natural breaks classification"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex01/ex01b.html#overview",
    "href": "Hands-on_Ex/Hands-on_ex01/ex01b.html#overview",
    "title": "Hands-on Exercise 01b: Choropleth Mapping (Population 2024)",
    "section": "",
    "text": "This exercise demonstrates choropleth mapping techniques using Singapore’s 2024 population data. We’ll create two thematic maps:\n\nAged population share (65+) by Planning Area using quantile classification\nDependency ratio by Planning Area using Jenks natural breaks classification"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex01/ex01b.html#setup-and-environment",
    "href": "Hands-on_Ex/Hands-on_ex01/ex01b.html#setup-and-environment",
    "title": "Hands-on Exercise 01b: Choropleth Mapping (Population 2024)",
    "section": "Setup and Environment",
    "text": "Setup and Environment\n\n\nCode\n# 兜底：没装 pacman 就装\nif (!requireNamespace(\"pacman\", quietly = TRUE)) install.packages(\"pacman\")\nif (!requireNamespace(\"pacman\", quietly = TRUE)) install.packages(\"pacman\")\npacman::p_load(sf, dplyr, tidyr, readr, janitor, stringr, xml2, rvest,\n               tmap, here, units, purrr)\n\n# 需要 purrr，因为后面用到 map_chr / keep\npacman::p_load(sf, dplyr, tidyr, readr, janitor, stringr, xml2, rvest,\n               tmap, here, units, purrr)\ntmap_mode(\"plot\")\n\npath_ex01 &lt;- here::here(\"Hands-on_Ex\", \"Hands-on_ex01\")\npath_geo  &lt;- file.path(path_ex01, \"data\", \"geospatial\")\npath_asp  &lt;- file.path(path_ex01, \"data\", \"aspatial\")\npath_fig  &lt;- file.path(path_ex01, \"figures\")\nif (!dir.exists(path_fig)) dir.create(path_fig, recursive = TRUE)\n\nmessage(\"Working directory: \", getwd())\nmessage(\"tmap version: \", as.character(packageVersion(\"tmap\")))\nmessage(\"Date: \", as.character(Sys.Date()))\ntmap_options(show.messages = FALSE)  # 关闭“组件被缩放”等提示"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex01/ex01b.html#data-import",
    "href": "Hands-on_Ex/Hands-on_ex01/ex01b.html#data-import",
    "title": "Hands-on Exercise 01b: Choropleth Mapping (Population 2024)",
    "section": "Data Import",
    "text": "Data Import\n\nImport Geospatial Data (KML)\n\n\nCode\n# Import Master Plan 2019 Subzone Boundary (No Sea) from KML\nkml_file &lt;- file.path(path_geo, \"MasterPlan2019SubzoneBoundaryNoSeaKML.kml\")\n\nif (!file.exists(kml_file)) {\n  stop(\"KML file not found at: \", kml_file)\n}\n\n# Read KML file\nsubzone &lt;- st_read(kml_file, quiet = FALSE)\n\n\nReading layer `URA_MP19_SUBZONE_NO_SEA_PL' from data source \n  `C:\\Users\\HOPE\\Desktop\\ISSS626\\Hands-on_Ex\\Hands-on_ex01\\data\\geospatial\\MasterPlan2019SubzoneBoundaryNoSeaKML.kml' \n  using driver `KML'\nSimple feature collection with 332 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\nCode\n# Check if GEOMETRYCOLLECTION and extract polygons if needed\nif (any(st_geometry_type(subzone) == \"GEOMETRYCOLLECTION\")) {\n  message(\"Extracting POLYGON from GEOMETRYCOLLECTION...\")\n  subzone &lt;- st_collection_extract(subzone, \"POLYGON\")\n}\n\n# Transform to SVY21 (EPSG:3414)\nsubzone &lt;- st_transform(subzone, crs = 3414)\n\nmessage(\"CRS after transformation: EPSG:\", st_crs(subzone)$epsg)\n\n\n\n\nParse KML Attributes\n\n\nCode\n# Function to extract field from HTML description\nextract_kml_field &lt;- function(html_text, field_name) {\n  if (is.na(html_text) || html_text == \"\") return(NA_character_)\n  \n  page &lt;- read_html(html_text)\n  rows &lt;- page %&gt;% html_elements(\"tr\")\n  \n  # Find the row with matching field name\n  value &lt;- rows %&gt;%\n    keep(~ html_text2(html_element(.x, \"th\")) == field_name) %&gt;%\n    html_element(\"td\") %&gt;%\n    html_text2()\n  \n  if (length(value) == 0) NA_character_ else value\n}\n\n# Check if PLN_AREA_N and SUBZONE_N exist\nif (!all(c(\"PLN_AREA_N\", \"SUBZONE_N\") %in% names(subzone))) {\n  message(\"Extracting planning area and subzone names from Description field...\")\n  \n  # Extract fields from HTML description\n  subzone &lt;- subzone %&gt;%\n    mutate(\n      pln_area_n = map_chr(Description, extract_kml_field, \"PLN_AREA_N\"),\n      subzone_n = map_chr(Description, extract_kml_field, \"SUBZONE_N\")\n    ) %&gt;%\n    select(-Name, -Description)\n} else {\n  # If fields exist, just rename to snake_case\n  subzone &lt;- subzone %&gt;%\n    clean_names()\n}\n\n# Display sample data\nmessage(\"Subzone data structure:\")\nmessage(\"- Records: \", nrow(subzone))\nmessage(\"- Planning areas: \", n_distinct(subzone$pln_area_n))\n\n\n\n\nAggregate to Planning Area Level\n\n\nCode\n# Aggregate subzones to planning area level\nplanning &lt;- subzone %&gt;%\n  group_by(pln_area_n) %&gt;%\n  summarise(\n    do_union = TRUE,\n    .groups = 'drop'\n  )\n\nmessage(\"Planning areas created: \", nrow(planning))\n\n# Verify CRS\nstopifnot(st_crs(planning) == st_crs(3414))\n\n\n\n\nImport Population Data\n\n\nCode\n# --- Import population CSV (robust rename) ---\npop_file &lt;- file.path(path_asp, \"respopagesextod2024.csv\")\nif (!file.exists(pop_file)) stop(\"Population CSV file not found at: \", pop_file)\n\npop_raw &lt;- read_csv(pop_file, show_col_types = FALSE)\nmessage(\"Raw columns: \", paste(names(pop_raw), collapse = \", \"))\n\n# 标准化列名为小写下划线\npopdata &lt;- pop_raw %&gt;% janitor::clean_names()\n\nnm &lt;- names(popdata)\nif (\"planning_area\"     %in% nm) popdata &lt;- dplyr::rename(popdata, pa  = planning_area)\nif (\"planning_area_name\"%in% nm) popdata &lt;- dplyr::rename(popdata, pa  = planning_area_name)\nif (\"age_group\"         %in% nm) popdata &lt;- dplyr::rename(popdata, ag  = age_group)\nif (\"type_of_dwelling\"  %in% nm) popdata &lt;- dplyr::rename(popdata, tod = type_of_dwelling)\nif (\"value\"             %in% nm) popdata &lt;- dplyr::rename(popdata, pop = value)\n\npopdata &lt;- popdata %&gt;%\n  mutate(\n    pa  = str_squish(pa),\n    ag  = str_replace_all(str_to_lower(ag), \"\\\\s+\", \"_\"),\n    tod = str_squish(tod),\n    sex = str_squish(sex)\n  )\n\n\n# 映射不同写法 -&gt; 统一到 pa / ag / sex / tod / pop\n# （左边=原始列名，右边=统一后的列名）\nalias_map &lt;- c(\n  \"planning_area\"    = \"pa\",\n  \"planning_area_name\" = \"pa\",\n  \"pa\"               = \"pa\",\n  \"age_group\"        = \"ag\",\n  \"ag\"               = \"ag\",\n  \"sex\"              = \"sex\",\n  \"type_of_dwelling\" = \"tod\",\n  \"tod\"              = \"tod\",\n  \"value\"            = \"pop\",\n  \"population\"       = \"pop\"\n)\n\n# 只对存在的列做重命名：rename(new = old)\nmap &lt;- alias_map[names(alias_map) %in% names(popdata)]\npopdata &lt;- dplyr::rename(popdata, !!!setNames(names(map), map))\n\n# 现在这5列应该都在：pa / ag / sex / tod / pop\nneed &lt;- c(\"pa\", \"ag\", \"sex\", \"tod\", \"pop\")\nmiss &lt;- setdiff(need, names(popdata))\nif (length(miss)) stop(\"These required columns are missing after rename: \", paste(miss, collapse = \", \"))\n\n# 文本清洗：去多余空格，小写化 age_group 并把空格变下划线\npopdata &lt;- popdata %&gt;%\n  dplyr::mutate(\n    pa = stringr::str_squish(pa),\n    ag = stringr::str_replace_all(stringr::str_to_lower(ag), \"\\\\s+\", \"_\"),\n    tod = stringr::str_squish(tod),\n    sex = stringr::str_squish(sex)\n  )\n\nmessage(\"Normalized columns: \", paste(names(popdata), collapse = \", \"))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex01/ex01b.html#data-wrangling",
    "href": "Hands-on_Ex/Hands-on_ex01/ex01b.html#data-wrangling",
    "title": "Hands-on Exercise 01b: Choropleth Mapping (Population 2024)",
    "section": "Data Wrangling",
    "text": "Data Wrangling\n\nProcess Population Data\n\n\nCode\n# --- Process population BY SUBZONE (sum across Sex and TOD) ---\n\n# 前提：import-population 已 clean_names()，并把列名统一成 pa/sz/ag/sex/tod/pop/time\n# 如果你还没统一列名，请在 import-population 那块 clean_names() 后加：\n# nm &lt;- names(popdata)\n# if (\"planning_area\" %in% nm) popdata &lt;- dplyr::rename(popdata, pa = planning_area)\n# if (\"subzone\"       %in% nm) popdata &lt;- dplyr::rename(popdata, sz = subzone)\n# if (\"age_group\"     %in% nm) popdata &lt;- dplyr::rename(popdata, ag = age_group)\n# if (\"type_of_dwelling\" %in% nm) popdata &lt;- dplyr::rename(popdata, tod = type_of_dwelling)\n# if (\"value\"         %in% nm) popdata &lt;- dplyr::rename(popdata, pop = value)\n\n# 0) 只取 2024（如果有 time 列）\npop_w &lt;- popdata\nif (\"time\" %in% names(pop_w)) {\n  pop_w &lt;- pop_w %&gt;% dplyr::filter(time == max(time, na.rm = TRUE))\n}\n\n# 1) 不再按 Sex/TOD 过滤，直接“对子区+年龄段”把人头加总（= Total）\npop_sz &lt;- pop_w %&gt;%\n  dplyr::group_by(sz, ag) %&gt;%\n  dplyr::summarise(pop = sum(pop, na.rm = TRUE), .groups = \"drop\") %&gt;%\n  # 标准化子区名，提取起始年龄\n  dplyr::mutate(\n    sz_clean  = stringr::str_squish(stringr::str_to_upper(sz)),\n    ag_start  = readr::parse_integer(stringr::str_extract(ag, \"^[0-9]+\")),\n    age_category = dplyr::case_when(\n      !is.na(ag_start) & ag_start &lt;= 19 ~ \"young\",\n      !is.na(ag_start) & ag_start &lt;= 64 ~ \"econ\",\n      TRUE                              ~ \"aged\"\n    )\n  ) %&gt;%\n  dplyr::count(sz_clean, age_category, wt = pop, name = \"population\") %&gt;%\n  tidyr::complete(sz_clean, age_category, fill = list(population = 0)) %&gt;%\n  tidyr::pivot_wider(names_from = age_category, values_from = population, values_fill = 0)\n\n# 2) 指标（安全版）\nfor (col in c(\"young\",\"econ\",\"aged\")) if (!col %in% names(pop_sz)) pop_sz[[col]] &lt;- 0\npop_sz &lt;- pop_sz %&gt;%\n  dplyr::mutate(\n    total       = young + econ + aged,\n    aged_share  = dplyr::if_else(total &gt; 0, 100 * aged / total, 0),\n    dependency  = dplyr::if_else(econ  &gt; 0, 100 * (young + aged) / econ, NA_real_)\n  )\n\nmessage(\"Subzone-level population rows: \", nrow(pop_sz))\n\n\n\n\nJoin Spatial and Population Data\n\n\nCode\n# --- Build SZ -&gt; PA bridge from KML, then aggregate to PA ---\n\n# 注意：你的子区几何对象在前文叫 subzone（若叫 mpsz，请把下行的 subzone 改成 mpsz）\nbridge &lt;- subzone %&gt;%\n  sf::st_drop_geometry() %&gt;%\n  dplyr::transmute(\n    sz_clean       = stringr::str_squish(stringr::str_to_upper(subzone_n)),\n    pln_area_clean = stringr::str_squish(stringr::str_to_upper(pln_area_n))\n  ) %&gt;%\n  dplyr::distinct()\n\n# 子区人口接上映射 → 聚合到规划区\npop_pa &lt;- pop_sz %&gt;%\n  dplyr::left_join(bridge, by = \"sz_clean\") %&gt;%\n  dplyr::filter(!is.na(pln_area_clean)) %&gt;%\n  dplyr::group_by(pln_area_clean) %&gt;%\n  dplyr::summarise(\n    young = sum(young, na.rm = TRUE),\n    econ  = sum(econ,  na.rm = TRUE),\n    aged  = sum(aged,  na.rm = TRUE),\n    .groups = \"drop\"\n  ) %&gt;%\n  dplyr::mutate(\n    total       = young + econ + aged,\n    aged_share  = dplyr::if_else(total &gt; 0, 100 * aged / total, 0),\n    dependency  = dplyr::if_else(econ  &gt; 0, 100 * (young + aged) / econ, NA_real_)\n  )\n\nmessage(\"Aggregated to planning areas: \", nrow(pop_pa), \" (expected ≈55)\")\n\n# 用 inner_join 接回规划区几何（保证有值的区才保留）\nplanning &lt;- planning %&gt;% dplyr::mutate(\n  pln_area_clean = stringr::str_squish(stringr::str_to_upper(pln_area_n))\n)\nplanning_pop &lt;- planning %&gt;%\n  dplyr::inner_join(pop_pa, by = \"pln_area_clean\")\n\n# 必须 &gt;0（否则仍是 NA）\nstopifnot(sum(!is.na(planning_pop$aged_share)) &gt; 0)\nstopifnot(sum(!is.na(planning_pop$dependency)) &gt; 0)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex01/ex01b.html#create-choropleth-maps",
    "href": "Hands-on_Ex/Hands-on_ex01/ex01b.html#create-choropleth-maps",
    "title": "Hands-on Exercise 01b: Choropleth Mapping (Population 2024)",
    "section": "Create Choropleth Maps",
    "text": "Create Choropleth Maps\n\nMap A: Aged Population Share (65+)\n\n\nCode\ntmap_options(show.messages = FALSE)\n\n# Map A —— Aged 65+ share（过滤 NA，避免 Missing）\nplanning_aged &lt;- planning_pop[!is.na(planning_pop$aged_share) & !sf::st_is_empty(planning_pop), ]\n\nmap_aged &lt;- tm_shape(planning_aged) +\n  tm_polygons(col = \"aged_share\", style = \"quantile\", n = 5, palette = \"Reds\",\n              title = \"Aged Share (%)\") +\n  tm_layout(legend.outside = TRUE) +\n  tm_compass(type = \"8star\", size = 1.8, position = c(\"left\",\"top\")) +\n  tm_scale_bar(position = c(\"left\",\"bottom\")) +\n  tm_credits(\"Data: URA MP19 (No Sea), SingStat 2024\\nCRS: SVY21 / EPSG:3414\",\n             position = c(\"right\",\"bottom\"), size = 0.6)\n\nmap_aged\n\n\n\n\n\n\n\n\n\nCode\ntmap_save(map_aged, file.path(path_fig, \"ex01b_aged_share_quantile.png\"),\n          width = 1600, height = 1200, dpi = 300, units = \"px\")\n\n\n\n\nMap B: Dependency Ratio\n\n\nCode\n# Map B —— Dependency ratio（过滤 NA）\nplanning_dep &lt;- planning_pop[!is.na(planning_pop$dependency) & !sf::st_is_empty(planning_pop), ]\n\nmap_dependency &lt;- tm_shape(planning_dep) +\n  tm_polygons(col = \"dependency\", style = \"jenks\", n = 5, palette = \"PuBuGn\",\n              title = \"Dependency Ratio (%)\") +\n  tm_layout(legend.outside = TRUE) +\n  tm_compass(type = \"8star\", size = 1.8, position = c(\"left\",\"top\")) +\n  tm_scale_bar(position = c(\"left\",\"bottom\")) +\n  tm_credits(\"Data: URA MP19 (No Sea), SingStat 2024\\nCRS: SVY21 / EPSG:3414\",\n             position = c(\"right\",\"bottom\"), size = 0.6)\n\nmap_dependency\n\n\n\n\n\n\n\n\n\nCode\ntmap_save(map_dependency, file.path(path_fig, \"ex01b_dependency_jenks.png\"),\n          width = 1600, height = 1200, dpi = 300, units = \"px\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex01/ex01b.html#results",
    "href": "Hands-on_Ex/Hands-on_ex01/ex01b.html#results",
    "title": "Hands-on Exercise 01b: Choropleth Mapping (Population 2024)",
    "section": "Results",
    "text": "Results\nThe two choropleth maps have been successfully created and saved to the figures folder:\n\nMap A: Share of Aged Population (65+)\n\n\n\nAged Population Share\n\n\nThis map uses quantile classification with 5 classes to show the distribution of aged population (65 years and above) as a percentage of total population across Singapore’s planning areas. The red color ramp helps identify areas with higher concentrations of elderly residents.\n\n\nMap B: Dependency Ratio\n\n\n\nDependency Ratio\n\n\nThis map uses Jenks natural breaks classification with 5 classes to visualize the dependency ratio across planning areas. The dependency ratio represents the proportion of economically dependent population (young and aged) to the economically active population. The PuBuGn color scheme provides clear visual distinction between areas with different dependency levels."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex01/ex01b.html#summary-statistics",
    "href": "Hands-on_Ex/Hands-on_ex01/ex01b.html#summary-statistics",
    "title": "Hands-on Exercise 01b: Choropleth Mapping (Population 2024)",
    "section": "Summary Statistics",
    "text": "Summary Statistics\n\n\nCode\n# Display summary statistics\ncat(\"\\n=== Summary Statistics ===\\n\")\n\n\n\n=== Summary Statistics ===\n\n\nCode\ncat(\"\\nAged Population Share (%):\\n\")\n\n\n\nAged Population Share (%):\n\n\nCode\nsummary(planning_pop$aged_share)\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.000   1.639  14.964  12.790  21.026  28.801 \n\n\nCode\ncat(\"\\nDependency Ratio (%):\\n\")\n\n\n\nDependency Ratio (%):\n\n\nCode\nsummary(planning_pop$dependency)\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n  27.30   51.08   58.48   56.26   64.18   72.89      13 \n\n\nCode\n# Top 5 areas with highest aged share\ncat(\"\\nTop 5 Planning Areas - Highest Aged Share:\\n\")\n\n\n\nTop 5 Planning Areas - Highest Aged Share:\n\n\nCode\nplanning_pop %&gt;%\n  st_drop_geometry() %&gt;%\n  select(pln_area_n, aged_share) %&gt;%\n  arrange(desc(aged_share)) %&gt;%\n  head(5) %&gt;%\n  print()\n\n\n# A tibble: 5 × 2\n  pln_area_n   aged_share\n  &lt;chr&gt;             &lt;dbl&gt;\n1 OUTRAM             28.8\n2 ANG MO KIO         25.4\n3 ROCHOR             24.8\n4 SUNGEI KADUT       24.6\n5 BUKIT MERAH        24.5\n\n\nCode\n# Top 5 areas with highest dependency ratio\ncat(\"\\nTop 5 Planning Areas - Highest Dependency Ratio:\\n\")\n\n\n\nTop 5 Planning Areas - Highest Dependency Ratio:\n\n\nCode\nplanning_pop %&gt;%\n  st_drop_geometry() %&gt;%\n  select(pln_area_n, dependency) %&gt;%\n  arrange(desc(dependency)) %&gt;%\n  head(5) %&gt;%\n  print()\n\n\n# A tibble: 5 × 2\n  pln_area_n  dependency\n  &lt;chr&gt;            &lt;dbl&gt;\n1 OUTRAM            72.9\n2 CHANGI            71.4\n3 BUKIT TIMAH       70.6\n4 ANG MO KIO        67.9\n5 BUKIT MERAH       67.4\n\n\n\nEnd of Hands-on Exercise 01b"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex01/ex01a.html",
    "href": "Hands-on_Ex/Hands-on_ex01/ex01a.html",
    "title": "Hands-on Exercise 01a: Geospatial Data Wrangling",
    "section": "",
    "text": "This exercise focuses on importing, cleaning, and standardizing geospatial data for Singapore. We will process three spatial datasets (subzones, cycling paths, and pre-schools) and one aspatial dataset (Airbnb listings), ensuring all spatial data uses the SVY21 (EPSG:3414) coordinate reference system."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex01/ex01a.html#overview",
    "href": "Hands-on_Ex/Hands-on_ex01/ex01a.html#overview",
    "title": "Hands-on Exercise 01a: Geospatial Data Wrangling",
    "section": "",
    "text": "This exercise focuses on importing, cleaning, and standardizing geospatial data for Singapore. We will process three spatial datasets (subzones, cycling paths, and pre-schools) and one aspatial dataset (Airbnb listings), ensuring all spatial data uses the SVY21 (EPSG:3414) coordinate reference system."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex01/ex01a.html#setup-and-environment",
    "href": "Hands-on_Ex/Hands-on_ex01/ex01a.html#setup-and-environment",
    "title": "Hands-on Exercise 01a: Geospatial Data Wrangling",
    "section": "Setup and Environment",
    "text": "Setup and Environment\n\n\nCode\n# Load required packages (including lwgeom for geometry validation)\nif (!requireNamespace(\"pacman\", quietly = TRUE)) install.packages(\"pacman\")\n\npacman::p_load(sf, lwgeom, dplyr, readr, janitor, stringr, here, tmap, ggplot2, units)\n\n# Print session information for reproducibility\ncat(\"R version:\", R.version.string, \"\\n\")\n\n\nR version: R version 4.5.0 (2025-04-11 ucrt) \n\n\nCode\ncat(\"sf version:\", as.character(packageVersion(\"sf\")), \"\\n\")\n\n\nsf version: 1.0.20 \n\n\nCode\nmessage(\"Date: \", as.character(Sys.Date()))\n\n# Define path variables using here::here()\npath_root &lt;- here::here()\npath_ex01 &lt;- here::here(\"Hands-on_Ex\", \"Hands-on_ex01\")\npath_geo &lt;- here::here(\"Hands-on_Ex\", \"Hands-on_ex01\", \"data\", \"geospatial\")\npath_asp &lt;- here::here(\"Hands-on_Ex\", \"Hands-on_ex01\", \"data\", \"aspatial\")\n\n# Display paths for verification\nmessage(\"Project root: \", path_root)\nmessage(\"Exercise 01 path: \", path_ex01)\nmessage(\"Geospatial data path: \", path_geo)\nmessage(\"Aspatial data path: \", path_asp)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex01/ex01a.html#workflow",
    "href": "Hands-on_Ex/Hands-on_ex01/ex01a.html#workflow",
    "title": "Hands-on Exercise 01a: Geospatial Data Wrangling",
    "section": "Workflow",
    "text": "Workflow\n\nStep 1: Import Geospatial Data\n\n\nCode\n# 1.1 Import MP14_SUBZONE_WEB_PL (Polygon)\nmessage(\"\\n=== Importing Subzone Data ===\")\n\n\n\n=== Importing Subzone Data ===\n\n\nCode\nsubzone_file &lt;- file.path(path_geo, \"MP14_SUBZONE_WEB_PL.shp\")\nif (!file.exists(subzone_file)) {\n  stop(\"MP14_SUBZONE_WEB_PL.shp not found at: \", subzone_file,\n       \"\\nPlease ensure the file is placed in: \", path_geo)\n}\n\nmpsz &lt;- sf::st_read(dsn = path_geo, layer = \"MP14_SUBZONE_WEB_PL\", quiet = FALSE)\n\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\Users\\HOPE\\Desktop\\ISSS626\\Hands-on_Ex\\Hands-on_ex01\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nCode\nsub_crs &lt;- sf::st_crs(mpsz)\nif (is.na(sub_crs$epsg)) {\n  hint &lt;- paste(sub_crs$input, sub_crs$wkt)\n  if (grepl(\"SVY21|Singapore TM|3414\", hint, ignore.case = TRUE)) {\n    message(\"Subzone CRS shows 'SVY21' but EPSG is missing — setting EPSG:3414 explicitly.\")\n    mpsz &lt;- sf::st_set_crs(mpsz, 3414)\n  } else {\n    stop(\"Subzone CRS has no EPSG and doesn't look like SVY21. Check the .prj file.\")\n  }\n}\n\n\nSubzone CRS shows 'SVY21' but EPSG is missing — setting EPSG:3414 explicitly.\n\n\nCode\n# Display basic information\nmessage(\"Subzone data imported successfully\")\n\n\nSubzone data imported successfully\n\n\nCode\nmessage(\"- Records: \", nrow(mpsz))\n\n\n- Records: 323\n\n\nCode\nmessage(\"- CRS: \", sf::st_crs(mpsz)$input, \" | EPSG: \", sf::st_crs(mpsz)$epsg)\n\n\n- CRS: EPSG:3414 | EPSG: 3414\n\n\nCode\nmessage(\"- Geometry type: \", paste(unique(sf::st_geometry_type(mpsz)), collapse = \", \"))\n\n\n- Geometry type: MULTIPOLYGON\n\n\n\n\nCode\n# 1.2 Import CyclingPathGazette (Line)\nmessage(\"\\n=== Importing Cycling Path Data ===\")\n\n\n\n=== Importing Cycling Path Data ===\n\n\nCode\ncycling_file &lt;- file.path(path_geo, \"CyclingPath_Aug2025\", \"CyclingPathGazette.shp\")\nif (!file.exists(cycling_file)) {\n  stop(\"CyclingPathGazette.shp not found at: \", cycling_file,\n       \"\\nPlease ensure the file is placed in: \", file.path(path_geo, \"CyclingPath_Aug2025\"))\n}\n\ncycling_path &lt;- sf::st_read(cycling_file, quiet = FALSE)\n\n\nReading layer `CyclingPathGazette' from data source \n  `C:\\Users\\HOPE\\Desktop\\ISSS626\\Hands-on_Ex\\Hands-on_ex01\\data\\geospatial\\CyclingPath_Aug2025\\CyclingPathGazette.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 4674 features and 7 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 11721.1 ymin: 27550.13 xmax: 42809.37 ymax: 49702.59\nProjected CRS: SVY21\n\n\nCode\ncy_crs &lt;- sf::st_crs(cycling_path)\nif (is.na(cy_crs$epsg)) {\n  hint &lt;- paste(cy_crs$input, cy_crs$wkt)\n  if (grepl(\"SVY21|Singapore TM|3414\", hint, ignore.case = TRUE)) {\n    message(\"Cycling Path CRS shows 'SVY21' but EPSG is missing — setting EPSG:3414 explicitly.\")\n    cycling_path &lt;- sf::st_set_crs(cycling_path, 3414)\n  } else {\n    stop(\"Cycling Path CRS has no EPSG and doesn't look like SVY21. Check the .prj file.\")\n  }\n}\n\n\nCycling Path CRS shows 'SVY21' but EPSG is missing — setting EPSG:3414 explicitly.\n\n\nCode\n# Display basic information\nmessage(\"Cycling path data imported successfully\")\n\n\nCycling path data imported successfully\n\n\nCode\nmessage(\"- Records: \", nrow(cycling_path))\n\n\n- Records: 4674\n\n\nCode\nmessage(\"- CRS: \", sf::st_crs(cycling_path)$input, \" | EPSG: \", sf::st_crs(cycling_path)$epsg)\n\n\n- CRS: EPSG:3414 | EPSG: 3414\n\n\nCode\nmessage(\"- Geometry type: \", paste(unique(sf::st_geometry_type(cycling_path)), collapse = \", \"))\n\n\n- Geometry type: MULTILINESTRING\n\n\n\n\nCode\n# 1.3 Import PreSchoolsLocation (Point)\nmessage(\"\\n=== Importing Pre-Schools Data ===\")\n\n\n\n=== Importing Pre-Schools Data ===\n\n\nCode\npreschool_file &lt;- file.path(path_geo, \"PreSchoolsLocation.kml\")\nif (!file.exists(preschool_file)) {\n  stop(\"PreSchoolsLocation.kml not found at: \", preschool_file,\n       \"\\nPlease ensure the file is placed in: \", path_geo)\n}\n\npreschools &lt;- st_read(preschool_file, quiet = FALSE)\n\n\nReading layer `PRESCHOOLS_LOCATION' from data source \n  `C:\\Users\\HOPE\\Desktop\\ISSS626\\Hands-on_Ex\\Hands-on_ex01\\data\\geospatial\\PreSchoolsLocation.kml' \n  using driver `KML'\nSimple feature collection with 2290 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\nCode\n# Display basic information before transformation\nmessage(\"Pre-schools data imported successfully\")\n\n\nPre-schools data imported successfully\n\n\nCode\nmessage(\"- Records: \", nrow(preschools))\n\n\n- Records: 2290\n\n\nCode\nmessage(\"- Original CRS EPSG: \", st_crs(preschools)$epsg)\n\n\n- Original CRS EPSG: 4326\n\n\nCode\nmessage(\"- Geometry type: \", unique(st_geometry_type(preschools)))\n\n\n- Geometry type: POINT\n\n\n\n\nCode\n# 1.4 Import listings.csv (Aspatial)\nmessage(\"\\n=== Importing Airbnb Listings Data ===\")\n\n\n\n=== Importing Airbnb Listings Data ===\n\n\nCode\nlistings_file &lt;- file.path(path_asp, \"listings.csv\")\nif (!file.exists(listings_file)) {\n  stop(\"listings.csv not found at: \", listings_file,\n       \"\\nPlease ensure the file is placed in: \", path_asp)\n}\n\nlistings &lt;- read_csv(listings_file, show_col_types = FALSE)\n\n# Verify required columns exist\nif (!all(c(\"latitude\", \"longitude\") %in% names(listings))) {\n  stop(\"listings.csv must contain 'latitude' and 'longitude' columns\")\n}\n\nmessage(\"Listings data imported successfully\")\n\n\nListings data imported successfully\n\n\nCode\nmessage(\"- Records: \", nrow(listings))\n\n\n- Records: 3659\n\n\nCode\nmessage(\"- Columns: \", ncol(listings))\n\n\n- Columns: 79\n\n\nCode\nmessage(\"- Latitude/Longitude columns: VERIFIED\")\n\n\n- Latitude/Longitude columns: VERIFIED\n\n\n\n\nStep 2: Exploratory Data Inspection (Ch. 1.5–1.6)\n\n\nCode\nmessage(\"\\n=== Inspecting Subzone Data Structure ===\")\n\n\n\n=== Inspecting Subzone Data Structure ===\n\n\nCode\n# Geometry column summary and CRS bbox overview\nprint(st_geometry(mpsz))\n\n\nGeometry set for 323 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21 / Singapore TM\nFirst 5 geometries:\n\n\nMULTIPOLYGON (((31495.56 30140.01, 31980.96 296...\n\n\nMULTIPOLYGON (((29092.28 30021.89, 29119.64 300...\n\n\nMULTIPOLYGON (((29932.33 29879.12, 29947.32 298...\n\n\nMULTIPOLYGON (((27131.28 30059.73, 27088.33 297...\n\n\nMULTIPOLYGON (((26451.03 30396.46, 26440.47 303...\n\n\nCode\nprint(st_bbox(mpsz))\n\n\n     xmin      ymin      xmax      ymax \n 2667.538 15748.721 56396.440 50256.334 \n\n\nCode\n# Attribute glimpse and sample records\nglimpse(mpsz)\n\n\nRows: 323\nColumns: 16\n$ OBJECTID   &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, …\n$ SUBZONE_NO &lt;int&gt; 1, 1, 3, 8, 3, 7, 9, 2, 13, 7, 12, 6, 1, 5, 1, 1, 3, 2, 2, …\n$ SUBZONE_N  &lt;chr&gt; \"MARINA SOUTH\", \"PEARL'S HILL\", \"BOAT QUAY\", \"HENDERSON HIL…\n$ SUBZONE_C  &lt;chr&gt; \"MSSZ01\", \"OTSZ01\", \"SRSZ03\", \"BMSZ08\", \"BMSZ03\", \"BMSZ07\",…\n$ CA_IND     &lt;chr&gt; \"Y\", \"Y\", \"Y\", \"N\", \"N\", \"N\", \"N\", \"Y\", \"N\", \"N\", \"N\", \"N\",…\n$ PLN_AREA_N &lt;chr&gt; \"MARINA SOUTH\", \"OUTRAM\", \"SINGAPORE RIVER\", \"BUKIT MERAH\",…\n$ PLN_AREA_C &lt;chr&gt; \"MS\", \"OT\", \"SR\", \"BM\", \"BM\", \"BM\", \"BM\", \"SR\", \"QT\", \"QT\",…\n$ REGION_N   &lt;chr&gt; \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENT…\n$ REGION_C   &lt;chr&gt; \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\",…\n$ INC_CRC    &lt;chr&gt; \"5ED7EB253F99252E\", \"8C7149B9EB32EEFC\", \"C35FEFF02B13E0E5\",…\n$ FMEL_UPD_D &lt;date&gt; 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05…\n$ X_ADDR     &lt;dbl&gt; 31595.84, 28679.06, 29654.96, 26782.83, 26201.96, 25358.82,…\n$ Y_ADDR     &lt;dbl&gt; 29220.19, 29782.05, 29974.66, 29933.77, 30005.70, 29991.38,…\n$ SHAPE_Leng &lt;dbl&gt; 5267.381, 3506.107, 1740.926, 3313.625, 2825.594, 4428.913,…\n$ SHAPE_Area &lt;dbl&gt; 1630379.27, 559816.25, 160807.50, 595428.89, 387429.44, 103…\n$ geometry   &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((31495.56 30..., MULTIPOLYGON (…\n\n\nCode\nprint(head(mpsz, 3))\n\n\nSimple feature collection with 3 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 28160.23 ymin: 28369.47 xmax: 32362.39 ymax: 30247.18\nProjected CRS: SVY21 / Singapore TM\n  OBJECTID SUBZONE_NO    SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N PLN_AREA_C\n1        1          1 MARINA SOUTH    MSSZ01      Y    MARINA SOUTH         MS\n2        2          1 PEARL'S HILL    OTSZ01      Y          OUTRAM         OT\n3        3          3    BOAT QUAY    SRSZ03      Y SINGAPORE RIVER         SR\n        REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR   Y_ADDR\n1 CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84 29220.19\n2 CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06 29782.05\n3 CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96 29974.66\n  SHAPE_Leng SHAPE_Area                       geometry\n1   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n\n\n\n\nCode\nmessage(\"\\n=== Inspecting Cycling Path Data Structure ===\")\n\n\n\n=== Inspecting Cycling Path Data Structure ===\n\n\nCode\nprint(st_geometry(cycling_path))\n\n\nGeometry set for 4674 features \nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 11721.1 ymin: 27550.13 xmax: 42809.37 ymax: 49702.59\nProjected CRS: SVY21 / Singapore TM\nFirst 5 geometries:\n\n\nMULTILINESTRING ((40128.23 37076.74, 40130.44 3...\n\n\nMULTILINESTRING ((35123.93 42970.72, 35121.12 4...\n\n\nMULTILINESTRING ((35088.86 42820.93, 35089.18 4...\n\n\nMULTILINESTRING ((35099.12 42871.11, 35097.69 4...\n\n\nMULTILINESTRING ((16031.65 36921.59, 16035.79 3...\n\n\nCode\nprint(st_bbox(cycling_path))\n\n\n    xmin     ymin     xmax     ymax \n11721.10 27550.13 42809.37 49702.59 \n\n\nCode\nglimpse(cycling_path)\n\n\nRows: 4,674\nColumns: 8\n$ RD_CD      &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ PLANNING_A &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ PATH_OWNER &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ SHAPE_LEN  &lt;dbl&gt; 18.732594, 94.469928, 9.169593, 51.320348, 29.886054, 38.38…\n$ PLANNING_1 &lt;chr&gt; \"TAMPINES\", \"PUNGGOL\", \"PUNGGOL\", \"PUNGGOL\", \"JURONG WEST\",…\n$ RD_CD_DESC &lt;chr&gt; \"TAMPINES AVENUE 4\", \"PUNGGOL FIELD\", \"PUNGGOL FIELD\", \"PUN…\n$ PATH_OWN_1 &lt;chr&gt; \"Land Transport Authority\", \"Land Transport Authority\", \"La…\n$ geometry   &lt;MULTILINESTRING [m]&gt; MULTILINESTRING ((40128.23 ..., MULTILINEST…\n\n\nCode\nprint(head(cycling_path, 3))\n\n\nSimple feature collection with 3 features and 7 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 35088.86 ymin: 37076.69 xmax: 40146.92 ymax: 42970.72\nProjected CRS: SVY21 / Singapore TM\n  RD_CD PLANNING_A PATH_OWNER SHAPE_LEN PLANNING_1        RD_CD_DESC\n1  &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt; 18.732594   TAMPINES TAMPINES AVENUE 4\n2  &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt; 94.469928    PUNGGOL     PUNGGOL FIELD\n3  &lt;NA&gt;       &lt;NA&gt;       &lt;NA&gt;  9.169593    PUNGGOL     PUNGGOL FIELD\n                PATH_OWN_1                       geometry\n1 Land Transport Authority MULTILINESTRING ((40128.23 ...\n2 Land Transport Authority MULTILINESTRING ((35123.93 ...\n3 Land Transport Authority MULTILINESTRING ((35088.86 ...\n\n\n\n\nCode\nmessage(\"\\n=== Inspecting Pre-School Data Structure ===\")\n\n\n\n=== Inspecting Pre-School Data Structure ===\n\n\nCode\nprint(st_geometry(preschools))\n\n\nGeometry set for 2290 features \nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\nFirst 5 geometries:\n\n\nPOINT Z (103.8072 1.299333 0)\n\n\nPOINT Z (103.826 1.312839 0)\n\n\nPOINT Z (103.8409 1.348843 0)\n\n\nPOINT Z (103.8048 1.435024 0)\n\n\nPOINT Z (103.839 1.33315 0)\n\n\nCode\nprint(st_bbox(preschools))\n\n\n      xmin       ymin       xmax       ymax \n103.687842   1.247759 103.989707   1.462134 \n\n\nCode\nglimpse(preschools)\n\n\nRows: 2,290\nColumns: 3\n$ Name        &lt;chr&gt; \"kml_1\", \"kml_2\", \"kml_3\", \"kml_4\", \"kml_5\", \"kml_6\", \"kml…\n$ Description &lt;chr&gt; \"&lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Att…\n$ geometry    &lt;POINT [°]&gt; POINT Z (103.8072 1.299333 0), POINT Z (103.826 1.31…\n\n\nCode\nprint(head(preschools, 3))\n\n\nSimple feature collection with 3 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.8072 ymin: 1.299333 xmax: 103.8409 ymax: 1.348843\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n   Name\n1 kml_1\n2 kml_2\n3 kml_3\n                                                                                                                                                                                                                                                                                                                                                                                          Description\n1     &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;CENTRE_NAME&lt;/th&gt; &lt;td&gt;CHILDREN'S COVE PRESCHOOL PTE.LTD.&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;CENTRE_CODE&lt;/th&gt; &lt;td&gt;PT9390&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;498CC9FE48CC94D4&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20211201093631&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt;\n2              &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;CENTRE_NAME&lt;/th&gt; &lt;td&gt;CHILDREN'S COVE PTE. LTD.&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;CENTRE_CODE&lt;/th&gt; &lt;td&gt;PT8675&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;22877550804213FD&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20211201093631&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt;\n3 &lt;center&gt;&lt;table&gt;&lt;tr&gt;&lt;th colspan='2' align='center'&gt;&lt;em&gt;Attributes&lt;/em&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;CENTRE_NAME&lt;/th&gt; &lt;td&gt;CHILDREN'S VINEYARD PRESCHOOL PTE. LTD&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;CENTRE_CODE&lt;/th&gt; &lt;td&gt;PT9308&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"#E3E3F3\"&gt; &lt;th&gt;INC_CRC&lt;/th&gt; &lt;td&gt;B2FE90E44AD494E3&lt;/td&gt; &lt;/tr&gt;&lt;tr bgcolor=\"\"&gt; &lt;th&gt;FMEL_UPD_D&lt;/th&gt; &lt;td&gt;20211201093631&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;/center&gt;\n                       geometry\n1 POINT Z (103.8072 1.299333 0)\n2  POINT Z (103.826 1.312839 0)\n3 POINT Z (103.8409 1.348843 0)\n\n\n\n\nCode\nmessage(\"\\n=== Quick Look Plots (Chapter 1.6) ===\")\n\n\n\n=== Quick Look Plots (Chapter 1.6) ===\n\n\nCode\nop &lt;- par(mfrow = c(2, 2))\nplot(mpsz, main = \"MPSZ Subzones\")\n\n\n\n\n\n\n\n\n\nCode\nplot(st_geometry(mpsz), main = \"Subzone Geometry Only\")\nif (\"PLN_AREA_N\" %in% names(mpsz)) {\n  plot(mpsz[\"PLN_AREA_N\"], main = \"Planning Area Names\")\n} else if (\"pln_area_n\" %in% names(mpsz)) {\n  plot(mpsz[\"pln_area_n\"], main = \"Planning Area Names\")\n} else {\n  plot(st_geometry(mpsz), main = \"Planning Area Names\")\n}\n\n\n\n\n\n\n\n\n\nCode\nplot(st_geometry(mpsz), main = \"Subzones with Pre-Schools\")\nplot(st_geometry(preschools), add = TRUE, col = \"red\", pch = 20)\npar(op)\n\n\n\n\n\n\n\n\n\n\n\nStep 3: Converting Aspatial Data to sf (Ch. 1.8.2)\n\n\nCode\nmessage(\"\\n=== Converting Airbnb Listings to sf ===\")\n\n\n\n=== Converting Airbnb Listings to sf ===\n\n\nCode\nlistings_sf &lt;- listings %&gt;%\n  st_as_sf(coords = c(\"longitude\", \"latitude\"), crs = 4326, remove = FALSE) %&gt;%\n  st_transform(3414)\n\nmessage(\"Listings converted to sf with CRS EPSG:\", st_crs(listings_sf)$epsg)\n\n\nListings converted to sf with CRS EPSG:3414\n\n\nCode\nglimpse(listings_sf)\n\n\nRows: 3,659\nColumns: 80\n$ id                                           &lt;dbl&gt; 71609, 71896, 71903, 2753…\n$ listing_url                                  &lt;chr&gt; \"https://www.airbnb.com/r…\n$ scrape_id                                    &lt;dbl&gt; 2.025063e+13, 2.025063e+1…\n$ last_scraped                                 &lt;date&gt; 2025-06-26, 2025-06-27, …\n$ source                                       &lt;chr&gt; \"city scrape\", \"previous …\n$ name                                         &lt;chr&gt; \"Ensuite Room (Room 1 & 2…\n$ description                                  &lt;chr&gt; \"For 3 rooms.Book room 1&…\n$ neighborhood_overview                        &lt;chr&gt; NA, NA, \"Quiet and view o…\n$ picture_url                                  &lt;chr&gt; \"https://a0.muscache.com/…\n$ host_id                                      &lt;dbl&gt; 367042, 367042, 367042, 1…\n$ host_url                                     &lt;chr&gt; \"https://www.airbnb.com/u…\n$ host_name                                    &lt;chr&gt; \"Belinda\", \"Belinda\", \"Be…\n$ host_since                                   &lt;date&gt; 2011-01-29, 2011-01-29, …\n$ host_location                                &lt;chr&gt; \"Singapore\", \"Singapore\",…\n$ host_about                                   &lt;chr&gt; \"Hi My name is Belinda -H…\n$ host_response_time                           &lt;chr&gt; \"within an hour\", \"within…\n$ host_response_rate                           &lt;chr&gt; \"100%\", \"100%\", \"100%\", \"…\n$ host_acceptance_rate                         &lt;chr&gt; \"100%\", \"100%\", \"100%\", \"…\n$ host_is_superhost                            &lt;lgl&gt; FALSE, FALSE, FALSE, FALS…\n$ host_thumbnail_url                           &lt;chr&gt; \"https://a0.muscache.com/…\n$ host_picture_url                             &lt;chr&gt; \"https://a0.muscache.com/…\n$ host_neighbourhood                           &lt;chr&gt; \"Tampines\", \"Tampines\", \"…\n$ host_listings_count                          &lt;dbl&gt; 5, 5, 5, 59, 59, 7, 59, 5…\n$ host_total_listings_count                    &lt;dbl&gt; 10, 10, 10, 88, 88, 8, 88…\n$ host_verifications                           &lt;chr&gt; \"['email', 'phone']\", \"['…\n$ host_has_profile_pic                         &lt;lgl&gt; TRUE, TRUE, TRUE, TRUE, T…\n$ host_identity_verified                       &lt;lgl&gt; TRUE, TRUE, TRUE, TRUE, T…\n$ neighbourhood                                &lt;chr&gt; NA, NA, \"Singapore, Singa…\n$ neighbourhood_cleansed                       &lt;chr&gt; \"Tampines\", \"Tampines\", \"…\n$ neighbourhood_group_cleansed                 &lt;chr&gt; \"East Region\", \"East Regi…\n$ latitude                                     &lt;dbl&gt; 1.34537, 1.34754, 1.34531…\n$ longitude                                    &lt;dbl&gt; 103.9589, 103.9596, 103.9…\n$ property_type                                &lt;chr&gt; \"Private room in villa\", …\n$ room_type                                    &lt;chr&gt; \"Private room\", \"Private …\n$ accommodates                                 &lt;dbl&gt; 2, 1, 2, 1, 1, 2, 1, 1, 1…\n$ bathrooms                                    &lt;dbl&gt; 1.0, NA, 0.5, NA, NA, 1.0…\n$ bathrooms_text                               &lt;chr&gt; \"1 private bath\", \"Shared…\n$ bedrooms                                     &lt;dbl&gt; 2, NA, 1, NA, NA, 2, NA, …\n$ beds                                         &lt;dbl&gt; 3, NA, 2, NA, NA, 1, NA, …\n$ amenities                                    &lt;chr&gt; \"[\\\"Shampoo\\\", \\\"Fire pit…\n$ price                                        &lt;chr&gt; \"$143.00\", NA, \"$76.00\", …\n$ minimum_nights                               &lt;dbl&gt; 92, 92, 92, 180, 180, 92,…\n$ maximum_nights                               &lt;dbl&gt; 365, 365, 365, 999, 999, …\n$ minimum_minimum_nights                       &lt;dbl&gt; 92, 92, 92, 180, 180, 92,…\n$ maximum_minimum_nights                       &lt;dbl&gt; 92, 92, 92, 180, 180, 92,…\n$ minimum_maximum_nights                       &lt;dbl&gt; 1125, 1125, 1125, 1125, 1…\n$ maximum_maximum_nights                       &lt;dbl&gt; 1125, 1125, 1125, 1125, 1…\n$ minimum_nights_avg_ntm                       &lt;dbl&gt; 92, 92, 92, 180, 180, 92,…\n$ maximum_nights_avg_ntm                       &lt;dbl&gt; 1125, 1125, 1125, 1125, 1…\n$ calendar_updated                             &lt;lgl&gt; NA, NA, NA, NA, NA, NA, N…\n$ has_availability                             &lt;lgl&gt; TRUE, TRUE, TRUE, TRUE, T…\n$ availability_30                              &lt;dbl&gt; 30, 20, 30, 0, 0, 30, 0, …\n$ availability_60                              &lt;dbl&gt; 60, 49, 60, 24, 25, 60, 2…\n$ availability_90                              &lt;dbl&gt; 90, 79, 90, 54, 55, 90, 5…\n$ availability_365                             &lt;dbl&gt; 90, 79, 90, 153, 153, 365…\n$ calendar_last_scraped                        &lt;date&gt; 2025-06-26, 2025-06-27, …\n$ number_of_reviews                            &lt;dbl&gt; 19, 24, 46, 20, 16, 131, …\n$ number_of_reviews_ltm                        &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ number_of_reviews_l30d                       &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ availability_eoy                             &lt;dbl&gt; 90, 79, 90, 153, 153, 185…\n$ number_of_reviews_ly                         &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ estimated_occupancy_l365d                    &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ estimated_revenue_l365d                      &lt;dbl&gt; 0, NA, 0, NA, NA, 0, NA, …\n$ first_review                                 &lt;date&gt; 2011-12-19, 2011-07-30, …\n$ last_review                                  &lt;date&gt; 2020-01-17, 2019-10-13, …\n$ review_scores_rating                         &lt;dbl&gt; 4.44, 4.16, 4.41, 4.40, 4…\n$ review_scores_accuracy                       &lt;dbl&gt; 4.37, 4.22, 4.39, 4.16, 4…\n$ review_scores_cleanliness                    &lt;dbl&gt; 4.00, 4.09, 4.52, 4.26, 4…\n$ review_scores_checkin                        &lt;dbl&gt; 4.63, 4.43, 4.63, 4.47, 4…\n$ review_scores_communication                  &lt;dbl&gt; 4.78, 4.43, 4.64, 4.42, 4…\n$ review_scores_location                       &lt;dbl&gt; 4.26, 4.17, 4.50, 4.53, 4…\n$ review_scores_value                          &lt;dbl&gt; 4.32, 4.04, 4.36, 4.63, 4…\n$ license                                      &lt;chr&gt; NA, NA, NA, \"S0399\", \"S03…\n$ instant_bookable                             &lt;lgl&gt; FALSE, FALSE, FALSE, TRUE…\n$ calculated_host_listings_count               &lt;dbl&gt; 5, 5, 5, 58, 58, 7, 58, 5…\n$ calculated_host_listings_count_entire_homes  &lt;dbl&gt; 0, 0, 0, 0, 0, 1, 0, 0, 0…\n$ calculated_host_listings_count_private_rooms &lt;dbl&gt; 5, 5, 5, 58, 58, 6, 58, 5…\n$ calculated_host_listings_count_shared_rooms  &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ reviews_per_month                            &lt;dbl&gt; 0.12, 0.14, 0.27, 0.13, 0…\n$ geometry                                     &lt;POINT [m]&gt; POINT (41972.5 3639…\n\n\nCode\nprint(head(listings_sf, 3))\n\n\nSimple feature collection with 3 features and 79 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 41972.5 ymin: 36383.43 xmax: 42209.55 ymax: 36630.01\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 3 × 80\n     id listing_url              scrape_id last_scraped source name  description\n  &lt;dbl&gt; &lt;chr&gt;                        &lt;dbl&gt; &lt;date&gt;       &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;      \n1 71609 https://www.airbnb.com/…   2.03e13 2025-06-26   city … Ensu… For 3 room…\n2 71896 https://www.airbnb.com/…   2.03e13 2025-06-27   previ… B&B … &lt;NA&gt;       \n3 71903 https://www.airbnb.com/…   2.03e13 2025-06-27   city … Room… Like your …\n# ℹ 73 more variables: neighborhood_overview &lt;chr&gt;, picture_url &lt;chr&gt;,\n#   host_id &lt;dbl&gt;, host_url &lt;chr&gt;, host_name &lt;chr&gt;, host_since &lt;date&gt;,\n#   host_location &lt;chr&gt;, host_about &lt;chr&gt;, host_response_time &lt;chr&gt;,\n#   host_response_rate &lt;chr&gt;, host_acceptance_rate &lt;chr&gt;,\n#   host_is_superhost &lt;lgl&gt;, host_thumbnail_url &lt;chr&gt;, host_picture_url &lt;chr&gt;,\n#   host_neighbourhood &lt;chr&gt;, host_listings_count &lt;dbl&gt;,\n#   host_total_listings_count &lt;dbl&gt;, host_verifications &lt;chr&gt;, …\n\n\n\n\nCode\nmessage(\"\\n=== DIY Map: Airbnb Listings over Subzones ===\")\n\nold_tmap_mode &lt;- tmap_mode(\"plot\")\n\ntmap::tm_shape(mpsz) +\n  tmap::tm_polygons(col = \"grey90\", border.col = \"grey60\") +\n  tmap::tm_shape(listings_sf) +\n  tmap::tm_symbols(col = \"tomato\", size = 0.03, alpha = 0.5) +\n  tmap::tm_layout(\n    title = \"Airbnb Listings across Singapore Subzones\",\n    legend.show = FALSE,\n    frame = FALSE\n  )\n\n\n\n\n\n\n\n\n\nCode\ntmap_mode(old_tmap_mode)\n\n\n\n\nStep 4: Coordinate System Transformation and Validation\n\n\nCode\nmessage(\"\\n=== CRS Transformation and Validation ===\")\n\n\n\n=== CRS Transformation and Validation ===\n\n\nCode\n# Define target CRS\ncrs_target &lt;- sf::st_crs(3414)\n\n# Transform Pre-Schools from WGS84 (4326) to SVY21 (3414)\nif (st_crs(preschools)$epsg == 4326) {\n  message(\"Transforming Pre-Schools from EPSG:4326 to EPSG:3414...\")\n  preschools &lt;- st_transform(preschools, crs = crs_target)\n  message(\"Transformation completed\")\n} else if (st_crs(preschools) != crs_target) {\n  stop(\"Unexpected CRS for Pre-Schools. Expected 4326 or 3414, got: \", \n       st_crs(preschools)$epsg)\n}\n\n\nTransforming Pre-Schools from EPSG:4326 to EPSG:3414...\n\n\nTransformation completed\n\n\nCode\n# Handle potential GEOMETRYCOLLECTION from KML\nif (any(st_geometry_type(preschools) == \"GEOMETRYCOLLECTION\")) {\n  message(\"Extracting POINT geometries from GEOMETRYCOLLECTION...\")\n  preschools &lt;- st_collection_extract(preschools, \"POINT\")\n}\n\n# Verify all spatial data is in EPSG:3414\nmessage(\"\\nVerifying CRS consistency...\")\n\n\n\nVerifying CRS consistency...\n\n\nCode\n# Assert CRS for all spatial datasets using object comparison\nif (st_crs(mpsz) != crs_target) {\n  stop(\"Subzone CRS is not EPSG:3414. Current CRS: \", st_crs(mpsz)$input)\n}\n\nif (st_crs(cycling_path) != crs_target) {\n  stop(\"Cycling Path CRS is not EPSG:3414. Current CRS: \", st_crs(cycling_path)$input)\n}\n\nif (st_crs(preschools) != crs_target) {\n  stop(\"Pre-Schools CRS is not EPSG:3414 after transform. Current CRS: \", st_crs(preschools)$input)\n}\n\nmessage(\"✓ All spatial datasets are in EPSG:3414 (SVY21)\")\n\n\n✓ All spatial datasets are in EPSG:3414 (SVY21)\n\n\nCode\n# Verify geometry types\nmessage(\"\\nVerifying geometry types...\")\n\n\n\nVerifying geometry types...\n\n\nCode\n# Check subzone geometry\nsubzone_geom &lt;- unique(st_geometry_type(mpsz))\nif (!all(subzone_geom %in% c(\"POLYGON\", \"MULTIPOLYGON\"))) {\n  stop(\"Subzone should be POLYGON or MULTIPOLYGON, got: \", paste(subzone_geom, collapse=\", \"))\n}\n\n# Check cycling path geometry  \ncycling_geom &lt;- unique(st_geometry_type(cycling_path))\nif (!all(cycling_geom %in% c(\"LINESTRING\", \"MULTILINESTRING\"))) {\n  stop(\"Cycling Path should be LINESTRING or MULTILINESTRING, got: \", paste(cycling_geom, collapse=\", \"))\n}\n\n# Check preschools geometry\npreschool_geom &lt;- unique(st_geometry_type(preschools))\nif (!all(preschool_geom %in% c(\"POINT\"))) {\n  stop(\"Pre-Schools should be POINT, got: \", paste(preschool_geom, collapse=\", \"))\n}\n\nmessage(\"✓ All geometry types verified\")\n\n\n✓ All geometry types verified\n\n\n\n\nStep 5: Data Cleaning and Standardization\n\n\nCode\nmessage(\"\\n=== Data Cleaning and Standardization ===\")\n\n\n\n=== Data Cleaning and Standardization ===\n\n\nCode\n# 3.1 Clean column names (snake_case)\nmessage(\"Standardizing column names to snake_case...\")\n\n\nStandardizing column names to snake_case...\n\n\nCode\nmpsz &lt;- mpsz %&gt;% janitor::clean_names()\ncycling_path &lt;- cycling_path %&gt;% janitor::clean_names()\npreschools &lt;- preschools %&gt;% janitor::clean_names()\n\n# 3.2 Select and retain key fields\nmessage(\"Selecting key fields...\")\n\n\nSelecting key fields...\n\n\nCode\n# For subzone: retain subzone_n and pln_area_n\nif (all(c(\"subzone_n\", \"pln_area_n\") %in% names(mpsz))) {\n  mpsz_clean &lt;- mpsz %&gt;%\n    select(subzone_n, pln_area_n, geometry)\n} else {\n  message(\"Note: Expected fields 'subzone_n' or 'pln_area_n' not found. Retaining all fields.\")\n  mpsz_clean &lt;- mpsz\n}\n\n# For cycling path: retain basic identification fields\ncycling_clean &lt;- cycling_path %&gt;%\n  select(any_of(c(\"objectid\", \"name\", \"type\", \"status\")), geometry)\n\n# For preschools: retain name field\nif (\"name\" %in% names(preschools)) {\n  preschools_clean &lt;- preschools %&gt;%\n    select(name, geometry)\n} else {\n  message(\"Note: 'name' field not found in Pre-Schools. Retaining all fields.\")\n  preschools_clean &lt;- preschools\n}\n\n# 3.3 Remove empty geometries\nmessage(\"Checking for empty geometries...\")\n\n\nChecking for empty geometries...\n\n\nCode\n# Check and remove empty geometries\nn_empty_mpsz &lt;- sum(st_is_empty(mpsz_clean))\nn_empty_cycling &lt;- sum(st_is_empty(cycling_clean))\nn_empty_preschools &lt;- sum(st_is_empty(preschools_clean))\n\nif (n_empty_mpsz &gt; 0) {\n  message(\"Removing \", n_empty_mpsz, \" empty geometries from subzone data\")\n  mpsz_clean &lt;- mpsz_clean[!st_is_empty(mpsz_clean), ]\n}\n\nif (n_empty_cycling &gt; 0) {\n  message(\"Removing \", n_empty_cycling, \" empty geometries from cycling path data\")\n  cycling_clean &lt;- cycling_clean[!st_is_empty(cycling_clean), ]\n}\n\nif (n_empty_preschools &gt; 0) {\n  message(\"Removing \", n_empty_preschools, \" empty geometries from preschools data\")\n  preschools_clean &lt;- preschools_clean[!st_is_empty(preschools_clean), ]\n}\n\nmessage(\"✓ Data cleaning completed\")\n\n\n✓ Data cleaning completed\n\n\nCode\n# 3.4 Make geometries valid if needed\nmessage(\"Validating geometries...\")\n\n\nValidating geometries...\n\n\nCode\n# Check and fix invalid geometries\nif (any(!st_is_valid(mpsz_clean))) {\n  message(\"Fixing invalid geometries in subzone data...\")\n  mpsz_clean &lt;- st_make_valid(mpsz_clean)\n}\n\n\nFixing invalid geometries in subzone data...\n\n\nCode\nif (any(!st_is_valid(cycling_clean))) {\n  message(\"Fixing invalid geometries in cycling path data...\")\n  cycling_clean &lt;- st_make_valid(cycling_clean)\n}\n\nif (any(!st_is_valid(preschools_clean))) {\n  message(\"Fixing invalid geometries in preschools data...\")\n  preschools_clean &lt;- st_make_valid(preschools_clean)\n}\n\nmessage(\"✓ All geometries are valid\")\n\n\n✓ All geometries are valid\n\n\n\n\nStep 6: Export Clean Data\n\n\nCode\nmessage(\"\\n=== Exporting Clean Data ===\")\n\n\n\n=== Exporting Clean Data ===\n\n\nCode\n# Define output file paths\nsubzone_out &lt;- file.path(path_geo, \"clean_subzone.gpkg\")\ncycling_out &lt;- file.path(path_geo, \"clean_cycling_path.gpkg\")\npreschools_out &lt;- file.path(path_geo, \"clean_preschools_svy21.gpkg\")\n\n# Remove existing files to avoid multiple layers\nif (file.exists(subzone_out)) {\n  message(\"Removing existing clean_subzone.gpkg\")\n  file.remove(subzone_out)\n}\n\n\nRemoving existing clean_subzone.gpkg\n\n\n[1] TRUE\n\n\nCode\nif (file.exists(cycling_out)) {\n  message(\"Removing existing clean_cycling_path.gpkg\")\n  file.remove(cycling_out)\n}\n\n\nRemoving existing clean_cycling_path.gpkg\n\n\n[1] TRUE\n\n\nCode\nif (file.exists(preschools_out)) {\n  message(\"Removing existing clean_preschools_svy21.gpkg\")\n  file.remove(preschools_out)\n}\n\n\nRemoving existing clean_preschools_svy21.gpkg\n\n\n[1] TRUE\n\n\nCode\n# Export to GeoPackage\nmessage(\"Writing clean data to GeoPackage files...\")\n\n\nWriting clean data to GeoPackage files...\n\n\nCode\nst_write(mpsz_clean, subzone_out, layer = \"subzone\", quiet = FALSE)\n\n\nWriting layer `subzone' to data source \n  `C:/Users/HOPE/Desktop/ISSS626/Hands-on_Ex/Hands-on_ex01/data/geospatial/clean_subzone.gpkg' using driver `GPKG'\nWriting 323 features with 2 fields and geometry type Unknown (any).\n\n\nCode\nst_write(cycling_clean, cycling_out, layer = \"cycling_path\", quiet = FALSE)\n\n\nWriting layer `cycling_path' to data source \n  `C:/Users/HOPE/Desktop/ISSS626/Hands-on_Ex/Hands-on_ex01/data/geospatial/clean_cycling_path.gpkg' using driver `GPKG'\nWriting 4674 features with 0 fields and geometry type Multi Line String.\n\n\nCode\nst_write(preschools_clean, preschools_out, layer = \"preschools\", quiet = FALSE)\n\n\nWriting layer `preschools' to data source \n  `C:/Users/HOPE/Desktop/ISSS626/Hands-on_Ex/Hands-on_ex01/data/geospatial/clean_preschools_svy21.gpkg' using driver `GPKG'\nWriting 2290 features with 1 fields and geometry type 3D Point.\n\n\nCode\nmessage(\"\\n✓ All clean data exported successfully\")\n\n\n\n✓ All clean data exported successfully\n\n\nCode\nmessage(\"Output files:\")\n\n\nOutput files:\n\n\nCode\nmessage(\"- \", subzone_out)\n\n\n- C:/Users/HOPE/Desktop/ISSS626/Hands-on_Ex/Hands-on_ex01/data/geospatial/clean_subzone.gpkg\n\n\nCode\nmessage(\"- \", cycling_out)\n\n\n- C:/Users/HOPE/Desktop/ISSS626/Hands-on_Ex/Hands-on_ex01/data/geospatial/clean_cycling_path.gpkg\n\n\nCode\nmessage(\"- \", preschools_out)\n\n\n- C:/Users/HOPE/Desktop/ISSS626/Hands-on_Ex/Hands-on_ex01/data/geospatial/clean_preschools_svy21.gpkg\n\n\n\n\nStep 7: Geospatial Processing Examples (Ch. 1.9)\n\n\nCode\nmessage(\"\\n=== Cycling Path Buffer and Area Calculations ===\")\n\n\n\n=== Cycling Path Buffer and Area Calculations ===\n\n\nCode\n# Create 5 metre buffer around cleaned cycling paths (per feature)\ncycling_buffer &lt;- cycling_clean %&gt;%\n  st_buffer(dist = 5) %&gt;%\n  mutate(\n    buffer_area_sqm = st_area(.),\n    buffer_area_sqkm = set_units(buffer_area_sqm, \"km^2\")\n  )\n\ntotal_buffer_area &lt;- sum(cycling_buffer$buffer_area_sqkm)\nmessage(\n  \"Total buffered cycling corridor area (5 m): \",\n  signif(as.numeric(total_buffer_area), 4),\n  \" sq km\"\n)\n\n\nTotal buffered cycling corridor area (5 m): 3.56 sq km\n\n\nCode\n# Intersect buffer with Tampines West subzone (if available)\ntampines_west &lt;- mpsz_clean %&gt;%\n  filter(\n    toupper(pln_area_n) == \"TAMPINES\",\n    toupper(subzone_n) == \"TAMPINES WEST\"\n  )\n\nif (nrow(tampines_west) == 0) {\n  message(\"Tampines West subzone not found – selecting first available subzone instead.\")\n  tampines_west &lt;- mpsz_clean[1, ]\n}\n\ntampines_buffer &lt;- st_intersection(st_make_valid(tampines_west), st_union(cycling_buffer))\n\nif (nrow(tampines_buffer) &gt; 0) {\n  tampines_area &lt;- set_units(st_area(tampines_buffer), \"km^2\")\n  message(\n    \"Buffered cycling area within selected subzone: \",\n    signif(as.numeric(tampines_area), 4),\n    \" sq km\"\n  )\n} else {\n  message(\"No buffered cycling segments found within the selected subzone.\")\n}\n\n\nBuffered cycling area within selected subzone: 0.09913 sq km\n\n\n\n\nCode\nmessage(\"\\n=== Visualising Cycling Buffer in Tampines West ===\")\n\nold_tmap_mode &lt;- tmap_mode(\"plot\")\n\nif (nrow(tampines_buffer) &gt; 0) {\n  tmap::tm_shape(tampines_west) +\n    tmap::tm_polygons(col = \"#f0f4ff\", border.col = \"#26456e\") +\n    tmap::tm_shape(tampines_buffer) +\n    tmap::tm_fill(col = \"#ffb347\", alpha = 0.6) +\n    tmap::tm_layout(\n      title = \"5 m Cycling Corridor Buffer in Tampines West\",\n      legend.show = FALSE,\n      frame = FALSE\n    )\n} else {\n  message(\"Skipping map because no buffered cycling segments were found in the selected subzone.\")\n}\n\n\n\n\n\n\n\n\n\nCode\ntmap_mode(old_tmap_mode)\n\n\n\n\nCode\n# Count pre-schools per subzone\nmessage(\"\\n=== Preschool Counts by Subzone ===\")\n\n\n\n=== Preschool Counts by Subzone ===\n\n\nCode\nsubzone_preschool &lt;- mpsz_clean %&gt;%\n  dplyr::mutate(\n    subzone_area_sqkm = as.numeric(units::set_units(sf::st_area(.), \"km^2\")),\n    preschool_count   = lengths(sf::st_intersects(., preschools_clean)),\n    preschool_density = preschool_count / subzone_area_sqkm\n  )\n\nsubzone_summary &lt;- subzone_preschool %&gt;%\n  sf::st_drop_geometry() %&gt;%\n  dplyr::transmute(\n    subzone_n,\n    planning_area      = pln_area_n,\n    subzone_area_sqkm,\n    preschool_count,\n    preschool_density\n  )\n\nprint(head(subzone_summary, 5))\n\n\n       subzone_n   planning_area subzone_area_sqkm preschool_count\n1   MARINA SOUTH    MARINA SOUTH         1.6303793               0\n2   PEARL'S HILL          OUTRAM         0.5598162               6\n3      BOAT QUAY SINGAPORE RIVER         0.1608075               0\n4 HENDERSON HILL     BUKIT MERAH         0.5954289               5\n5        REDHILL     BUKIT MERAH         0.3874294               3\n  preschool_density\n1          0.000000\n2         10.717803\n3          0.000000\n4          8.397308\n5          7.743345\n\n\nCode\nmessage(\"\\nSummary of preschool density (counts per sq km):\")\n\n\n\nSummary of preschool density (counts per sq km):\n\n\nCode\nprint(summary(subzone_summary$preschool_density))\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.000   0.000   5.154   6.449  10.908  35.602 \n\n\nCode\ntop_subzone &lt;- subzone_summary %&gt;%\n  dplyr::arrange(dplyr::desc(preschool_count)) %&gt;%\n  dplyr::slice_head(n = 1)\n\nmessage(\"\\nSubzone with the highest preschool count:\")\n\n\n\nSubzone with the highest preschool count:\n\n\nCode\nprint(top_subzone)\n\n\n      subzone_n planning_area subzone_area_sqkm preschool_count\n1 TAMPINES EAST      TAMPINES          4.339824              72\n  preschool_density\n1          16.59053\n\n\n\n\nCode\np_hist &lt;- ggplot(subzone_summary, aes(x = preschool_density)) +\n  geom_histogram(fill = \"#74a9cf\", colour = \"white\", bins = 20) +\n  labs(\n    x = \"Preschool Density (count per sq km)\",\n    y = \"Number of Subzones\",\n    title = \"Distribution of Preschool Density across Subzones\"\n  ) +\n  theme_minimal()\np_hist\n\n\n\n\n\n\n\n\n\n\n\nCode\np_scatter &lt;- ggplot(subzone_summary, aes(x = preschool_count, y = preschool_density)) +\n  geom_point(alpha = 0.6, colour = \"#2b8cbe\") +\n  labs(\n    x = \"Preschool Count\",\n    y = \"Preschool Density (count per sq km)\",\n    title = \"Preschool Density vs. Count\"\n  ) +\n  theme_minimal()\np_scatter"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex01/ex01a.html#results",
    "href": "Hands-on_Ex/Hands-on_ex01/ex01a.html#results",
    "title": "Hands-on Exercise 01a: Geospatial Data Wrangling",
    "section": "Results",
    "text": "Results\n\nData Summary\n\n\nCode\nmessage(\"\\n\", strrep(\"=\", 60), \"\\n\")\n\n\n\n============================================================\n\n\nCode\nmessage(\"DATA PROCESSING SUMMARY\")\n\n\nDATA PROCESSING SUMMARY\n\n\nCode\nmessage(strrep(\"=\", 60), \"\\n\")\n\n\n============================================================\n\n\nCode\n# Subzone Summary\nmessage(\"1. SUBZONE DATA (clean_subzone.gpkg)\")\n\n\n1. SUBZONE DATA (clean_subzone.gpkg)\n\n\nCode\nmessage(\"   - Records: \", nrow(mpsz_clean))\n\n\n   - Records: 323\n\n\nCode\nmessage(\"   - CRS: EPSG:\", sf::st_crs(mpsz_clean)$epsg, \" (SVY21)\")\n\n\n   - CRS: EPSG:3414 (SVY21)\n\n\nCode\nmessage(\"   - Geometry types: \", paste(unique(sf::st_geometry_type(mpsz_clean)), collapse=\", \"))\n\n\n   - Geometry types: POLYGON, MULTIPOLYGON\n\n\nCode\nmessage(\"   - Fields: \", paste(names(sf::st_drop_geometry(mpsz_clean)), collapse=\", \"))\n\n\n   - Fields: subzone_n, pln_area_n\n\n\nCode\n# Cycling Path Summary\nmessage(\"\\n2. CYCLING PATH DATA (clean_cycling_path.gpkg)\")\n\n\n\n2. CYCLING PATH DATA (clean_cycling_path.gpkg)\n\n\nCode\nmessage(\"   - Records: \", nrow(cycling_clean))\n\n\n   - Records: 4674\n\n\nCode\nmessage(\"   - CRS: EPSG:\", sf::st_crs(cycling_clean)$epsg, \" (SVY21)\")\n\n\n   - CRS: EPSG:3414 (SVY21)\n\n\nCode\nmessage(\"   - Geometry types: \", paste(unique(sf::st_geometry_type(cycling_clean)), collapse=\", \"))\n\n\n   - Geometry types: MULTILINESTRING\n\n\nCode\nmessage(\"   - Fields: \", paste(names(sf::st_drop_geometry(cycling_clean)), collapse=\", \"))\n\n\n   - Fields: \n\n\nCode\n# Pre-Schools Summary\nmessage(\"\\n3. PRE-SCHOOLS DATA (clean_preschools_svy21.gpkg)\")\n\n\n\n3. PRE-SCHOOLS DATA (clean_preschools_svy21.gpkg)\n\n\nCode\nmessage(\"   - Records: \", nrow(preschools_clean))\n\n\n   - Records: 2290\n\n\nCode\nmessage(\"   - CRS: EPSG:\", sf::st_crs(preschools_clean)$epsg, \" (SVY21)\")\n\n\n   - CRS: EPSG:3414 (SVY21)\n\n\nCode\nmessage(\"   - Geometry types: \", paste(unique(sf::st_geometry_type(preschools_clean)), collapse=\", \"))\n\n\n   - Geometry types: POINT\n\n\nCode\nmessage(\"   - Fields: \", paste(names(sf::st_drop_geometry(preschools_clean)), collapse=\", \"))\n\n\n   - Fields: name\n\n\nCode\n# Listings Summary\nmessage(\"\\n4. LISTINGS DATA (listings.csv - read only)\")\n\n\n\n4. LISTINGS DATA (listings.csv - read only)\n\n\nCode\nmessage(\"   - Records: \", nrow(listings))\n\n\n   - Records: 3659\n\n\nCode\nmessage(\"   - Latitude range: [\", round(min(listings$latitude), 4), \", \",\n        round(max(listings$latitude), 4), \"]\")\n\n\n   - Latitude range: [1.2227, 1.4578]\n\n\nCode\nmessage(\"   - Longitude range: [\", round(min(listings$longitude), 4), \", \",\n        round(max(listings$longitude), 4), \"]\")\n\n\n   - Longitude range: [103.6346, 103.9896]\n\n\nCode\nmessage(\"\\n5. LISTINGS DATA (listings_sf - transformed)\")\n\n\n\n5. LISTINGS DATA (listings_sf - transformed)\n\n\nCode\nmessage(\"   - Records: \", nrow(listings_sf))\n\n\n   - Records: 3659\n\n\nCode\nmessage(\"   - CRS: EPSG:\", sf::st_crs(listings_sf)$epsg)\n\n\n   - CRS: EPSG:3414\n\n\nCode\nmessage(\"   - Geometry type: \", unique(sf::st_geometry_type(listings_sf)))\n\n\n   - Geometry type: POINT\n\n\nCode\nmessage(\"\\n\", strrep(\"=\", 60))\n\n\n\n============================================================\n\n\nCode\nmessage(\"✓ All data processing completed successfully!\")\n\n\n✓ All data processing completed successfully!\n\n\nCode\nmessage(strrep(\"=\", 60))\n\n\n============================================================\n\n\n\n\nSample Data Preview\n\n\nCode\n# Preview first 3 records without geometry\nmessage(\"\\nSample records from cleaned datasets:\")\n\nmessage(\"\\nSubzone (first 3 records):\")\nprint(head(sf::st_drop_geometry(mpsz_clean), 3))\n\n\n     subzone_n      pln_area_n\n1 MARINA SOUTH    MARINA SOUTH\n2 PEARL'S HILL          OUTRAM\n3    BOAT QUAY SINGAPORE RIVER\n\n\nCode\nmessage(\"\\nCycling Path (first 3 records):\")\nprint(head(sf::st_drop_geometry(cycling_clean), 3))\n\n\ndata frame with 0 columns and 3 rows\n\n\nCode\nmessage(\"\\nPre-Schools (first 3 records):\")\nprint(head(sf::st_drop_geometry(preschools_clean), 3))\n\n\n   name\n1 kml_1\n2 kml_2\n3 kml_3"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex02/ex02a.html",
    "href": "Hands-on_Ex/Hands-on_ex02/ex02a.html",
    "title": "Hands-on Exercise 02a: Choropleth Mapping for Child Care Services",
    "section": "",
    "text": "This exercise follows the Chapter 4 workflow from the course notes. We will:\n\nImport the 2019 Master Plan subzone polygons and the Early Childhood Development Agency (ECDA) child care point locations.\nClean and standardize the data, ensuring all geometries use the SVY21 / EPSG:3414 projection.\nCompute analytical summaries, including the number of centres and (when available) registered capacity by subzone and planning area.\nCreate exploratory maps (point overlay) and thematic choropleths that illustrate spatial patterns in the provision of child care services.\n\nThe original data files should be placed at:\n\nHands-on_Ex/Hands-on_ex02/data/MasterPlan2019SubzoneBoundaryNoSeaGEOJSON.geojson\nHands-on_Ex/Hands-on_ex02/data/ChildCareServices.geojson"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex02/ex02a.html#overview",
    "href": "Hands-on_Ex/Hands-on_ex02/ex02a.html#overview",
    "title": "Hands-on Exercise 02a: Choropleth Mapping for Child Care Services",
    "section": "",
    "text": "This exercise follows the Chapter 4 workflow from the course notes. We will:\n\nImport the 2019 Master Plan subzone polygons and the Early Childhood Development Agency (ECDA) child care point locations.\nClean and standardize the data, ensuring all geometries use the SVY21 / EPSG:3414 projection.\nCompute analytical summaries, including the number of centres and (when available) registered capacity by subzone and planning area.\nCreate exploratory maps (point overlay) and thematic choropleths that illustrate spatial patterns in the provision of child care services.\n\nThe original data files should be placed at:\n\nHands-on_Ex/Hands-on_ex02/data/MasterPlan2019SubzoneBoundaryNoSeaGEOJSON.geojson\nHands-on_Ex/Hands-on_ex02/data/ChildCareServices.geojson"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex02/ex02a.html#setup-and-environment",
    "href": "Hands-on_Ex/Hands-on_ex02/ex02a.html#setup-and-environment",
    "title": "Hands-on Exercise 02a: Choropleth Mapping for Child Care Services",
    "section": "Setup and Environment",
    "text": "Setup and Environment\n\n\nCode\nif (!requireNamespace(\"pacman\", quietly = TRUE)) install.packages(\"pacman\")\n\npacman::p_load(\n  sf, tidyverse, janitor, stringr, rvest,\n  here, tmap, units, readr, sessioninfo)\n\ntmap_mode(\"plot\")\n\nroot_dir &lt;- here::here()\nexo_dir &lt;- here::here(\"Hands-on_Ex\", \"Hands-on_ex02\")\nexo_data &lt;- here::here(\"Hands-on_Ex\", \"Hands-on_ex02\", \"data\")\nexo_fig &lt;- here::here(\"Hands-on_Ex\", \"Hands-on_ex02\", \"figures\")\n\nif (!dir.exists(exo_fig)) dir.create(exo_fig, recursive = TRUE, showWarnings = FALSE)\n\nmessage(\"Project root: \", root_dir)\nmessage(\"Exercise directory: \", exo_dir)\nmessage(\"Data directory: \", exo_data)\nmessage(\"Figures directory: \", exo_fig)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex02/ex02a.html#import-and-inspect-spatial-data",
    "href": "Hands-on_Ex/Hands-on_ex02/ex02a.html#import-and-inspect-spatial-data",
    "title": "Hands-on Exercise 02a: Choropleth Mapping for Child Care Services",
    "section": "Import and Inspect Spatial Data",
    "text": "Import and Inspect Spatial Data\n\nMaster Plan Subzones (Polygon)\n\n\nCode\nmessage(\"\\n=== Loading Master Plan 2019 subzones ===\")\nsubzone_path &lt;- file.path(exo_data, \"MasterPlan2019SubzoneBoundaryNoSeaGEOJSON.geojson\")\n\nif (!file.exists(subzone_path)) {\n  stop(\"Subzone boundary GeoJSON not found at: \", subzone_path,\n       \"\\nDownload it from data.gov.sg and place it in the data directory before knitting.\")\n}\n\nmpsz_2019 &lt;- st_read(subzone_path, quiet = FALSE)\n\n\nReading layer `MasterPlan2019SubzoneBoundaryNoSeaGEOJSON' from data source \n  `C:\\Users\\HOPE\\Desktop\\ISSS626\\Hands-on_Ex\\Hands-on_ex02\\data\\MasterPlan2019SubzoneBoundaryNoSeaGEOJSON.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 332 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\nCode\nif (is.na(st_crs(mpsz_2019))) {\n  stop(\"Master Plan subzones are missing CRS information. Please check the source file.\")\n}\n\nif (st_crs(mpsz_2019)$epsg != 3414) {\n  message(\"Transforming subzones to EPSG:3414 (SVY21).\")\n  mpsz_2019 &lt;- st_transform(mpsz_2019, 3414)\n}\n\n# Make geometries valid using sf package\nmpsz_2019 &lt;- st_make_valid(mpsz_2019)\n\nmessage(\"Records loaded: \", nrow(mpsz_2019))\nmessage(\"Geometry type(s): \", paste(unique(st_geometry_type(mpsz_2019)), collapse = \", \"))\nmessage(\"Subzone attributes: \", paste(head(names(mpsz_2019), 10), collapse = \", \"))\n\n\n\n\nExtract fields from HTML Description\n\n\nCode\n# Function to extract KML fields from HTML description\nextract_kml_field &lt;- function(html_text, field_name) {\n  if (is.na(html_text) || html_text == \"\") return(NA_character_)\n  \n  page &lt;- read_html(html_text)\n  rows &lt;- page %&gt;% html_elements(\"tr\")\n  \n  value &lt;- rows %&gt;%\n    keep(~ html_text2(html_element(.x, \"th\")) == field_name) %&gt;%\n    map_chr(~ html_text2(html_element(.x, \"td\")))\n  \n  if (length(value) == 0) NA_character_ else value[1]\n}\n\n# Extract SUBZONE_N and PLN_AREA_N from Description field\nmpsz_2019 &lt;- mpsz_2019 %&gt;%\n  mutate(\n    subzone_name = map_chr(Description, extract_kml_field, \"SUBZONE_N\"),\n    planning_area = map_chr(Description, extract_kml_field, \"PLN_AREA_N\")\n  ) %&gt;%\n  select(-Name, -Description) %&gt;%\n  relocate(geometry, .after = last_col())\n\n# Clean the extracted data\nmpsz_2019 &lt;- mpsz_2019 %&gt;%\n  mutate(\n    subzone_name = str_squish(as.character(subzone_name)),\n    planning_area = str_squish(as.character(planning_area))\n  )\n\n# Display sample data\nsubzone_glimpse &lt;- mpsz_2019 %&gt;%\n  st_drop_geometry() %&gt;%\n  select(subzone_name, planning_area) %&gt;%\n  distinct() %&gt;%\n  head(10)\n\nprint(subzone_glimpse)\n\n\n          subzone_name planning_area\n1           DEPOT ROAD   BUKIT MERAH\n2          BUKIT MERAH   BUKIT MERAH\n3            CHINATOWN        OUTRAM\n4              PHILLIP DOWNTOWN CORE\n5        RAFFLES PLACE DOWNTOWN CORE\n6         CHINA SQUARE        OUTRAM\n7          TIONG BAHRU   BUKIT MERAH\n8     BAYFRONT SUBZONE DOWNTOWN CORE\n9  TIONG BAHRU STATION   BUKIT MERAH\n10       CLIFFORD PIER DOWNTOWN CORE\n\n\n\n\nChild Care Services (Point)\n\n\nCode\nmessage(\"\\n=== Loading ECDA child care locations ===\")\nchildcare_path &lt;- file.path(exo_data, \"ChildCareServices.geojson\")\n\nif (!file.exists(childcare_path)) {\n  stop(\"Child care services GeoJSON not found at: \", childcare_path,\n       \"\\nDownload the ECDA dataset and place it in the data directory before knitting.\")\n}\n\nchildcare_raw &lt;- st_read(childcare_path, quiet = FALSE) %&gt;%\n  janitor::clean_names()\n\n\nReading layer `ChildCareServices' from data source \n  `C:\\Users\\HOPE\\Desktop\\ISSS626\\Hands-on_Ex\\Hands-on_ex02\\data\\ChildCareServices.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 1925 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\nCode\nif (is.na(st_crs(childcare_raw))) {\n  stop(\"Child care services data is missing CRS information. Please check the source file.\")\n}\n\nif (st_crs(childcare_raw)$epsg != 3414) {\n  message(\"Transforming child care locations to EPSG:3414 (SVY21).\")\n  childcare_sf &lt;- st_transform(childcare_raw, 3414)\n} else {\n  childcare_sf &lt;- childcare_raw\n}\n\n# Check if Description field contains HTML\n# Check if Description field contains HTML\nif (grepl(\"&lt;\", childcare_sf$description[1], fixed = TRUE)) {\n  # Extract centre name from HTML if present\n  childcare_sf &lt;- childcare_sf %&gt;%\n    mutate(\n      centre_name = map2_chr(description, name, function(desc, nm) {\n        if (is.na(desc) || desc == \"\") return(nm)\n        # Try to extract centre name from HTML\n        result &lt;- tryCatch({\n          extract_kml_field(desc, \"CENTRE_NAME\")\n        }, error = function(e) {\n          NA_character_\n        })\n        # If extraction fails, use name field\n        if (is.na(result)) return(nm) else return(result)\n      })\n    )\n} else {\n  # Use name field directly\n  childcare_sf &lt;- childcare_sf %&gt;%\n    mutate(centre_name = name)\n}\n\nchildcare_sf &lt;- childcare_sf %&gt;%\n  mutate(across(where(is.character), ~ str_squish(.x)))\n\nmessage(\"Records loaded: \", nrow(childcare_sf))\nmessage(\"Geometry type(s): \", paste(unique(st_geometry_type(childcare_sf)), collapse = \", \"))\nmessage(\"Child care attributes (first 10): \", paste(head(names(childcare_sf), 10), collapse = \", \"))\n\n# Display sample data\nchildcare_sf %&gt;%\n  st_drop_geometry() %&gt;%\n  select(any_of(c(\"centre_name\", \"name\"))) %&gt;%\n  head(5)\n\n\n  centre_name  name\n1       kml_1 kml_1\n2       kml_2 kml_2\n3       kml_3 kml_3\n4       kml_4 kml_4\n5       kml_5 kml_5"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex02/ex02a.html#spatial-join-and-aggregation",
    "href": "Hands-on_Ex/Hands-on_ex02/ex02a.html#spatial-join-and-aggregation",
    "title": "Hands-on Exercise 02a: Choropleth Mapping for Child Care Services",
    "section": "Spatial Join and Aggregation",
    "text": "Spatial Join and Aggregation\n\nPrepare Helper Columns\n\n\nCode\n# No capacity column in this dataset, so we'll only count centres\ncapacity_col &lt;- NA_character_\nmessage(\"No capacity column detected; analyses will use only centre counts.\")\n\n# Prepare childcare data\nchildcare_ready &lt;- childcare_sf %&gt;%\n  mutate(\n    centre_name = coalesce(centre_name, name, \"(Unnamed centre)\"),\n    capacity = NA_real_  # No capacity data available\n  )\n\n\n\n\nSpatial Join (Points-in-Polygons)\n\n\nCode\nmessage(\"\\n=== Computing child care counts per subzone ===\")\nchildcare_joined &lt;- st_join(childcare_ready, mpsz_2019 %&gt;% select(subzone_name, planning_area),\n                            join = st_within, left = FALSE)\n\nchildcare_counts &lt;- childcare_joined %&gt;%\n  st_drop_geometry() %&gt;%\n  group_by(planning_area, subzone_name) %&gt;%\n  summarise(\n    centres = n(),\n    capacity_total = NA_real_,  # No capacity data\n    .groups = \"drop\"\n  )\n\nhas_capacity_information &lt;- FALSE\n\nprint(childcare_counts %&gt;% head(10))\n\n\n# A tibble: 10 × 4\n   planning_area subzone_name           centres capacity_total\n   &lt;chr&gt;         &lt;chr&gt;                    &lt;int&gt;          &lt;dbl&gt;\n 1 ANG MO KIO    ANG MO KIO TOWN CENTRE       3             NA\n 2 ANG MO KIO    CHENG SAN                   10             NA\n 3 ANG MO KIO    CHONG BOON                   7             NA\n 4 ANG MO KIO    KEBUN BAHRU                  8             NA\n 5 ANG MO KIO    SEMBAWANG HILLS              3             NA\n 6 ANG MO KIO    SHANGRI-LA                   7             NA\n 7 ANG MO KIO    TAGORE                       7             NA\n 8 ANG MO KIO    TOWNSVILLE                   9             NA\n 9 ANG MO KIO    YIO CHU KANG                 7             NA\n10 ANG MO KIO    YIO CHU KANG EAST            5             NA\n\n\n\n\nSubzone Summary\n\n\nCode\nsubzone_summary &lt;- mpsz_2019 %&gt;%\n  left_join(childcare_counts, by = c(\"planning_area\", \"subzone_name\")) %&gt;%\n  mutate(\n    centres = replace_na(centres, 0L),\n    capacity_total = NA_real_,  # No capacity data\n    area_sqm = st_area(geometry),\n    area_km2 = units::set_units(area_sqm, km^2) %&gt;% units::drop_units(),\n    centres_per_km2 = if_else(area_km2 &gt; 0, centres / area_km2, NA_real_),\n    capacity_per_km2 = NA_real_  # No capacity data\n  )\n\nsubzone_summary %&gt;%\n  st_drop_geometry() %&gt;%\n  arrange(desc(centres)) %&gt;%\n  select(planning_area, subzone_name, centres, centres_per_km2) %&gt;%\n  head(10)\n\n\n   planning_area         subzone_name centres centres_per_km2\n1       TAMPINES        TAMPINES EAST      58       13.352509\n2      WOODLANDS       WOODLANDS EAST      49       19.189621\n3          BEDOK          BEDOK NORTH      32        9.988565\n4        GEYLANG             ALJUNIED      32       10.805459\n5       TAMPINES        TAMPINES WEST      30        8.632466\n6       SENGKANG SENGKANG TOWN CENTRE      30       20.540426\n7          BEDOK              FRANKEL      28        6.515961\n8    JURONG WEST               YUNNAN      27       12.237655\n9    JURONG WEST             HONG KAH      25       13.939508\n10      SENGKANG            RIVERVALE      24       15.296028\n\n\n\n\nPlanning Area Aggregation\n\n\nCode\nplanning_summary &lt;- subzone_summary %&gt;%\n  st_drop_geometry() %&gt;%\n  group_by(planning_area) %&gt;%\n  summarise(\n    centres = sum(centres, na.rm = TRUE),\n    capacity_total = NA_real_,  # No capacity data\n    area_km2 = sum(area_km2, na.rm = TRUE),\n    centres_per_km2 = if_else(area_km2 &gt; 0, centres / area_km2, NA_real_),\n    capacity_per_km2 = NA_real_,  # No capacity data\n    .groups = \"drop\"\n  ) %&gt;%\n  arrange(desc(centres))\n\nprint(planning_summary %&gt;% head(10))\n\n\n# A tibble: 10 × 6\n   planning_area centres capacity_total area_km2 centres_per_km2\n   &lt;chr&gt;           &lt;int&gt;          &lt;dbl&gt;    &lt;dbl&gt;           &lt;dbl&gt;\n 1 BEDOK             130             NA    21.7             5.98\n 2 TAMPINES          117             NA    20.8             5.63\n 3 JURONG WEST       110             NA    14.7             7.49\n 4 WOODLANDS         107             NA    13.6             7.86\n 5 HOUGANG            98             NA    13.9             7.03\n 6 SENGKANG           94             NA    10.6             8.87\n 7 YISHUN             87             NA    20.9             4.17\n 8 CHOA CHU KANG      74             NA     6.12           12.1 \n 9 ANG MO KIO         72             NA    13.9             5.16\n10 PUNGGOL            72             NA     9.37            7.68\n# ℹ 1 more variable: capacity_per_km2 &lt;dbl&gt;"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex02/ex02a.html#visual-analytics",
    "href": "Hands-on_Ex/Hands-on_ex02/ex02a.html#visual-analytics",
    "title": "Hands-on Exercise 02a: Choropleth Mapping for Child Care Services",
    "section": "Visual Analytics",
    "text": "Visual Analytics\n\nPoint Overlay Map\n\n\nCode\n# Check tmap version and use appropriate syntax\ntmap_version &lt;- packageVersion(\"tmap\")\n\nif (tmap_version &gt;= \"4.0\") {\n  # tmap v4 syntax\n  childcare_map &lt;- tm_shape(mpsz_2019) +\n    tm_polygons(fill = \"grey95\", col = \"grey70\", lwd = 0.3) +\n    tm_shape(childcare_ready) +\n    tm_dots(size = 0.05, fill = \"#0072B2\", fill_alpha = 0.6) +\n    tm_title(\"ECDA-registered Child Care Centres\") +\n    tm_scalebar(position = c(\"left\", \"bottom\")) +\n    tm_compass(position = c(\"right\", \"top\"), size = 1.2) +\n    tm_layout(frame = FALSE)\n} else {\n  # tmap v3 syntax\n  childcare_map &lt;- tm_shape(mpsz_2019) +\n    tm_polygons(col = \"grey95\", border.col = \"grey70\", lwd = 0.3) +\n    tm_shape(childcare_ready) +\n    tm_dots(size = 0.05, col = \"#0072B2\", alpha = 0.6,\n            title = \"Child care centres\") +\n    tm_layout(\n      title = \"ECDA-registered Child Care Centres\",\n      frame = FALSE,\n      legend.outside = TRUE,\n      outer.margins = 0.02,\n      main.title.position = \"center\"\n    ) +\n    tm_scale_bar(position = c(\"left\", \"bottom\")) +\n    tm_compass(position = c(\"right\", \"top\"), size = 1.2)\n}\n\nprint(childcare_map)\n\n\n\n\n\n\n\n\n\n\n\nCode\ntmap_save(childcare_map,\n          filename = file.path(exo_fig, \"ex02a_childcare_points.png\"),\n          width = 8, height = 6, units = \"in\", dpi = 300)\n\n\n\n\nChoropleth: Centres per Subzone\n\n\nCode\nif (tmap_version &gt;= \"4.0\") {\n  # tmap v4 syntax\n  centres_map &lt;- tm_shape(subzone_summary) +\n    tm_polygons(\n      fill = \"centres\",\n      fill.scale = tm_scale_intervals(\n        style = \"quantile\",\n        n = 5,\n        values = \"brewer.reds\"\n      ),\n      fill.legend = tm_legend(title = \"Centres\"),\n      col = \"grey60\",\n      lwd = 0.3\n    ) +\n    tm_title(\"Number of Child Care Centres by Subzone\") +\n    tm_scalebar(position = c(\"left\", \"bottom\")) +\n    tm_compass(position = c(\"right\", \"top\"), size = 1.1) +\n    tm_layout(frame = FALSE)\n} else {\n  # tmap v3 syntax\n  centres_map &lt;- tm_shape(subzone_summary) +\n    tm_polygons(\n      col = \"centres\",\n      palette = \"Reds\",\n      style = \"quantile\",\n      n = 5,\n      border.col = \"grey60\",\n      lwd = 0.3,\n      title = \"Centres\"\n    ) +\n    tm_layout(\n      title = \"Number of Child Care Centres by Subzone\",\n      frame = FALSE,\n      legend.outside = TRUE,\n      main.title.position = \"center\"\n    ) +\n    tm_scale_bar(position = c(\"left\", \"bottom\")) +\n    tm_compass(position = c(\"right\", \"top\"), size = 1.1)\n}\n\nprint(centres_map)\n\n\n\n\n\n\n\n\n\n\n\nCode\ntmap_save(centres_map,\n          filename = file.path(exo_fig, \"ex02a_childcare_centres.png\"),\n          width = 8, height = 6, units = \"in\", dpi = 300)\n\n\n\n\nChoropleth: Density of Centres\n\n\nCode\nif (!all(is.na(subzone_summary$centres_per_km2))) {\n  if (tmap_version &gt;= \"4.0\") {\n    # tmap v4 syntax\n    density_map &lt;- tm_shape(subzone_summary) +\n      tm_polygons(\n        fill = \"centres_per_km2\",\n        fill.scale = tm_scale_intervals(\n          style = \"jenks\",\n          n = 5,\n          values = \"brewer.blues\"\n        ),\n        fill.legend = tm_legend(title = \"Centres per km²\"),\n        col = \"grey60\",\n        lwd = 0.3\n      ) +\n      tm_title(\"Density of Child Care Centres by Subzone\") +\n      tm_scalebar(position = c(\"left\", \"bottom\")) +\n      tm_compass(position = c(\"right\", \"top\"), size = 1.1) +\n      tm_layout(frame = FALSE)\n  } else {\n    # tmap v3 syntax\n    density_map &lt;- tm_shape(subzone_summary) +\n      tm_polygons(\n        col = \"centres_per_km2\",\n        palette = \"Blues\",\n        style = \"jenks\",\n        n = 5,\n        border.col = \"grey60\",\n        lwd = 0.3,\n        title = \"Centres per km²\"\n      ) +\n      tm_layout(\n        title = \"Density of Child Care Centres by Subzone\",\n        frame = FALSE,\n        legend.outside = TRUE,\n        main.title.position = \"center\"\n      ) +\n      tm_scale_bar(position = c(\"left\", \"bottom\")) +\n      tm_compass(position = c(\"right\", \"top\"), size = 1.1)\n  }\n  \n  print(density_map)\n  \n  tmap_save(density_map,\n            filename = file.path(exo_fig, \"ex02a_childcare_density.png\"),\n            width = 8, height = 6, units = \"in\", dpi = 300)\n} else {\n  message(\"Centres per km² could not be computed (missing area information).\")\n}"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex02/ex02a.html#descriptive-summaries",
    "href": "Hands-on_Ex/Hands-on_ex02/ex02a.html#descriptive-summaries",
    "title": "Hands-on Exercise 02a: Choropleth Mapping for Child Care Services",
    "section": "Descriptive Summaries",
    "text": "Descriptive Summaries\n\nOverall Statistics\n\n\nCode\nsummary_stats &lt;- subzone_summary %&gt;%\n  st_drop_geometry() %&gt;%\n  summarise(\n    total_centres = sum(centres, na.rm = TRUE),\n    mean_centres = mean(centres, na.rm = TRUE),\n    median_centres = median(centres, na.rm = TRUE),\n    max_centres = max(centres, na.rm = TRUE),\n    min_centres = min(centres, na.rm = TRUE),\n    sd_centres = sd(centres, na.rm = TRUE)\n  )\n\nprint(summary_stats)\n\n\n  total_centres mean_centres median_centres max_centres min_centres sd_centres\n1          1925     5.798193              3          58           0   7.642993\n\n\n\n\nTop Subzones by Centre Count\n\n\nCode\ntop_subzones &lt;- subzone_summary %&gt;%\n  st_drop_geometry() %&gt;%\n  arrange(desc(centres)) %&gt;%\n  select(planning_area, subzone_name, centres, centres_per_km2) %&gt;%\n  head(10)\n\nprint(top_subzones)\n\n\n   planning_area         subzone_name centres centres_per_km2\n1       TAMPINES        TAMPINES EAST      58       13.352509\n2      WOODLANDS       WOODLANDS EAST      49       19.189621\n3          BEDOK          BEDOK NORTH      32        9.988565\n4        GEYLANG             ALJUNIED      32       10.805459\n5       TAMPINES        TAMPINES WEST      30        8.632466\n6       SENGKANG SENGKANG TOWN CENTRE      30       20.540426\n7          BEDOK              FRANKEL      28        6.515961\n8    JURONG WEST               YUNNAN      27       12.237655\n9    JURONG WEST             HONG KAH      25       13.939508\n10      SENGKANG            RIVERVALE      24       15.296028\n\n\n\n\nBottom Subzones by Centre Count\n\n\nCode\nbottom_subzones &lt;- subzone_summary %&gt;%\n  st_drop_geometry() %&gt;%\n  filter(centres == 0) %&gt;%\n  select(planning_area, subzone_name, centres, centres_per_km2) %&gt;%\n  head(10)\n\nprint(paste(\"Number of subzones with no childcare centres:\", \n            sum(subzone_summary$centres == 0, na.rm = TRUE)))\n\n\n[1] \"Number of subzones with no childcare centres: 101\"\n\n\nCode\nprint(bottom_subzones)\n\n\n     planning_area            subzone_name centres centres_per_km2\n1           OUTRAM            CHINA SQUARE       0               0\n2    DOWNTOWN CORE        BAYFRONT SUBZONE       0               0\n3     MARINA SOUTH            MARINA SOUTH       0               0\n4    DOWNTOWN CORE                  NICOLL       0               0\n5      MARINA EAST             MARINA EAST       0               0\n6  WESTERN ISLANDS JURONG ISLAND AND BUKOM       0               0\n7           MUSEUM            FORT CANNING       0               0\n8  SINGAPORE RIVER               BOAT QUAY       0               0\n9    MARINE PARADE        MARINA EAST (MP)       0               0\n10 WESTERN ISLANDS                  SUDONG       0               0\n\n\n\n\nTop Planning Areas\n\n\nCode\ntop_planning &lt;- planning_summary %&gt;%\n  arrange(desc(centres)) %&gt;%\n  select(planning_area, centres, area_km2, centres_per_km2) %&gt;%\n  head(10)\n\nprint(top_planning)\n\n\n# A tibble: 10 × 4\n   planning_area centres area_km2 centres_per_km2\n   &lt;chr&gt;           &lt;int&gt;    &lt;dbl&gt;           &lt;dbl&gt;\n 1 BEDOK             130    21.7             5.98\n 2 TAMPINES          117    20.8             5.63\n 3 JURONG WEST       110    14.7             7.49\n 4 WOODLANDS         107    13.6             7.86\n 5 HOUGANG            98    13.9             7.03\n 6 SENGKANG           94    10.6             8.87\n 7 YISHUN             87    20.9             4.17\n 8 CHOA CHU KANG      74     6.12           12.1 \n 9 ANG MO KIO         72    13.9             5.16\n10 PUNGGOL            72     9.37            7.68"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex02/ex02a.html#session-information",
    "href": "Hands-on_Ex/Hands-on_ex02/ex02a.html#session-information",
    "title": "Hands-on Exercise 02a: Choropleth Mapping for Child Care Services",
    "section": "Session Information",
    "text": "Session Information\n\n\nCode\nsessioninfo::session_info()\n\n\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.5.0 (2025-04-11 ucrt)\n os       Windows 11 x64 (build 26100)\n system   x86_64, mingw32\n ui       RTerm\n language (EN)\n collate  Chinese (Simplified)_Hong Kong SAR.utf8\n ctype    Chinese (Simplified)_Hong Kong SAR.utf8\n tz       Asia/Shanghai\n date     2025-10-18\n pandoc   3.2 @ C:/Program Files/RStudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)\n quarto   NA @ C:\\\\PROGRA~1\\\\Quarto\\\\bin\\\\quarto.exe\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package        * version   date (UTC) lib source\n abind            1.4-8     2024-09-12 [1] CRAN (R 4.5.0)\n base64enc        0.1-3     2015-07-28 [1] CRAN (R 4.5.0)\n chromote         0.5.1     2025-04-24 [1] CRAN (R 4.5.0)\n class            7.3-23    2025-01-01 [1] CRAN (R 4.5.0)\n classInt         0.4-11    2025-01-08 [1] CRAN (R 4.5.0)\n cli              3.6.5     2025-04-23 [1] CRAN (R 4.5.0)\n codetools        0.2-20    2024-03-31 [1] CRAN (R 4.5.0)\n colorspace       2.1-1     2024-07-26 [1] CRAN (R 4.5.0)\n cols4all         0.9       2025-08-28 [1] CRAN (R 4.5.1)\n crosstalk        1.2.1     2023-11-23 [1] CRAN (R 4.5.0)\n data.table       1.17.0    2025-02-22 [1] CRAN (R 4.5.0)\n DBI              1.2.3     2024-06-02 [1] CRAN (R 4.5.0)\n dichromat        2.0-0.1   2022-05-02 [1] CRAN (R 4.5.0)\n digest           0.6.37    2024-08-19 [1] CRAN (R 4.5.0)\n dplyr          * 1.1.4     2023-11-17 [1] CRAN (R 4.5.0)\n e1071            1.7-16    2024-09-16 [1] CRAN (R 4.5.0)\n evaluate         1.0.3     2025-01-10 [1] CRAN (R 4.5.0)\n farver           2.1.2     2024-05-13 [1] CRAN (R 4.5.0)\n fastmap          1.2.0     2024-05-15 [1] CRAN (R 4.5.0)\n forcats        * 1.0.0     2023-01-29 [1] CRAN (R 4.5.0)\n generics         0.1.3     2022-07-05 [1] CRAN (R 4.5.0)\n ggplot2        * 3.5.2     2025-04-09 [1] CRAN (R 4.5.0)\n glue             1.8.0     2024-09-30 [1] CRAN (R 4.5.0)\n gtable           0.3.6     2024-10-25 [1] CRAN (R 4.5.0)\n here           * 1.0.2     2025-09-15 [1] CRAN (R 4.5.1)\n hms              1.1.3     2023-03-21 [1] CRAN (R 4.5.0)\n htmltools        0.5.8.1   2024-04-04 [1] CRAN (R 4.5.0)\n htmlwidgets      1.6.4     2023-12-06 [1] CRAN (R 4.5.0)\n httr             1.4.7     2023-08-15 [1] CRAN (R 4.5.0)\n janitor        * 2.2.1     2024-12-22 [1] CRAN (R 4.5.1)\n jsonlite         2.0.0     2025-03-27 [1] CRAN (R 4.5.0)\n KernSmooth       2.23-26   2025-01-01 [1] CRAN (R 4.5.0)\n knitr            1.50      2025-03-16 [1] CRAN (R 4.5.0)\n later            1.4.2     2025-04-08 [1] CRAN (R 4.5.0)\n lattice          0.22-6    2024-03-20 [1] CRAN (R 4.5.0)\n leafem           0.2.5     2025-08-28 [1] CRAN (R 4.5.1)\n leaflegend       1.2.1     2024-05-09 [1] CRAN (R 4.5.1)\n leaflet          2.2.3     2025-09-04 [1] CRAN (R 4.5.1)\n leafsync         0.1.0     2019-03-05 [1] CRAN (R 4.5.1)\n lifecycle        1.0.4     2023-11-07 [1] CRAN (R 4.5.0)\n logger           0.4.0     2024-10-22 [1] CRAN (R 4.5.0)\n lubridate      * 1.9.4     2024-12-08 [1] CRAN (R 4.5.0)\n lwgeom           0.2-14    2024-02-21 [1] CRAN (R 4.5.1)\n magrittr         2.0.3     2022-03-30 [1] CRAN (R 4.5.0)\n maptiles         0.10.0    2025-05-07 [1] CRAN (R 4.5.1)\n microbenchmark   1.5.0     2024-09-04 [1] CRAN (R 4.5.0)\n pacman           0.5.1     2019-03-11 [1] CRAN (R 4.5.0)\n pillar           1.10.2    2025-04-05 [1] CRAN (R 4.5.0)\n pkgconfig        2.0.3     2019-09-22 [1] CRAN (R 4.5.0)\n png              0.1-8     2022-11-29 [1] CRAN (R 4.5.0)\n processx         3.8.6     2025-02-21 [1] CRAN (R 4.5.0)\n promises         1.3.2     2024-11-28 [1] CRAN (R 4.5.0)\n proxy            0.4-27    2022-06-09 [1] CRAN (R 4.5.0)\n ps               1.9.1     2025-04-12 [1] CRAN (R 4.5.0)\n purrr          * 1.0.4     2025-02-05 [1] CRAN (R 4.5.0)\n R6               2.6.1     2025-02-15 [1] CRAN (R 4.5.0)\n raster           3.6-32    2025-03-28 [1] CRAN (R 4.5.0)\n RColorBrewer     1.1-3     2022-04-03 [1] CRAN (R 4.5.0)\n Rcpp             1.0.14    2025-01-12 [1] CRAN (R 4.5.0)\n readr          * 2.1.5     2024-01-10 [1] CRAN (R 4.5.0)\n rlang            1.1.6     2025-04-11 [1] CRAN (R 4.5.0)\n rmarkdown        2.29      2024-11-04 [1] CRAN (R 4.5.0)\n rprojroot        2.1.1     2025-08-26 [1] CRAN (R 4.5.1)\n rstudioapi       0.17.1    2024-10-22 [1] CRAN (R 4.5.0)\n rvest          * 1.0.4     2024-02-12 [1] CRAN (R 4.5.0)\n s2               1.1.7     2024-07-17 [1] CRAN (R 4.5.0)\n scales           1.4.0     2025-04-24 [1] CRAN (R 4.5.0)\n selectr          0.4-2     2019-11-20 [1] CRAN (R 4.5.0)\n sessioninfo    * 1.2.3     2025-02-05 [1] CRAN (R 4.5.1)\n sf             * 1.0-21    2025-05-15 [1] CRAN (R 4.5.1)\n snakecase        0.11.1    2023-08-27 [1] CRAN (R 4.5.1)\n sp               2.2-0     2025-02-01 [1] CRAN (R 4.5.0)\n spacesXYZ        1.5-1     2025-02-10 [1] CRAN (R 4.5.0)\n stars            0.6-8     2025-02-01 [1] CRAN (R 4.5.1)\n stringi          1.8.7     2025-03-27 [1] CRAN (R 4.5.0)\n stringr        * 1.5.1     2023-11-14 [1] CRAN (R 4.5.0)\n terra            1.8-60    2025-07-21 [1] CRAN (R 4.5.1)\n tibble         * 3.3.0     2025-06-08 [1] CRAN (R 4.5.0)\n tidyr          * 1.3.1     2024-01-24 [1] CRAN (R 4.5.0)\n tidyselect       1.2.1     2024-03-11 [1] CRAN (R 4.5.0)\n tidyverse      * 2.0.0     2023-02-22 [1] CRAN (R 4.5.0)\n timechange       0.3.0     2024-01-18 [1] CRAN (R 4.5.0)\n tmap           * 4.2       2025-09-10 [1] CRAN (R 4.5.1)\n tmaptools        3.3       2025-07-24 [1] CRAN (R 4.5.1)\n tzdb             0.5.0     2025-03-15 [1] CRAN (R 4.5.0)\n units          * 0.8-7     2025-03-11 [1] CRAN (R 4.5.0)\n utf8             1.2.5     2025-05-01 [1] CRAN (R 4.5.0)\n vctrs            0.6.5     2023-12-01 [1] CRAN (R 4.5.0)\n websocket        1.4.4     2025-04-10 [1] CRAN (R 4.5.0)\n withr            3.0.2     2024-10-28 [1] CRAN (R 4.5.0)\n wk               0.9.4     2024-10-11 [1] CRAN (R 4.5.0)\n xfun             0.52      2025-04-02 [1] CRAN (R 4.5.0)\n XML              3.99-0.18 2025-01-01 [1] CRAN (R 4.5.0)\n xml2             1.3.8     2025-03-14 [1] CRAN (R 4.5.0)\n yaml             2.3.10    2024-07-26 [1] CRAN (R 4.5.0)\n\n [1] C:/dev/R-4.5.0/library\n * ── Packages attached to the search path.\n\n──────────────────────────────────────────────────────────────────────────────"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex03/ex03.html",
    "href": "Hands-on_Ex/Hands-on_ex03/ex03.html",
    "title": "Hands-on Exercise 03: Spatio-Temporal Point Patterns Analysis",
    "section": "",
    "text": "A spatio-temporal point process is a random collection of points, where each point represents the time and location of an event. In this exercise, we will analyze forest fire events in Kepulauan Bangka Belitung, Indonesia using MODIS sensor data.\n\n\n\nAre the locations of forest fire in Kepulauan Bangka Belitung spatial and spatio-temporally independent?\nIf the answer is NO, where and when do the observed forest fire locations tend to cluster?"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex03/ex03.html#research-questions",
    "href": "Hands-on_Ex/Hands-on_ex03/ex03.html#research-questions",
    "title": "Hands-on Exercise 03: Spatio-Temporal Point Patterns Analysis",
    "section": "",
    "text": "Are the locations of forest fire in Kepulauan Bangka Belitung spatial and spatio-temporally independent?\nIf the answer is NO, where and when do the observed forest fire locations tend to cluster?"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex03/ex03.html#importing-study-area-boundary",
    "href": "Hands-on_Ex/Hands-on_ex03/ex03.html#importing-study-area-boundary",
    "title": "Hands-on Exercise 03: Spatio-Temporal Point Patterns Analysis",
    "section": "3.1 Importing Study Area Boundary",
    "text": "3.1 Importing Study Area Boundary\nWe’ll use the geodata package to automatically download Indonesian administrative boundaries from GADM.\n\n\nShow code\n# Set data directory\ndata_dir &lt;- here(\"Hands-on_Ex\", \"Hands-on_ex03\", \"data\")\nif (!dir.exists(data_dir)) dir.create(data_dir, recursive = TRUE)\n\n# Check if boundary file exists, if not, download it\nboundary_file &lt;- file.path(data_dir, \"bangka_belitung_kecamatan.gpkg\")\n\nif (!file.exists(boundary_file)) {\n  # Download Indonesia Level 3 boundaries (Kecamatan/Sub-district)\n  message(\"Downloading Indonesia administrative boundaries...\")\n  idn_lvl3 &lt;- geodata::gadm(\"IDN\", level = 3, path = data_dir)\n  \n  # Convert to sf object\n  idn3_sf &lt;- st_as_sf(idn_lvl3)\n  \n  # Filter for Bangka Belitung (correct name from GADM)\n  bangka_sf &lt;- idn3_sf %&gt;%\n    filter(NAME_1 == \"Bangka Belitung\")\n  \n  # Save as GeoPackage\n  st_write(bangka_sf, boundary_file, delete_dsn = TRUE, quiet = TRUE)\n  message(\"Boundary data saved to: \", boundary_file)\n}\n\n# Read the boundary data - with detailed diagnostics\nkbb_original &lt;- st_read(boundary_file, quiet = TRUE)\n\n# Diagnostic Step 1: Check what was downloaded\nmessage(\"=== DIAGNOSTIC INFO ===\")\nmessage(\"Total polygons downloaded: \", nrow(kbb_original))\nmessage(\"Column names: \", paste(names(kbb_original), collapse = \", \"))\n\n# Check if NAME_1 column exists and what provinces are there\nif (\"NAME_1\" %in% names(kbb_original)) {\n  province_list &lt;- unique(kbb_original$NAME_1)\n  message(\"Provinces found (first 10): \", paste(head(province_list, 10), collapse = \" | \"))\n  \n  # Check for Bangka variations\n  bangka_matches &lt;- grep(\"Bangka|bangka|BANGKA\", province_list, value = TRUE)\n  if (length(bangka_matches) &gt; 0) {\n    message(\"Found Bangka-related entries: \", paste(bangka_matches, collapse = \" | \"))\n  } else {\n    message(\"WARNING: No 'Bangka' found in province names!\")\n    message(\"Searching for 'Belitung'...\")\n    belitung_matches &lt;- grep(\"Belitung|belitung|BELITUNG\", province_list, value = TRUE)\n    message(\"Belitung matches: \", paste(belitung_matches, collapse = \" | \"))\n  }\n}\n\n# Try different name variations\npossible_names &lt;- c(\"Kepulauan Bangka Belitung\", \n                   \"Bangka Belitung\",\n                   \"Bangka-Belitung\",\n                   \"KEPULAUAN BANGKA BELITUNG\")\n\nkbb_sf &lt;- NULL\nfor (name_try in possible_names) {\n  temp_sf &lt;- kbb_original %&gt;%\n    filter(NAME_1 == name_try)\n  \n  if (nrow(temp_sf) &gt; 0) {\n    message(\"SUCCESS: Found data using name: '\", name_try, \"' with \", nrow(temp_sf), \" polygons\")\n    kbb_sf &lt;- temp_sf\n    break\n  }\n}\n\n# If still no data, check the structure\nif (is.null(kbb_sf) || nrow(kbb_sf) == 0) {\n  message(\"\\n=== FALLBACK: Showing sample of data ===\")\n  print(head(kbb_original[, c(\"NAME_0\", \"NAME_1\", \"NAME_2\", \"NAME_3\")], 20))\n  \n  message(\"\\n=== Manual selection needed ===\")\n  message(\"Please check the province names above and modify the filter accordingly.\")\n  \n  # Use all Indonesia data as fallback for now\n  message(\"Using all Indonesia data as fallback...\")\n  kbb_sf &lt;- kbb_original\n}\n\n# Transform to UTM Zone 48S\nkbb_sf &lt;- kbb_sf %&gt;%\n  st_transform(crs = 32748) %&gt;%\n  st_make_valid()\n\n# Check if geometries are valid\nmessage(\"\\n=== Geometry Check ===\")\nmessage(\"Valid geometries: \", sum(st_is_valid(kbb_sf)))\nmessage(\"Empty geometries: \", sum(st_is_empty(kbb_sf)))\n\n# Get bounding box\nbbox_check &lt;- st_bbox(kbb_sf)\nmessage(\"Bounding box: \")\nprint(bbox_check)\n\n\n     xmin      ymin      xmax      ymax \n 512010.4 9621858.3  928107.4 9833989.1 \n\n\nShow code\n# Plot only if we have valid geometries\nif (!any(is.na(bbox_check)) && nrow(kbb_sf) &gt; 0) {\n  plot(st_geometry(kbb_sf), \n       col = \"lightblue\",\n       border = \"darkblue\",\n       main = \"Study Area\")\n} else {\n  message(\"WARNING: Cannot plot due to invalid geometries. Continuing with analysis...\")\n}"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex03/ex03.html#converting-to-owin-object",
    "href": "Hands-on_Ex/Hands-on_ex03/ex03.html#converting-to-owin-object",
    "title": "Hands-on Exercise 03: Spatio-Temporal Point Patterns Analysis",
    "section": "3.2 Converting to OWIN Object",
    "text": "3.2 Converting to OWIN Object\n\n\nShow code\n# Convert to owin object for spatstat\nkbb_owin &lt;- as.owin(kbb_sf)\n\n# Check the class\nclass(kbb_owin)\n\n\n[1] \"owin\"\n\n\nShow code\n# Display summary\nsummary(kbb_owin)\n\n\nWindow: polygonal boundary\n270 separate polygons (no holes)\n             vertices        area relative.area\npolygon 1           6 5.15790e+04      3.08e-06\npolygon 2           7 9.35325e+04      5.58e-06\npolygon 3          20 1.26679e+04      7.56e-07\npolygon 4          23 9.26107e+04      5.53e-06\npolygon 5          18 4.98850e+05      2.98e-05\npolygon 6          30 3.37290e+04      2.01e-06\npolygon 7          54 3.25363e+05      1.94e-05\npolygon 8          33 1.30250e+06      7.77e-05\npolygon 9         132 1.16490e+06      6.95e-05\npolygon 10         69 1.91355e+05      1.14e-05\npolygon 11        117 1.51905e+05      9.06e-06\npolygon 12         95 1.14409e+05      6.83e-06\npolygon 13         22 4.54503e+03      2.71e-07\npolygon 14         25 1.18153e+04      7.05e-07\npolygon 15        131 1.52345e+05      9.09e-06\npolygon 16         39 1.07779e+04      6.43e-07\npolygon 17         54 3.46837e+05      2.07e-05\npolygon 18         72 2.15853e+05      1.29e-05\npolygon 19         16 1.85061e+03      1.10e-07\npolygon 20         79 1.05702e+05      6.31e-06\npolygon 21         20 4.26450e+03      2.54e-07\npolygon 22        119 1.64729e+05      9.83e-06\npolygon 23         40 1.16146e+04      6.93e-07\npolygon 24         16 3.52284e+03      2.10e-07\npolygon 25        328 3.08592e+06      1.84e-04\npolygon 26        191 2.36937e+06      1.41e-04\npolygon 27         77 8.82506e+04      5.27e-06\npolygon 28         49 6.13179e+04      3.66e-06\npolygon 29        121 7.64910e+04      4.56e-06\npolygon 30          5 1.73815e+04      1.04e-06\npolygon 31          4 6.39020e+03      3.81e-07\npolygon 32         16 1.18396e+05      7.06e-06\npolygon 33          5 2.11407e+04      1.26e-06\npolygon 34         11 3.52360e+04      2.10e-06\npolygon 35         13 6.20570e+04      3.70e-06\npolygon 36          8 1.23128e+04      7.35e-07\npolygon 37          5 9.16907e+03      5.47e-07\npolygon 38         31 1.54528e+06      9.22e-05\npolygon 39         13 6.02786e+04      3.60e-06\npolygon 40         19 8.71573e+04      5.20e-06\npolygon 41         15 6.16242e+04      3.68e-06\npolygon 42          8 1.56726e+04      9.35e-07\npolygon 43          6 1.35363e+04      8.08e-07\npolygon 44          4 4.29360e+03      2.56e-07\npolygon 45         23 1.77052e+05      1.06e-05\npolygon 46         45 4.35839e+04      2.60e-06\npolygon 47          5 6.83224e+03      4.08e-07\npolygon 48          5 6.68328e+03      3.99e-07\npolygon 49          5 2.25570e+03      1.35e-07\npolygon 50          7 2.61716e+04      1.56e-06\npolygon 51          9 1.20125e+04      7.17e-07\npolygon 52          8 2.24884e+04      1.34e-06\npolygon 53          6 1.21058e+04      7.22e-07\npolygon 54          5 8.79539e+03      5.25e-07\npolygon 55          9 2.28045e+04      1.36e-06\npolygon 56          6 9.20554e+03      5.49e-07\npolygon 57         49 1.00131e+05      5.97e-06\npolygon 58          5 4.47493e+03      2.67e-07\npolygon 59          4 2.88084e+03      1.72e-07\npolygon 60          4 3.66452e+03      2.19e-07\npolygon 61         69 9.92186e+04      5.92e-06\npolygon 62          5 3.03623e+03      1.81e-07\npolygon 63          6 1.05413e+04      6.29e-07\npolygon 64          8 9.42911e+03      5.63e-07\npolygon 65         13 6.94883e+04      4.15e-06\npolygon 66         34 2.01331e+05      1.20e-05\npolygon 67        227 1.23408e+06      7.36e-05\npolygon 68          4 2.59824e+03      1.55e-07\npolygon 69          7 8.47540e+03      5.06e-07\npolygon 70          5 8.12486e+03      4.85e-07\npolygon 71         95 2.08341e+05      1.24e-05\npolygon 72         18 7.79145e+04      4.65e-06\npolygon 73         24 1.59007e+04      9.49e-07\npolygon 74          4 8.81028e+02      5.26e-08\npolygon 75         43 4.25653e+04      2.54e-06\npolygon 76          5 4.41923e+03      2.64e-07\npolygon 77          4 2.43914e+03      1.46e-07\npolygon 78          5 4.71226e+03      2.81e-07\npolygon 79        217 2.22687e+06      1.33e-04\npolygon 80         63 5.45427e+04      3.25e-06\npolygon 81          6 4.61991e+03      2.76e-07\npolygon 82          6 1.47370e+04      8.79e-07\npolygon 83          6 1.35588e+04      8.09e-07\npolygon 84         51 9.00805e+04      5.37e-06\npolygon 85          4 1.55335e+03      9.27e-08\npolygon 86         32 4.34625e+04      2.59e-06\npolygon 87        146 5.46576e+05      3.26e-05\npolygon 88         36 7.39133e+04      4.41e-06\npolygon 89         42 9.17378e+04      5.47e-06\npolygon 90        141 1.10143e+06      6.57e-05\npolygon 91         96 2.55421e+05      1.52e-05\npolygon 92         75 3.74798e+04      2.24e-06\npolygon 93         71 9.11194e+05      5.44e-05\npolygon 94          5 4.25220e+03      2.54e-07\npolygon 95         48 1.10263e+05      6.58e-06\npolygon 96          6 1.00670e+04      6.01e-07\npolygon 97         33 2.35513e+04      1.41e-06\npolygon 98          4 1.39953e+02      8.35e-09\npolygon 99        120 3.80319e+05      2.27e-05\npolygon 100        19 3.13896e+04      1.87e-06\npolygon 101        42 1.21247e+05      7.23e-06\npolygon 102        24 3.83865e+04      2.29e-06\npolygon 103        88 4.57022e+05      2.73e-05\npolygon 104        20 1.78068e+04      1.06e-06\npolygon 105        20 2.39368e+04      1.43e-06\npolygon 106         5 6.64860e+03      3.97e-07\npolygon 107         5 5.41661e+03      3.23e-07\npolygon 108        53 4.54957e+05      2.71e-05\npolygon 109       263 1.76196e+07      1.05e-03\npolygon 110         4 6.76374e+03      4.04e-07\npolygon 111        17 5.83732e+03      3.48e-07\npolygon 112        25 2.16843e+05      1.29e-05\npolygon 113         9 3.13706e+03      1.87e-07\npolygon 114        10 1.13374e+04      6.76e-07\npolygon 115        45 1.05289e+05      6.28e-06\npolygon 116         7 4.71437e+03      2.81e-07\npolygon 117       527 4.88599e+07      2.91e-03\npolygon 118       632 1.19875e+08      7.15e-03\npolygon 119        68 3.72752e+06      2.22e-04\npolygon 120        10 1.01946e+05      6.08e-06\npolygon 121        19 8.27040e+04      4.93e-06\npolygon 122        17 4.01684e+04      2.40e-06\npolygon 123        11 4.06518e+04      2.43e-06\npolygon 124       111 1.46837e+06      8.76e-05\npolygon 125       110 3.73961e+06      2.23e-04\npolygon 126        19 1.91715e+04      1.14e-06\npolygon 127        73 3.61882e+06      2.16e-04\npolygon 128        10 3.05396e+04      1.82e-06\npolygon 129         6 1.63086e+04      9.73e-07\npolygon 130        81 2.65410e+05      1.58e-05\npolygon 131         8 2.10497e+04      1.26e-06\npolygon 132         9 2.23051e+04      1.33e-06\npolygon 133        11 1.96429e+04      1.17e-06\npolygon 134       145 7.13724e+06      4.26e-04\npolygon 135        60 1.45303e+05      8.67e-06\npolygon 136        74 2.06450e+06      1.23e-04\npolygon 137        36 2.64395e+04      1.58e-06\npolygon 138       926 2.12401e+08      1.27e-02\npolygon 139        25 2.21142e+05      1.32e-05\npolygon 140         6 6.85335e+03      4.09e-07\npolygon 141        31 1.67739e+06      1.00e-04\npolygon 142         7 8.96845e+03      5.35e-07\npolygon 143        12 6.31109e+04      3.77e-06\npolygon 144       202 2.25183e+07      1.34e-03\npolygon 145        46 2.39836e+06      1.43e-04\npolygon 146        34 1.06861e+04      6.38e-07\npolygon 147         8 4.62274e+04      2.76e-06\npolygon 148         7 3.16257e+04      1.89e-06\npolygon 149         5 6.47214e+03      3.86e-07\npolygon 150        12 2.17322e+04      1.30e-06\npolygon 151         5 7.20136e+03      4.30e-07\npolygon 152       160 1.11856e+06      6.67e-05\npolygon 153       105 3.97161e+05      2.37e-05\npolygon 154        14 3.77546e+05      2.25e-05\npolygon 155        27 1.21328e+06      7.24e-05\npolygon 156       132 7.32320e+05      4.37e-05\npolygon 157        52 6.46488e+04      3.86e-06\npolygon 158        59 5.31644e+06      3.17e-04\npolygon 159        48 1.76605e+06      1.05e-04\npolygon 160        34 5.03181e+04      3.00e-06\npolygon 161        49 1.83632e+04      1.10e-06\npolygon 162        19 5.31559e+03      3.17e-07\npolygon 163       246 3.09440e+06      1.85e-04\npolygon 164        28 1.99191e+05      1.19e-05\npolygon 165        19 4.51980e+05      2.70e-05\npolygon 166        14 5.66638e+04      3.38e-06\npolygon 167        12 1.09882e+05      6.56e-06\npolygon 168        41 4.25466e+04      2.54e-06\npolygon 169       189 1.69035e+06      1.01e-04\npolygon 170       118 2.32814e+05      1.39e-05\npolygon 171         7 2.79374e+04      1.67e-06\npolygon 172        53 1.72586e+06      1.03e-04\npolygon 173        13 6.36463e+04      3.80e-06\npolygon 174       156 1.14531e+06      6.83e-05\npolygon 175        47 9.13932e+05      5.45e-05\npolygon 176        62 3.95152e+06      2.36e-04\npolygon 177       155 7.75116e+05      4.62e-05\npolygon 178        14 4.20349e+04      2.51e-06\npolygon 179        18 5.14007e+03      3.07e-07\npolygon 180        31 7.44696e+05      4.44e-05\npolygon 181        18 4.11037e+05      2.45e-05\npolygon 182        23 7.72702e+03      4.61e-07\npolygon 183         8 3.85828e+04      2.30e-06\npolygon 184       180 7.46362e+06      4.45e-04\npolygon 185        14 2.75557e+05      1.64e-05\npolygon 186         4 9.17061e+03      5.47e-07\npolygon 187         9 9.64342e+03      5.75e-07\npolygon 188         9 6.16694e+04      3.68e-06\npolygon 189        10 1.05264e+05      6.28e-06\npolygon 190         8 8.74118e+04      5.22e-06\npolygon 191         5 1.83999e+04      1.10e-06\npolygon 192         5 3.32417e+03      1.98e-07\npolygon 193        13 3.15953e+04      1.88e-06\npolygon 194        67 3.93589e+05      2.35e-05\npolygon 195         4 2.84280e+03      1.70e-07\npolygon 196        16 4.94144e+03      2.95e-07\npolygon 197         4 1.27360e+03      7.60e-08\npolygon 198         8 1.67265e+04      9.98e-07\npolygon 199        12 2.45940e+04      1.47e-06\npolygon 200        12 5.95411e+04      3.55e-06\npolygon 201        14 2.19831e+03      1.31e-07\npolygon 202        14 4.32480e+03      2.58e-07\npolygon 203        17 7.75234e+03      4.63e-07\npolygon 204        13 1.86854e+03      1.11e-07\npolygon 205        34 3.85424e+06      2.30e-04\npolygon 206         9 3.58530e+03      2.14e-07\npolygon 207        15 1.41276e+04      8.43e-07\npolygon 208        27 1.42520e+04      8.50e-07\npolygon 209        38 2.66059e+04      1.59e-06\npolygon 210        22 4.51365e+03      2.69e-07\npolygon 211        96 5.26123e+05      3.14e-05\npolygon 212        60 1.00574e+05      6.00e-06\npolygon 213        31 7.13409e+04      4.26e-06\npolygon 214        37 1.08935e+06      6.50e-05\npolygon 215       179 8.26972e+05      4.93e-05\npolygon 216        59 1.99001e+05      1.19e-05\npolygon 217        47 2.81875e+05      1.68e-05\npolygon 218       115 3.13327e+05      1.87e-05\npolygon 219       133 4.76117e+05      2.84e-05\npolygon 220        97 1.63408e+07      9.75e-04\npolygon 221        19 6.38976e+03      3.81e-07\npolygon 222        10 7.75421e+03      4.63e-07\npolygon 223       204 1.42141e+06      8.48e-05\npolygon 224       125 2.33616e+06      1.39e-04\npolygon 225        31 2.58857e+04      1.54e-06\npolygon 226        25 2.06725e+04      1.23e-06\npolygon 227        87 1.25180e+06      7.47e-05\npolygon 228        38 4.03858e+04      2.41e-06\npolygon 229        10 5.04629e+04      3.01e-06\npolygon 230         6 1.12888e+04      6.73e-07\npolygon 231        40 1.56849e+05      9.36e-06\npolygon 232        66 5.25038e+04      3.13e-06\npolygon 233         8 1.10747e+04      6.61e-07\npolygon 234        10 1.50784e+03      9.00e-08\npolygon 235        14 4.55332e+03      2.72e-07\npolygon 236        41 4.12940e+04      2.46e-06\npolygon 237         7 3.04017e+03      1.81e-07\npolygon 238        19 7.53923e+03      4.50e-07\npolygon 239        18 8.35187e+03      4.98e-07\npolygon 240        26 5.16261e+05      3.08e-05\npolygon 241        13 9.24908e+04      5.52e-06\npolygon 242        25 4.18653e+04      2.50e-06\npolygon 243         7 3.83476e+03      2.29e-07\npolygon 244        82 4.38420e+05      2.62e-05\npolygon 245       164 3.46334e+06      2.07e-04\npolygon 246        11 5.20050e+03      3.10e-07\npolygon 247        13 3.27494e+04      1.95e-06\npolygon 248         6 3.01213e+04      1.80e-06\npolygon 249        13 2.03114e+05      1.21e-05\npolygon 250        38 2.87869e+04      1.72e-06\npolygon 251        14 4.11781e+03      2.46e-07\npolygon 252        44 1.67050e+05      9.97e-06\npolygon 253        11 6.66399e+04      3.98e-06\npolygon 254       129 2.29310e+06      1.37e-04\npolygon 255        22 6.48307e+03      3.87e-07\npolygon 256       107 1.06884e+06      6.38e-05\npolygon 257         9 2.30080e+04      1.37e-06\npolygon 258        34 9.10976e+03      5.43e-07\npolygon 259        72 1.08609e+05      6.48e-06\npolygon 260        64 2.19815e+05      1.31e-05\npolygon 261        25 2.57976e+05      1.54e-05\npolygon 262        26 4.60002e+04      2.74e-06\npolygon 263        57 8.30086e+04      4.95e-06\npolygon 264        83 1.14012e+06      6.80e-05\npolygon 265        11 3.01000e+04      1.80e-06\npolygon 266        14 1.30459e+05      7.78e-06\npolygon 267        22 2.37055e+05      1.41e-05\npolygon 268        22 1.84821e+05      1.10e-05\npolygon 269      8736 1.15970e+10      6.92e-01\npolygon 270      5944 4.61753e+09      2.75e-01\nenclosing rectangle: [512010.4, 928107.4] x [9621858, 9833989] units\n                     (416100 x 212100 units)\nWindow area = 16761600000 square units\nFraction of frame area: 0.19"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex03/ex03.html#importing-forest-fire-data",
    "href": "Hands-on_Ex/Hands-on_ex03/ex03.html#importing-forest-fire-data",
    "title": "Hands-on Exercise 03: Spatio-Temporal Point Patterns Analysis",
    "section": "3.3 Importing Forest Fire Data",
    "text": "3.3 Importing Forest Fire Data\n\n\nShow code\n# Read the MODIS fire data\nfire_data_path &lt;- \"C:/Users/HOPE/Desktop/ISSS626/Hands-on_Ex/Hands-on_ex03/data/fire_archive_M-C61_674949.csv\"\n\n# Read the CSV file\nforestfires &lt;- read_csv(fire_data_path, show_col_types = FALSE)\n\n# Display structure and first few rows\nglimpse(forestfires)\n\n\nRows: 4,503\nColumns: 15\n$ latitude   &lt;dbl&gt; -7.6338, -7.6470, -8.3723, 1.0408, -2.5785, -2.5771, -2.582…\n$ longitude  &lt;dbl&gt; 138.7764, 138.7681, 137.9117, 120.8256, 121.3911, 121.3812,…\n$ brightness &lt;dbl&gt; 314.7, 317.9, 316.8, 318.5, 326.7, 345.7, 325.5, 322.9, 313…\n$ scan       &lt;dbl&gt; 3.1, 3.1, 3.5, 1.3, 1.1, 1.1, 1.1, 1.0, 1.1, 1.2, 1.2, 1.2,…\n$ track      &lt;dbl&gt; 1.7, 1.7, 1.8, 1.1, 1.1, 1.1, 1.1, 1.0, 1.1, 1.1, 1.1, 1.1,…\n$ acq_date   &lt;date&gt; 2020-10-01, 2020-10-01, 2020-10-01, 2020-10-01, 2020-10-01…\n$ acq_time   &lt;chr&gt; \"0037\", \"0037\", \"0037\", \"0213\", \"0214\", \"0214\", \"0214\", \"02…\n$ satellite  &lt;chr&gt; \"Terra\", \"Terra\", \"Terra\", \"Terra\", \"Terra\", \"Terra\", \"Terr…\n$ instrument &lt;chr&gt; \"MODIS\", \"MODIS\", \"MODIS\", \"MODIS\", \"MODIS\", \"MODIS\", \"MODI…\n$ confidence &lt;dbl&gt; 28, 65, 0, 58, 80, 93, 51, 60, 35, 32, 62, 26, 0, 70, 72, 8…\n$ version    &lt;dbl&gt; 6.03, 6.03, 6.03, 6.03, 6.03, 6.03, 6.03, 6.03, 6.03, 6.03,…\n$ bright_t31 &lt;dbl&gt; 290.6, 291.4, 296.2, 296.4, 294.4, 294.9, 292.8, 296.1, 299…\n$ frp        &lt;dbl&gt; 30.8, 47.1, 55.1, 13.4, 19.7, 54.1, 19.3, 10.9, 8.5, 7.5, 1…\n$ daynight   &lt;chr&gt; \"D\", \"D\", \"D\", \"D\", \"D\", \"D\", \"D\", \"D\", \"D\", \"D\", \"D\", \"D\",…\n$ type       &lt;dbl&gt; 0, 0, 0, 2, 2, 2, 2, 0, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0,…\n\n\nShow code\nhead(forestfires)\n\n\n# A tibble: 6 × 15\n  latitude longitude brightness  scan track acq_date   acq_time satellite\n     &lt;dbl&gt;     &lt;dbl&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;date&gt;     &lt;chr&gt;    &lt;chr&gt;    \n1    -7.63      139.       315.   3.1   1.7 2020-10-01 0037     Terra    \n2    -7.65      139.       318.   3.1   1.7 2020-10-01 0037     Terra    \n3    -8.37      138.       317.   3.5   1.8 2020-10-01 0037     Terra    \n4     1.04      121.       318.   1.3   1.1 2020-10-01 0213     Terra    \n5    -2.58      121.       327.   1.1   1.1 2020-10-01 0214     Terra    \n6    -2.58      121.       346.   1.1   1.1 2020-10-01 0214     Terra    \n# ℹ 7 more variables: instrument &lt;chr&gt;, confidence &lt;dbl&gt;, version &lt;dbl&gt;,\n#   bright_t31 &lt;dbl&gt;, frp &lt;dbl&gt;, daynight &lt;chr&gt;, type &lt;dbl&gt;\n\n\nShow code\n# Check date range\nmessage(\"Date range: \", min(forestfires$acq_date), \" to \", max(forestfires$acq_date))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex03/ex03.html#preparing-forest-fire-data",
    "href": "Hands-on_Ex/Hands-on_ex03/ex03.html#preparing-forest-fire-data",
    "title": "Hands-on Exercise 03: Spatio-Temporal Point Patterns Analysis",
    "section": "3.4 Preparing Forest Fire Data",
    "text": "3.4 Preparing Forest Fire Data\n\n\nShow code\n# Convert to sf object and transform to UTM 48S\nfire_sf &lt;- forestfires %&gt;%\n  st_as_sf(coords = c(\"longitude\", \"latitude\"), \n           crs = 4326) %&gt;%\n  st_transform(crs = 32748)\n\n# Convert date to proper format and extract temporal components\nfire_sf &lt;- fire_sf %&gt;%\n  mutate(\n    acq_date = as.Date(acq_date),\n    Month = month(acq_date),\n    DayofYear = yday(acq_date),\n    Year = year(acq_date)\n  )\n\n# Filter to study area (clip to Bangka Belitung boundary)\nfire_sf &lt;- fire_sf[kbb_sf, ]\n\nmessage(\"Total fire points after clipping to study area: \", nrow(fire_sf))\n\n# Check temporal distribution\ntable(fire_sf$Year)\n\n\n\n2020 \n  31"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex03/ex03.html#overall-distribution",
    "href": "Hands-on_Ex/Hands-on_ex03/ex03.html#overall-distribution",
    "title": "Hands-on Exercise 03: Spatio-Temporal Point Patterns Analysis",
    "section": "4.1 Overall Distribution",
    "text": "4.1 Overall Distribution\n\n\nShow code\n# Create base map with fire points\ntm_shape(kbb_sf) +\n  tm_polygons(col = \"lightgray\", \n              border.col = \"darkgray\") +\n  tm_shape(fire_sf) +\n  tm_dots(col = \"red\", \n          size = 0.02,\n          alpha = 0.6) +\n  tm_layout(main.title = \"Forest Fire Distribution in Kepulauan Bangka Belitung\",\n            main.title.size = 1.2,\n            frame = TRUE) +\n  tm_compass(position = c(\"right\", \"top\")) +\n  tm_scale_bar(position = c(\"left\", \"bottom\"))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex03/ex03.html#monthly-distribution",
    "href": "Hands-on_Ex/Hands-on_ex03/ex03.html#monthly-distribution",
    "title": "Hands-on Exercise 03: Spatio-Temporal Point Patterns Analysis",
    "section": "4.2 Monthly Distribution",
    "text": "4.2 Monthly Distribution\n\n\nShow code\n# Create monthly faceted map\ntm_shape(kbb_sf) +\n  tm_polygons(col = \"lightgray\", \n              border.col = \"darkgray\") +\n  tm_shape(fire_sf) +\n  tm_dots(col = \"red\", \n          size = 0.05,\n          alpha = 0.7) +\n  tm_facets(by = \"Month\",\n            ncol = 4,\n            nrow = 3,\n            free.coords = FALSE) +\n  tm_layout(main.title = \"Monthly Forest Fire Distribution\",\n            main.title.size = 1,\n            legend.show = FALSE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex03/ex03.html#preparing-data-for-spatstat",
    "href": "Hands-on_Ex/Hands-on_ex03/ex03.html#preparing-data-for-spatstat",
    "title": "Hands-on Exercise 03: Spatio-Temporal Point Patterns Analysis",
    "section": "5.1 Preparing Data for spatstat",
    "text": "5.1 Preparing Data for spatstat\n\n\nShow code\n# Extract only needed fields for ppp object\nfire_month &lt;- fire_sf %&gt;%\n  dplyr::select(Month) %&gt;%\n  mutate(Month = as.numeric(Month))\n\n# Create ppp object\nfire_month_ppp &lt;- as.ppp(fire_month)\n\n# Check the object\nsummary(fire_month_ppp)\n\n\nMarked planar point pattern:  31 points\nAverage intensity 6.623857e-10 points per square unit\n\nCoordinates are given to 10 decimal places\n\nmarks are numeric, of type 'double'\nSummary:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  10.00   10.00   10.00   10.19   10.00   12.00 \n\nWindow: rectangle = [545783, 843983.5] x [9648316, 9805259] units\n                    (298200 x 156900 units)\nWindow area = 46800500000 square units\n\n\nShow code\n# Check for duplicates\nany(duplicated(fire_month_ppp))\n\n\n[1] FALSE\n\n\nShow code\n# Handle duplicates if any\nif(any(duplicated(fire_month_ppp))) {\n  fire_month_ppp &lt;- unique(fire_month_ppp)\n  message(\"Duplicated points removed\")\n}"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex03/ex03.html#including-owin-object",
    "href": "Hands-on_Ex/Hands-on_ex03/ex03.html#including-owin-object",
    "title": "Hands-on Exercise 03: Spatio-Temporal Point Patterns Analysis",
    "section": "5.2 Including OWIN Object",
    "text": "5.2 Including OWIN Object\n\n\nShow code\n# Combine ppp with owin\nfire_month_owin &lt;- fire_month_ppp[kbb_owin]\n\n# Display summary\nsummary(fire_month_owin)\n\n\nMarked planar point pattern:  31 points\nAverage intensity 1.849468e-09 points per square unit\n\nCoordinates are given to 10 decimal places\n\nmarks are numeric, of type 'double'\nSummary:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  10.00   10.00   10.00   10.19   10.00   12.00 \n\nWindow: polygonal boundary\n270 separate polygons (no holes)\n             vertices        area relative.area\npolygon 1           6 5.15790e+04      3.08e-06\npolygon 2           7 9.35325e+04      5.58e-06\npolygon 3          20 1.26679e+04      7.56e-07\npolygon 4          23 9.26107e+04      5.53e-06\npolygon 5          18 4.98850e+05      2.98e-05\npolygon 6          30 3.37290e+04      2.01e-06\npolygon 7          54 3.25363e+05      1.94e-05\npolygon 8          33 1.30250e+06      7.77e-05\npolygon 9         132 1.16490e+06      6.95e-05\npolygon 10         69 1.91355e+05      1.14e-05\npolygon 11        117 1.51905e+05      9.06e-06\npolygon 12         95 1.14409e+05      6.83e-06\npolygon 13         22 4.54503e+03      2.71e-07\npolygon 14         25 1.18153e+04      7.05e-07\npolygon 15        131 1.52345e+05      9.09e-06\npolygon 16         39 1.07779e+04      6.43e-07\npolygon 17         54 3.46837e+05      2.07e-05\npolygon 18         72 2.15853e+05      1.29e-05\npolygon 19         16 1.85061e+03      1.10e-07\npolygon 20         79 1.05702e+05      6.31e-06\npolygon 21         20 4.26450e+03      2.54e-07\npolygon 22        119 1.64729e+05      9.83e-06\npolygon 23         40 1.16146e+04      6.93e-07\npolygon 24         16 3.52284e+03      2.10e-07\npolygon 25        328 3.08592e+06      1.84e-04\npolygon 26        191 2.36937e+06      1.41e-04\npolygon 27         77 8.82506e+04      5.27e-06\npolygon 28         49 6.13179e+04      3.66e-06\npolygon 29        121 7.64910e+04      4.56e-06\npolygon 30          5 1.73815e+04      1.04e-06\npolygon 31          4 6.39020e+03      3.81e-07\npolygon 32         16 1.18396e+05      7.06e-06\npolygon 33          5 2.11407e+04      1.26e-06\npolygon 34         11 3.52360e+04      2.10e-06\npolygon 35         13 6.20570e+04      3.70e-06\npolygon 36          8 1.23128e+04      7.35e-07\npolygon 37          5 9.16907e+03      5.47e-07\npolygon 38         31 1.54528e+06      9.22e-05\npolygon 39         13 6.02786e+04      3.60e-06\npolygon 40         19 8.71573e+04      5.20e-06\npolygon 41         15 6.16242e+04      3.68e-06\npolygon 42          8 1.56726e+04      9.35e-07\npolygon 43          6 1.35363e+04      8.08e-07\npolygon 44          4 4.29360e+03      2.56e-07\npolygon 45         23 1.77052e+05      1.06e-05\npolygon 46         45 4.35839e+04      2.60e-06\npolygon 47          5 6.83224e+03      4.08e-07\npolygon 48          5 6.68328e+03      3.99e-07\npolygon 49          5 2.25570e+03      1.35e-07\npolygon 50          7 2.61716e+04      1.56e-06\npolygon 51          9 1.20125e+04      7.17e-07\npolygon 52          8 2.24884e+04      1.34e-06\npolygon 53          6 1.21058e+04      7.22e-07\npolygon 54          5 8.79539e+03      5.25e-07\npolygon 55          9 2.28045e+04      1.36e-06\npolygon 56          6 9.20554e+03      5.49e-07\npolygon 57         49 1.00131e+05      5.97e-06\npolygon 58          5 4.47493e+03      2.67e-07\npolygon 59          4 2.88084e+03      1.72e-07\npolygon 60          4 3.66452e+03      2.19e-07\npolygon 61         69 9.92186e+04      5.92e-06\npolygon 62          5 3.03623e+03      1.81e-07\npolygon 63          6 1.05413e+04      6.29e-07\npolygon 64          8 9.42911e+03      5.63e-07\npolygon 65         13 6.94883e+04      4.15e-06\npolygon 66         34 2.01331e+05      1.20e-05\npolygon 67        227 1.23408e+06      7.36e-05\npolygon 68          4 2.59824e+03      1.55e-07\npolygon 69          7 8.47540e+03      5.06e-07\npolygon 70          5 8.12486e+03      4.85e-07\npolygon 71         95 2.08341e+05      1.24e-05\npolygon 72         18 7.79145e+04      4.65e-06\npolygon 73         24 1.59007e+04      9.49e-07\npolygon 74          4 8.81028e+02      5.26e-08\npolygon 75         43 4.25653e+04      2.54e-06\npolygon 76          5 4.41923e+03      2.64e-07\npolygon 77          4 2.43914e+03      1.46e-07\npolygon 78          5 4.71226e+03      2.81e-07\npolygon 79        217 2.22687e+06      1.33e-04\npolygon 80         63 5.45427e+04      3.25e-06\npolygon 81          6 4.61991e+03      2.76e-07\npolygon 82          6 1.47370e+04      8.79e-07\npolygon 83          6 1.35588e+04      8.09e-07\npolygon 84         51 9.00805e+04      5.37e-06\npolygon 85          4 1.55335e+03      9.27e-08\npolygon 86         32 4.34625e+04      2.59e-06\npolygon 87        146 5.46576e+05      3.26e-05\npolygon 88         36 7.39133e+04      4.41e-06\npolygon 89         42 9.17378e+04      5.47e-06\npolygon 90        141 1.10143e+06      6.57e-05\npolygon 91         96 2.55421e+05      1.52e-05\npolygon 92         75 3.74798e+04      2.24e-06\npolygon 93         71 9.11194e+05      5.44e-05\npolygon 94          5 4.25220e+03      2.54e-07\npolygon 95         48 1.10263e+05      6.58e-06\npolygon 96          6 1.00670e+04      6.01e-07\npolygon 97         33 2.35513e+04      1.41e-06\npolygon 98          4 1.39953e+02      8.35e-09\npolygon 99        120 3.80319e+05      2.27e-05\npolygon 100        19 3.13896e+04      1.87e-06\npolygon 101        42 1.21247e+05      7.23e-06\npolygon 102        24 3.83865e+04      2.29e-06\npolygon 103        88 4.57022e+05      2.73e-05\npolygon 104        20 1.78068e+04      1.06e-06\npolygon 105        20 2.39368e+04      1.43e-06\npolygon 106         5 6.64860e+03      3.97e-07\npolygon 107         5 5.41661e+03      3.23e-07\npolygon 108        53 4.54957e+05      2.71e-05\npolygon 109       263 1.76196e+07      1.05e-03\npolygon 110         4 6.76374e+03      4.04e-07\npolygon 111        17 5.83732e+03      3.48e-07\npolygon 112        25 2.16843e+05      1.29e-05\npolygon 113         9 3.13706e+03      1.87e-07\npolygon 114        10 1.13374e+04      6.76e-07\npolygon 115        45 1.05289e+05      6.28e-06\npolygon 116         7 4.71437e+03      2.81e-07\npolygon 117       527 4.88599e+07      2.91e-03\npolygon 118       632 1.19875e+08      7.15e-03\npolygon 119        68 3.72752e+06      2.22e-04\npolygon 120        10 1.01946e+05      6.08e-06\npolygon 121        19 8.27040e+04      4.93e-06\npolygon 122        17 4.01684e+04      2.40e-06\npolygon 123        11 4.06518e+04      2.43e-06\npolygon 124       111 1.46837e+06      8.76e-05\npolygon 125       110 3.73961e+06      2.23e-04\npolygon 126        19 1.91715e+04      1.14e-06\npolygon 127        73 3.61882e+06      2.16e-04\npolygon 128        10 3.05396e+04      1.82e-06\npolygon 129         6 1.63086e+04      9.73e-07\npolygon 130        81 2.65410e+05      1.58e-05\npolygon 131         8 2.10497e+04      1.26e-06\npolygon 132         9 2.23051e+04      1.33e-06\npolygon 133        11 1.96429e+04      1.17e-06\npolygon 134       145 7.13724e+06      4.26e-04\npolygon 135        60 1.45303e+05      8.67e-06\npolygon 136        74 2.06450e+06      1.23e-04\npolygon 137        36 2.64395e+04      1.58e-06\npolygon 138       926 2.12401e+08      1.27e-02\npolygon 139        25 2.21142e+05      1.32e-05\npolygon 140         6 6.85335e+03      4.09e-07\npolygon 141        31 1.67739e+06      1.00e-04\npolygon 142         7 8.96845e+03      5.35e-07\npolygon 143        12 6.31109e+04      3.77e-06\npolygon 144       202 2.25183e+07      1.34e-03\npolygon 145        46 2.39836e+06      1.43e-04\npolygon 146        34 1.06861e+04      6.38e-07\npolygon 147         8 4.62274e+04      2.76e-06\npolygon 148         7 3.16257e+04      1.89e-06\npolygon 149         5 6.47214e+03      3.86e-07\npolygon 150        12 2.17322e+04      1.30e-06\npolygon 151         5 7.20136e+03      4.30e-07\npolygon 152       160 1.11856e+06      6.67e-05\npolygon 153       105 3.97161e+05      2.37e-05\npolygon 154        14 3.77546e+05      2.25e-05\npolygon 155        27 1.21328e+06      7.24e-05\npolygon 156       132 7.32320e+05      4.37e-05\npolygon 157        52 6.46488e+04      3.86e-06\npolygon 158        59 5.31644e+06      3.17e-04\npolygon 159        48 1.76605e+06      1.05e-04\npolygon 160        34 5.03181e+04      3.00e-06\npolygon 161        49 1.83632e+04      1.10e-06\npolygon 162        19 5.31559e+03      3.17e-07\npolygon 163       246 3.09440e+06      1.85e-04\npolygon 164        28 1.99191e+05      1.19e-05\npolygon 165        19 4.51980e+05      2.70e-05\npolygon 166        14 5.66638e+04      3.38e-06\npolygon 167        12 1.09882e+05      6.56e-06\npolygon 168        41 4.25466e+04      2.54e-06\npolygon 169       189 1.69035e+06      1.01e-04\npolygon 170       118 2.32814e+05      1.39e-05\npolygon 171         7 2.79374e+04      1.67e-06\npolygon 172        53 1.72586e+06      1.03e-04\npolygon 173        13 6.36463e+04      3.80e-06\npolygon 174       156 1.14531e+06      6.83e-05\npolygon 175        47 9.13932e+05      5.45e-05\npolygon 176        62 3.95152e+06      2.36e-04\npolygon 177       155 7.75116e+05      4.62e-05\npolygon 178        14 4.20349e+04      2.51e-06\npolygon 179        18 5.14007e+03      3.07e-07\npolygon 180        31 7.44696e+05      4.44e-05\npolygon 181        18 4.11037e+05      2.45e-05\npolygon 182        23 7.72702e+03      4.61e-07\npolygon 183         8 3.85828e+04      2.30e-06\npolygon 184       180 7.46362e+06      4.45e-04\npolygon 185        14 2.75557e+05      1.64e-05\npolygon 186         4 9.17061e+03      5.47e-07\npolygon 187         9 9.64342e+03      5.75e-07\npolygon 188         9 6.16694e+04      3.68e-06\npolygon 189        10 1.05264e+05      6.28e-06\npolygon 190         8 8.74118e+04      5.22e-06\npolygon 191         5 1.83999e+04      1.10e-06\npolygon 192         5 3.32417e+03      1.98e-07\npolygon 193        13 3.15953e+04      1.88e-06\npolygon 194        67 3.93589e+05      2.35e-05\npolygon 195         4 2.84280e+03      1.70e-07\npolygon 196        16 4.94144e+03      2.95e-07\npolygon 197         4 1.27360e+03      7.60e-08\npolygon 198         8 1.67265e+04      9.98e-07\npolygon 199        12 2.45940e+04      1.47e-06\npolygon 200        12 5.95411e+04      3.55e-06\npolygon 201        14 2.19831e+03      1.31e-07\npolygon 202        14 4.32480e+03      2.58e-07\npolygon 203        17 7.75234e+03      4.63e-07\npolygon 204        13 1.86854e+03      1.11e-07\npolygon 205        34 3.85424e+06      2.30e-04\npolygon 206         9 3.58530e+03      2.14e-07\npolygon 207        15 1.41276e+04      8.43e-07\npolygon 208        27 1.42520e+04      8.50e-07\npolygon 209        38 2.66059e+04      1.59e-06\npolygon 210        22 4.51365e+03      2.69e-07\npolygon 211        96 5.26123e+05      3.14e-05\npolygon 212        60 1.00574e+05      6.00e-06\npolygon 213        31 7.13409e+04      4.26e-06\npolygon 214        37 1.08935e+06      6.50e-05\npolygon 215       179 8.26972e+05      4.93e-05\npolygon 216        59 1.99001e+05      1.19e-05\npolygon 217        47 2.81875e+05      1.68e-05\npolygon 218       115 3.13327e+05      1.87e-05\npolygon 219       133 4.76117e+05      2.84e-05\npolygon 220        97 1.63408e+07      9.75e-04\npolygon 221        19 6.38976e+03      3.81e-07\npolygon 222        10 7.75421e+03      4.63e-07\npolygon 223       204 1.42141e+06      8.48e-05\npolygon 224       125 2.33616e+06      1.39e-04\npolygon 225        31 2.58857e+04      1.54e-06\npolygon 226        25 2.06725e+04      1.23e-06\npolygon 227        87 1.25180e+06      7.47e-05\npolygon 228        38 4.03858e+04      2.41e-06\npolygon 229        10 5.04629e+04      3.01e-06\npolygon 230         6 1.12888e+04      6.73e-07\npolygon 231        40 1.56849e+05      9.36e-06\npolygon 232        66 5.25038e+04      3.13e-06\npolygon 233         8 1.10747e+04      6.61e-07\npolygon 234        10 1.50784e+03      9.00e-08\npolygon 235        14 4.55332e+03      2.72e-07\npolygon 236        41 4.12940e+04      2.46e-06\npolygon 237         7 3.04017e+03      1.81e-07\npolygon 238        19 7.53923e+03      4.50e-07\npolygon 239        18 8.35187e+03      4.98e-07\npolygon 240        26 5.16261e+05      3.08e-05\npolygon 241        13 9.24908e+04      5.52e-06\npolygon 242        25 4.18653e+04      2.50e-06\npolygon 243         7 3.83476e+03      2.29e-07\npolygon 244        82 4.38420e+05      2.62e-05\npolygon 245       164 3.46334e+06      2.07e-04\npolygon 246        11 5.20050e+03      3.10e-07\npolygon 247        13 3.27494e+04      1.95e-06\npolygon 248         6 3.01213e+04      1.80e-06\npolygon 249        13 2.03114e+05      1.21e-05\npolygon 250        38 2.87869e+04      1.72e-06\npolygon 251        14 4.11781e+03      2.46e-07\npolygon 252        44 1.67050e+05      9.97e-06\npolygon 253        11 6.66399e+04      3.98e-06\npolygon 254       129 2.29310e+06      1.37e-04\npolygon 255        22 6.48307e+03      3.87e-07\npolygon 256       107 1.06884e+06      6.38e-05\npolygon 257         9 2.30080e+04      1.37e-06\npolygon 258        34 9.10976e+03      5.43e-07\npolygon 259        72 1.08609e+05      6.48e-06\npolygon 260        64 2.19815e+05      1.31e-05\npolygon 261        25 2.57976e+05      1.54e-05\npolygon 262        26 4.60002e+04      2.74e-06\npolygon 263        57 8.30086e+04      4.95e-06\npolygon 264        83 1.14012e+06      6.80e-05\npolygon 265        11 3.01000e+04      1.80e-06\npolygon 266        14 1.30459e+05      7.78e-06\npolygon 267        22 2.37055e+05      1.41e-05\npolygon 268        22 1.84821e+05      1.10e-05\npolygon 269      8736 1.15970e+10      6.92e-01\npolygon 270      5944 4.61753e+09      2.75e-01\nenclosing rectangle: [512010.4, 928107.4] x [9621858, 9833989] units\n                     (416100 x 212100 units)\nWindow area = 16761600000 square units\nFraction of frame area: 0.19\n\n\nShow code\n# Plot to verify\nplot(fire_month_owin, \n     main = \"Fire Points with Study Area Window\",\n     pch = 20,\n     cex = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex03/ex03.html#computing-spatio-temporal-kde",
    "href": "Hands-on_Ex/Hands-on_ex03/ex03.html#computing-spatio-temporal-kde",
    "title": "Hands-on Exercise 03: Spatio-Temporal Point Patterns Analysis",
    "section": "5.3 Computing Spatio-temporal KDE",
    "text": "5.3 Computing Spatio-temporal KDE\n\n\nShow code\n# First check how many points we have\nmessage(\"Total fire points: \", nrow(fire_month))\nmessage(\"Points per month:\")\ntable(fire_month$Month)\n\n\n\n10 11 12 \n26  4  1 \n\n\nShow code\n# Check if we have enough data\nif(nrow(fire_month) &lt; 30) {\n  message(\"WARNING: Very few fire points detected. Analysis may not be meaningful.\")\n}\n\n# Compute STKDE with manual bandwidth specification to avoid sparse data error\ntryCatch({\n  # Try automatic bandwidth first\n  fire_month_stkde &lt;- spattemp.density(\n    pp = fire_month_owin,\n    h = NULL,\n    lambda = NULL,\n    verbose = FALSE\n  )\n}, error = function(e) {\n  message(\"Automatic bandwidth failed due to sparse data. Using manual bandwidth...\")\n  \n  # Use manual bandwidth based on spatial extent and temporal range\n  spatial_range &lt;- diff(range(st_coordinates(fire_month)[,1]))\n  temporal_range &lt;- diff(range(fire_month$Month))\n  \n  # Rule of thumb: bandwidth = range / 5\n  h_manual &lt;- spatial_range / 5  # spatial bandwidth\n  lambda_manual &lt;- max(1, temporal_range / 5)  # temporal bandwidth (at least 1)\n  \n  message(\"Using manual bandwidths: h = \", round(h_manual), \", lambda = \", round(lambda_manual, 2))\n  \n  # Compute with manual bandwidth\n  fire_month_stkde &lt;&lt;- spattemp.density(\n    pp = fire_month_owin,\n    h = h_manual,\n    lambda = lambda_manual,\n    verbose = FALSE\n  )\n})\n\n# Display summary\nif(exists(\"fire_month_stkde\")) {\n  summary(fire_month_stkde)\n} else {\n  message(\"STKDE computation failed. Skipping this analysis.\")\n}\n\n\nSpatiotemporal Kernel Density Estimate\n\nBandwidths\n  h = 59640.1 (spatial)\n  lambda = 1 (temporal)\n\nNo. of observations\n  31 \n\nSpatial bound\n  Type: polygonal\n  2D enclosure: [512010.4, 928107.4] x [9621858, 9833989]\n\nTemporal bound\n  [10, 12]\n\nEvaluation\n  128 x 128 x 3 trivariate lattice\n  Density range: [2.541332e-12, 6.107462e-11]"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex03/ex03.html#plotting-stkde-by-month",
    "href": "Hands-on_Ex/Hands-on_ex03/ex03.html#plotting-stkde-by-month",
    "title": "Hands-on Exercise 03: Spatio-Temporal Point Patterns Analysis",
    "section": "5.4 Plotting STKDE by Month",
    "text": "5.4 Plotting STKDE by Month\n\n\nShow code\n# Plot STKDE for selected months (if computation was successful)\nif(exists(\"fire_month_stkde\")) {\n  # Check the structure of the STKDE object\n  if(!is.null(fire_month_stkde) && !is.null(fire_month_stkde$z)) {\n    # Get dimensions safely\n    z_dims &lt;- dim(fire_month_stkde$z)\n    \n    if(length(z_dims) == 3) {\n      n_times &lt;- z_dims[3]\n      message(\"STKDE has \", n_times, \" time points\")\n      \n      # Plot available time points\n      if(n_times &gt; 0) {\n        n_plots &lt;- min(6, n_times)\n        par(mfrow = c(2, 3))\n        \n        for(i in 1:n_plots) {\n          tryCatch({\n            plot(fire_month_stkde, \n                 tselect = i,\n                 main = paste(\"STKDE - Time\", i))\n          }, error = function(e) {\n            plot.new()\n            text(0.5, 0.5, paste(\"No data for time\", i))\n          })\n        }\n        par(mfrow = c(1, 1))\n      }\n    } else {\n      message(\"STKDE object has unexpected structure. Attempting simple plot...\")\n      tryCatch({\n        plot(fire_month_stkde)\n      }, error = function(e) {\n        message(\"Cannot plot STKDE: \", e$message)\n      })\n    }\n  } else {\n    message(\"STKDE object is incomplete\")\n  }\n} else {\n  message(\"STKDE not computed due to sparse data\")\n}"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex03/ex03.html#creating-ppp-object-with-day-of-year",
    "href": "Hands-on_Ex/Hands-on_ex03/ex03.html#creating-ppp-object-with-day-of-year",
    "title": "Hands-on Exercise 03: Spatio-Temporal Point Patterns Analysis",
    "section": "6.1 Creating PPP Object with Day of Year",
    "text": "6.1 Creating PPP Object with Day of Year\n\n\nShow code\n# Prepare data with DayofYear\nfire_doy &lt;- fire_sf %&gt;%\n  dplyr::select(DayofYear) %&gt;%\n  mutate(DayofYear = as.numeric(DayofYear))\n\n# Create ppp object\nfire_doy_ppp &lt;- as.ppp(fire_doy)\n\n# Handle duplicates\nfire_doy_ppp &lt;- unique(fire_doy_ppp)\n\n# Combine with owin\nfire_doy_owin &lt;- fire_doy_ppp[kbb_owin]\n\n# Display summary\nsummary(fire_doy_owin)\n\n\nMarked planar point pattern:  31 points\nAverage intensity 1.849468e-09 points per square unit\n\nCoordinates are given to 10 decimal places\n\nmarks are numeric, of type 'double'\nSummary:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  279.0   280.0   293.0   293.7   302.0   336.0 \n\nWindow: polygonal boundary\n270 separate polygons (no holes)\n             vertices        area relative.area\npolygon 1           6 5.15790e+04      3.08e-06\npolygon 2           7 9.35325e+04      5.58e-06\npolygon 3          20 1.26679e+04      7.56e-07\npolygon 4          23 9.26107e+04      5.53e-06\npolygon 5          18 4.98850e+05      2.98e-05\npolygon 6          30 3.37290e+04      2.01e-06\npolygon 7          54 3.25363e+05      1.94e-05\npolygon 8          33 1.30250e+06      7.77e-05\npolygon 9         132 1.16490e+06      6.95e-05\npolygon 10         69 1.91355e+05      1.14e-05\npolygon 11        117 1.51905e+05      9.06e-06\npolygon 12         95 1.14409e+05      6.83e-06\npolygon 13         22 4.54503e+03      2.71e-07\npolygon 14         25 1.18153e+04      7.05e-07\npolygon 15        131 1.52345e+05      9.09e-06\npolygon 16         39 1.07779e+04      6.43e-07\npolygon 17         54 3.46837e+05      2.07e-05\npolygon 18         72 2.15853e+05      1.29e-05\npolygon 19         16 1.85061e+03      1.10e-07\npolygon 20         79 1.05702e+05      6.31e-06\npolygon 21         20 4.26450e+03      2.54e-07\npolygon 22        119 1.64729e+05      9.83e-06\npolygon 23         40 1.16146e+04      6.93e-07\npolygon 24         16 3.52284e+03      2.10e-07\npolygon 25        328 3.08592e+06      1.84e-04\npolygon 26        191 2.36937e+06      1.41e-04\npolygon 27         77 8.82506e+04      5.27e-06\npolygon 28         49 6.13179e+04      3.66e-06\npolygon 29        121 7.64910e+04      4.56e-06\npolygon 30          5 1.73815e+04      1.04e-06\npolygon 31          4 6.39020e+03      3.81e-07\npolygon 32         16 1.18396e+05      7.06e-06\npolygon 33          5 2.11407e+04      1.26e-06\npolygon 34         11 3.52360e+04      2.10e-06\npolygon 35         13 6.20570e+04      3.70e-06\npolygon 36          8 1.23128e+04      7.35e-07\npolygon 37          5 9.16907e+03      5.47e-07\npolygon 38         31 1.54528e+06      9.22e-05\npolygon 39         13 6.02786e+04      3.60e-06\npolygon 40         19 8.71573e+04      5.20e-06\npolygon 41         15 6.16242e+04      3.68e-06\npolygon 42          8 1.56726e+04      9.35e-07\npolygon 43          6 1.35363e+04      8.08e-07\npolygon 44          4 4.29360e+03      2.56e-07\npolygon 45         23 1.77052e+05      1.06e-05\npolygon 46         45 4.35839e+04      2.60e-06\npolygon 47          5 6.83224e+03      4.08e-07\npolygon 48          5 6.68328e+03      3.99e-07\npolygon 49          5 2.25570e+03      1.35e-07\npolygon 50          7 2.61716e+04      1.56e-06\npolygon 51          9 1.20125e+04      7.17e-07\npolygon 52          8 2.24884e+04      1.34e-06\npolygon 53          6 1.21058e+04      7.22e-07\npolygon 54          5 8.79539e+03      5.25e-07\npolygon 55          9 2.28045e+04      1.36e-06\npolygon 56          6 9.20554e+03      5.49e-07\npolygon 57         49 1.00131e+05      5.97e-06\npolygon 58          5 4.47493e+03      2.67e-07\npolygon 59          4 2.88084e+03      1.72e-07\npolygon 60          4 3.66452e+03      2.19e-07\npolygon 61         69 9.92186e+04      5.92e-06\npolygon 62          5 3.03623e+03      1.81e-07\npolygon 63          6 1.05413e+04      6.29e-07\npolygon 64          8 9.42911e+03      5.63e-07\npolygon 65         13 6.94883e+04      4.15e-06\npolygon 66         34 2.01331e+05      1.20e-05\npolygon 67        227 1.23408e+06      7.36e-05\npolygon 68          4 2.59824e+03      1.55e-07\npolygon 69          7 8.47540e+03      5.06e-07\npolygon 70          5 8.12486e+03      4.85e-07\npolygon 71         95 2.08341e+05      1.24e-05\npolygon 72         18 7.79145e+04      4.65e-06\npolygon 73         24 1.59007e+04      9.49e-07\npolygon 74          4 8.81028e+02      5.26e-08\npolygon 75         43 4.25653e+04      2.54e-06\npolygon 76          5 4.41923e+03      2.64e-07\npolygon 77          4 2.43914e+03      1.46e-07\npolygon 78          5 4.71226e+03      2.81e-07\npolygon 79        217 2.22687e+06      1.33e-04\npolygon 80         63 5.45427e+04      3.25e-06\npolygon 81          6 4.61991e+03      2.76e-07\npolygon 82          6 1.47370e+04      8.79e-07\npolygon 83          6 1.35588e+04      8.09e-07\npolygon 84         51 9.00805e+04      5.37e-06\npolygon 85          4 1.55335e+03      9.27e-08\npolygon 86         32 4.34625e+04      2.59e-06\npolygon 87        146 5.46576e+05      3.26e-05\npolygon 88         36 7.39133e+04      4.41e-06\npolygon 89         42 9.17378e+04      5.47e-06\npolygon 90        141 1.10143e+06      6.57e-05\npolygon 91         96 2.55421e+05      1.52e-05\npolygon 92         75 3.74798e+04      2.24e-06\npolygon 93         71 9.11194e+05      5.44e-05\npolygon 94          5 4.25220e+03      2.54e-07\npolygon 95         48 1.10263e+05      6.58e-06\npolygon 96          6 1.00670e+04      6.01e-07\npolygon 97         33 2.35513e+04      1.41e-06\npolygon 98          4 1.39953e+02      8.35e-09\npolygon 99        120 3.80319e+05      2.27e-05\npolygon 100        19 3.13896e+04      1.87e-06\npolygon 101        42 1.21247e+05      7.23e-06\npolygon 102        24 3.83865e+04      2.29e-06\npolygon 103        88 4.57022e+05      2.73e-05\npolygon 104        20 1.78068e+04      1.06e-06\npolygon 105        20 2.39368e+04      1.43e-06\npolygon 106         5 6.64860e+03      3.97e-07\npolygon 107         5 5.41661e+03      3.23e-07\npolygon 108        53 4.54957e+05      2.71e-05\npolygon 109       263 1.76196e+07      1.05e-03\npolygon 110         4 6.76374e+03      4.04e-07\npolygon 111        17 5.83732e+03      3.48e-07\npolygon 112        25 2.16843e+05      1.29e-05\npolygon 113         9 3.13706e+03      1.87e-07\npolygon 114        10 1.13374e+04      6.76e-07\npolygon 115        45 1.05289e+05      6.28e-06\npolygon 116         7 4.71437e+03      2.81e-07\npolygon 117       527 4.88599e+07      2.91e-03\npolygon 118       632 1.19875e+08      7.15e-03\npolygon 119        68 3.72752e+06      2.22e-04\npolygon 120        10 1.01946e+05      6.08e-06\npolygon 121        19 8.27040e+04      4.93e-06\npolygon 122        17 4.01684e+04      2.40e-06\npolygon 123        11 4.06518e+04      2.43e-06\npolygon 124       111 1.46837e+06      8.76e-05\npolygon 125       110 3.73961e+06      2.23e-04\npolygon 126        19 1.91715e+04      1.14e-06\npolygon 127        73 3.61882e+06      2.16e-04\npolygon 128        10 3.05396e+04      1.82e-06\npolygon 129         6 1.63086e+04      9.73e-07\npolygon 130        81 2.65410e+05      1.58e-05\npolygon 131         8 2.10497e+04      1.26e-06\npolygon 132         9 2.23051e+04      1.33e-06\npolygon 133        11 1.96429e+04      1.17e-06\npolygon 134       145 7.13724e+06      4.26e-04\npolygon 135        60 1.45303e+05      8.67e-06\npolygon 136        74 2.06450e+06      1.23e-04\npolygon 137        36 2.64395e+04      1.58e-06\npolygon 138       926 2.12401e+08      1.27e-02\npolygon 139        25 2.21142e+05      1.32e-05\npolygon 140         6 6.85335e+03      4.09e-07\npolygon 141        31 1.67739e+06      1.00e-04\npolygon 142         7 8.96845e+03      5.35e-07\npolygon 143        12 6.31109e+04      3.77e-06\npolygon 144       202 2.25183e+07      1.34e-03\npolygon 145        46 2.39836e+06      1.43e-04\npolygon 146        34 1.06861e+04      6.38e-07\npolygon 147         8 4.62274e+04      2.76e-06\npolygon 148         7 3.16257e+04      1.89e-06\npolygon 149         5 6.47214e+03      3.86e-07\npolygon 150        12 2.17322e+04      1.30e-06\npolygon 151         5 7.20136e+03      4.30e-07\npolygon 152       160 1.11856e+06      6.67e-05\npolygon 153       105 3.97161e+05      2.37e-05\npolygon 154        14 3.77546e+05      2.25e-05\npolygon 155        27 1.21328e+06      7.24e-05\npolygon 156       132 7.32320e+05      4.37e-05\npolygon 157        52 6.46488e+04      3.86e-06\npolygon 158        59 5.31644e+06      3.17e-04\npolygon 159        48 1.76605e+06      1.05e-04\npolygon 160        34 5.03181e+04      3.00e-06\npolygon 161        49 1.83632e+04      1.10e-06\npolygon 162        19 5.31559e+03      3.17e-07\npolygon 163       246 3.09440e+06      1.85e-04\npolygon 164        28 1.99191e+05      1.19e-05\npolygon 165        19 4.51980e+05      2.70e-05\npolygon 166        14 5.66638e+04      3.38e-06\npolygon 167        12 1.09882e+05      6.56e-06\npolygon 168        41 4.25466e+04      2.54e-06\npolygon 169       189 1.69035e+06      1.01e-04\npolygon 170       118 2.32814e+05      1.39e-05\npolygon 171         7 2.79374e+04      1.67e-06\npolygon 172        53 1.72586e+06      1.03e-04\npolygon 173        13 6.36463e+04      3.80e-06\npolygon 174       156 1.14531e+06      6.83e-05\npolygon 175        47 9.13932e+05      5.45e-05\npolygon 176        62 3.95152e+06      2.36e-04\npolygon 177       155 7.75116e+05      4.62e-05\npolygon 178        14 4.20349e+04      2.51e-06\npolygon 179        18 5.14007e+03      3.07e-07\npolygon 180        31 7.44696e+05      4.44e-05\npolygon 181        18 4.11037e+05      2.45e-05\npolygon 182        23 7.72702e+03      4.61e-07\npolygon 183         8 3.85828e+04      2.30e-06\npolygon 184       180 7.46362e+06      4.45e-04\npolygon 185        14 2.75557e+05      1.64e-05\npolygon 186         4 9.17061e+03      5.47e-07\npolygon 187         9 9.64342e+03      5.75e-07\npolygon 188         9 6.16694e+04      3.68e-06\npolygon 189        10 1.05264e+05      6.28e-06\npolygon 190         8 8.74118e+04      5.22e-06\npolygon 191         5 1.83999e+04      1.10e-06\npolygon 192         5 3.32417e+03      1.98e-07\npolygon 193        13 3.15953e+04      1.88e-06\npolygon 194        67 3.93589e+05      2.35e-05\npolygon 195         4 2.84280e+03      1.70e-07\npolygon 196        16 4.94144e+03      2.95e-07\npolygon 197         4 1.27360e+03      7.60e-08\npolygon 198         8 1.67265e+04      9.98e-07\npolygon 199        12 2.45940e+04      1.47e-06\npolygon 200        12 5.95411e+04      3.55e-06\npolygon 201        14 2.19831e+03      1.31e-07\npolygon 202        14 4.32480e+03      2.58e-07\npolygon 203        17 7.75234e+03      4.63e-07\npolygon 204        13 1.86854e+03      1.11e-07\npolygon 205        34 3.85424e+06      2.30e-04\npolygon 206         9 3.58530e+03      2.14e-07\npolygon 207        15 1.41276e+04      8.43e-07\npolygon 208        27 1.42520e+04      8.50e-07\npolygon 209        38 2.66059e+04      1.59e-06\npolygon 210        22 4.51365e+03      2.69e-07\npolygon 211        96 5.26123e+05      3.14e-05\npolygon 212        60 1.00574e+05      6.00e-06\npolygon 213        31 7.13409e+04      4.26e-06\npolygon 214        37 1.08935e+06      6.50e-05\npolygon 215       179 8.26972e+05      4.93e-05\npolygon 216        59 1.99001e+05      1.19e-05\npolygon 217        47 2.81875e+05      1.68e-05\npolygon 218       115 3.13327e+05      1.87e-05\npolygon 219       133 4.76117e+05      2.84e-05\npolygon 220        97 1.63408e+07      9.75e-04\npolygon 221        19 6.38976e+03      3.81e-07\npolygon 222        10 7.75421e+03      4.63e-07\npolygon 223       204 1.42141e+06      8.48e-05\npolygon 224       125 2.33616e+06      1.39e-04\npolygon 225        31 2.58857e+04      1.54e-06\npolygon 226        25 2.06725e+04      1.23e-06\npolygon 227        87 1.25180e+06      7.47e-05\npolygon 228        38 4.03858e+04      2.41e-06\npolygon 229        10 5.04629e+04      3.01e-06\npolygon 230         6 1.12888e+04      6.73e-07\npolygon 231        40 1.56849e+05      9.36e-06\npolygon 232        66 5.25038e+04      3.13e-06\npolygon 233         8 1.10747e+04      6.61e-07\npolygon 234        10 1.50784e+03      9.00e-08\npolygon 235        14 4.55332e+03      2.72e-07\npolygon 236        41 4.12940e+04      2.46e-06\npolygon 237         7 3.04017e+03      1.81e-07\npolygon 238        19 7.53923e+03      4.50e-07\npolygon 239        18 8.35187e+03      4.98e-07\npolygon 240        26 5.16261e+05      3.08e-05\npolygon 241        13 9.24908e+04      5.52e-06\npolygon 242        25 4.18653e+04      2.50e-06\npolygon 243         7 3.83476e+03      2.29e-07\npolygon 244        82 4.38420e+05      2.62e-05\npolygon 245       164 3.46334e+06      2.07e-04\npolygon 246        11 5.20050e+03      3.10e-07\npolygon 247        13 3.27494e+04      1.95e-06\npolygon 248         6 3.01213e+04      1.80e-06\npolygon 249        13 2.03114e+05      1.21e-05\npolygon 250        38 2.87869e+04      1.72e-06\npolygon 251        14 4.11781e+03      2.46e-07\npolygon 252        44 1.67050e+05      9.97e-06\npolygon 253        11 6.66399e+04      3.98e-06\npolygon 254       129 2.29310e+06      1.37e-04\npolygon 255        22 6.48307e+03      3.87e-07\npolygon 256       107 1.06884e+06      6.38e-05\npolygon 257         9 2.30080e+04      1.37e-06\npolygon 258        34 9.10976e+03      5.43e-07\npolygon 259        72 1.08609e+05      6.48e-06\npolygon 260        64 2.19815e+05      1.31e-05\npolygon 261        25 2.57976e+05      1.54e-05\npolygon 262        26 4.60002e+04      2.74e-06\npolygon 263        57 8.30086e+04      4.95e-06\npolygon 264        83 1.14012e+06      6.80e-05\npolygon 265        11 3.01000e+04      1.80e-06\npolygon 266        14 1.30459e+05      7.78e-06\npolygon 267        22 2.37055e+05      1.41e-05\npolygon 268        22 1.84821e+05      1.10e-05\npolygon 269      8736 1.15970e+10      6.92e-01\npolygon 270      5944 4.61753e+09      2.75e-01\nenclosing rectangle: [512010.4, 928107.4] x [9621858, 9833989] units\n                     (416100 x 212100 units)\nWindow area = 16761600000 square units\nFraction of frame area: 0.19"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex03/ex03.html#computing-stkde-with-default-bandwidth",
    "href": "Hands-on_Ex/Hands-on_ex03/ex03.html#computing-stkde-with-default-bandwidth",
    "title": "Hands-on Exercise 03: Spatio-Temporal Point Patterns Analysis",
    "section": "6.2 Computing STKDE with Default Bandwidth",
    "text": "6.2 Computing STKDE with Default Bandwidth\n\n\nShow code\n# Compute STKDE with day of year\ntryCatch({\n  fire_doy_stkde &lt;- spattemp.density(\n    pp = fire_doy_owin,\n    h = NULL,\n    lambda = NULL,\n    verbose = FALSE\n  )\n}, error = function(e) {\n  message(\"Automatic bandwidth failed. Using manual bandwidth...\")\n  \n  # Calculate manual bandwidth\n  coords &lt;- st_coordinates(fire_doy)\n  h_manual &lt;- diff(range(coords[,1])) / 5\n  lambda_manual &lt;- 30  # approximately monthly for day of year\n  \n  fire_doy_stkde &lt;&lt;- spattemp.density(\n    pp = fire_doy_owin,\n    h = h_manual,\n    lambda = lambda_manual,\n    verbose = FALSE\n  )\n})\n\n# Display summary\nif(exists(\"fire_doy_stkde\")) {\n  summary(fire_doy_stkde)\n} else {\n  message(\"STKDE computation failed\")\n}\n\n\nSpatiotemporal Kernel Density Estimate\n\nBandwidths\n  h = 34921.4 (spatial)\n  lambda = 2.1446 (temporal)\n\nNo. of observations\n  31 \n\nSpatial bound\n  Type: polygonal\n  2D enclosure: [512010.4, 928107.4] x [9621858, 9833989]\n\nTemporal bound\n  [279, 336]\n\nEvaluation\n  128 x 128 x 58 trivariate lattice\n  Density range: [3.678581e-30, 2.813632e-11]"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex03/ex03.html#bandwidth-selection-using-bootstrap",
    "href": "Hands-on_Ex/Hands-on_ex03/ex03.html#bandwidth-selection-using-bootstrap",
    "title": "Hands-on Exercise 03: Spatio-Temporal Point Patterns Analysis",
    "section": "7.1 Bandwidth Selection using Bootstrap",
    "text": "7.1 Bandwidth Selection using Bootstrap\n\n\nShow code\n# Note: This may take several minutes to run\n# Uncomment to run bandwidth optimization\n\n# message(\"Starting bandwidth optimization (this may take a few minutes)...\")\n# fire_doy_boot &lt;- BOOT.spattemp(\n#   pp = fire_doy_owin,\n#   nboot = 10,  # Reduced for faster computation\n#   verbose = FALSE\n# )\n# \n# # Display optimal bandwidths\n# message(\"Optimal spatial bandwidth (h): \", round(fire_doy_boot$h, 2))\n# message(\"Optimal temporal bandwidth (lambda): \", round(fire_doy_boot$lambda, 2))\n\n# For demonstration, we'll use reasonable default values\nh_optimal &lt;- 9000\nlambda_optimal &lt;- 19"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex03/ex03.html#computing-stkde-with-optimized-bandwidth",
    "href": "Hands-on_Ex/Hands-on_ex03/ex03.html#computing-stkde-with-optimized-bandwidth",
    "title": "Hands-on Exercise 03: Spatio-Temporal Point Patterns Analysis",
    "section": "7.2 Computing STKDE with Optimized Bandwidth",
    "text": "7.2 Computing STKDE with Optimized Bandwidth\n\n\nShow code\n# Compute STKDE with optimized bandwidths\nfire_doy_stkde_opt &lt;- spattemp.density(\n  pp = fire_doy_owin,\n  h = h_optimal,\n  lambda = lambda_optimal,\n  verbose = FALSE\n)\n\n# Display summary\nsummary(fire_doy_stkde_opt)\n\n\nSpatiotemporal Kernel Density Estimate\n\nBandwidths\n  h = 9000 (spatial)\n  lambda = 19 (temporal)\n\nNo. of observations\n  31 \n\nSpatial bound\n  Type: polygonal\n  2D enclosure: [512010.4, 928107.4] x [9621858, 9833989]\n\nTemporal bound\n  [279, 336]\n\nEvaluation\n  128 x 128 x 58 trivariate lattice\n  Density range: [1.661956e-23, 1.511621e-11]"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex03/ex03.html#plotting-optimized-stkde",
    "href": "Hands-on_Ex/Hands-on_ex03/ex03.html#plotting-optimized-stkde",
    "title": "Hands-on Exercise 03: Spatio-Temporal Point Patterns Analysis",
    "section": "7.3 Plotting Optimized STKDE",
    "text": "7.3 Plotting Optimized STKDE\n\n\nShow code\n# Check the actual time range in the data\nif(exists(\"fire_doy_stkde_opt\") && !is.null(fire_doy_stkde_opt)) {\n  # Get the actual temporal range\n  time_range &lt;- range(fire_doy_owin$marks)\n  message(\"Actual temporal range in data: Day \", time_range[1], \" to Day \", time_range[2])\n  \n  # Plot a sample of time slices within the actual range\n  par(mfrow = c(2, 3))\n  \n  # Select 6 representative days within the actual data range\n  min_day &lt;- time_range[1]\n  max_day &lt;- time_range[2]\n  \n  # Create evenly spaced days within the range\n  days_to_plot &lt;- round(seq(min_day, max_day, length.out = 6))\n  \n  for(day in days_to_plot) {\n    tryCatch({\n      plot(fire_doy_stkde_opt,\n           tselect = day,\n           main = paste(\"Day\", day, \"(\", format(as.Date(day-1, origin = \"2023-01-01\"), \"%b %d\"), \")\"))\n    }, error = function(e) {\n      plot.new()\n      text(0.5, 0.5, paste(\"Cannot plot Day\", day))\n    })\n  }\n  \n  par(mfrow = c(1, 1))\n} else {\n  message(\"STKDE optimization not computed\")\n}"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex03/ex03.html#preparing-data-for-stpp",
    "href": "Hands-on_Ex/Hands-on_ex03/ex03.html#preparing-data-for-stpp",
    "title": "Hands-on Exercise 03: Spatio-Temporal Point Patterns Analysis",
    "section": "8.1 Preparing Data for stpp",
    "text": "8.1 Preparing Data for stpp\n\n\nShow code\n# Extract coordinates\ncoords &lt;- st_coordinates(fire_sf)\nfire_x &lt;- coords[, 1]\nfire_y &lt;- coords[, 2]\n\n# Use DayofYear as temporal coordinate\nfire_t &lt;- fire_sf$DayofYear\n\n# Create data frame\nfire_stpp_df &lt;- data.frame(\n  x = fire_x,\n  y = fire_y,\n  t = fire_t\n)\n\n# Remove any NA values\nfire_stpp_df &lt;- na.omit(fire_stpp_df)\n\n# Create stpp object\nfire_stpp &lt;- as.3dpoints(fire_stpp_df)\n\n# Check class\nclass(fire_stpp)\n\n\n[1] \"stpp\""
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex03/ex03.html#visualizing-stpp-object",
    "href": "Hands-on_Ex/Hands-on_ex03/ex03.html#visualizing-stpp-object",
    "title": "Hands-on Exercise 03: Spatio-Temporal Point Patterns Analysis",
    "section": "8.2 Visualizing stpp Object",
    "text": "8.2 Visualizing stpp Object\n\n\nShow code\n# Plot the 3D space-time point pattern\n# Note: stpp plot has its own parameter structure\ntryCatch({\n  # Simple plot without additional parameters\n  plot(fire_stpp)\n}, error = function(e) {\n  # If that fails, try plotting the data directly\n  message(\"Default plot failed, using alternative visualization...\")\n  \n  # Extract the data\n  if(length(fire_stpp) == 3) {\n    # Create manual 3D plot\n    library(scatterplot3d)\n    if(requireNamespace(\"scatterplot3d\", quietly = TRUE)) {\n      scatterplot3d(fire_stpp[,1], fire_stpp[,2], fire_stpp[,3],\n                    main = \"3D Visualization of Forest Fires\",\n                    xlab = \"X coordinate\",\n                    ylab = \"Y coordinate\", \n                    zlab = \"Day of Year\",\n                    color = \"red\",\n                    pch = 16)\n    } else {\n      # Fallback to 2D plots\n      par(mfrow = c(1, 2))\n      plot(fire_stpp[,1], fire_stpp[,2], \n           main = \"Spatial Distribution\",\n           xlab = \"X\", ylab = \"Y\", pch = 20, col = \"red\")\n      hist(fire_stpp[,3], \n           main = \"Temporal Distribution\",\n           xlab = \"Day of Year\", col = \"lightblue\")\n      par(mfrow = c(1, 1))\n    }\n  }\n})"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex03/ex03.html#computing-space-time-k-function",
    "href": "Hands-on_Ex/Hands-on_ex03/ex03.html#computing-space-time-k-function",
    "title": "Hands-on Exercise 03: Spatio-Temporal Point Patterns Analysis",
    "section": "8.3 Computing Space-Time K-function",
    "text": "8.3 Computing Space-Time K-function\n\n\nShow code\n# Define spatial and temporal distances\nu &lt;- seq(0, 20000, by = 2000)  # Spatial distances in meters\nv &lt;- seq(0, 60, by = 10)       # Temporal distances in days\n\n# Compute STIKhat (this may take a moment)\nfire_stik &lt;- STIKhat(\n  xyt = fire_stpp,\n  dist = u,\n  times = v,\n  infectious = FALSE\n)\n\n# Display structure\nstr(fire_stik)\n\n\nList of 6\n $ Khat      : num [1:10, 1:6] 2.36e+10 2.36e+10 2.36e+10 3.53e+10 4.12e+10 ...\n $ Ktheo     : num [1:10, 1:6] 2.51e+08 1.01e+09 2.26e+09 4.02e+09 6.28e+09 ...\n $ dist      : num [1:10] 2000 4000 6000 8000 10000 12000 14000 16000 18000 20000\n $ times     : num [1:6] 10 20 30 40 50 60\n $ correction: chr \"isotropic\"\n $ infectious: logi FALSE"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex03/ex03.html#plotting-space-time-k-function",
    "href": "Hands-on_Ex/Hands-on_ex03/ex03.html#plotting-space-time-k-function",
    "title": "Hands-on Exercise 03: Spatio-Temporal Point Patterns Analysis",
    "section": "8.4 Plotting Space-Time K-function",
    "text": "8.4 Plotting Space-Time K-function\n\n\nShow code\n# Create contour plot\nplotK(fire_stik,\n      main = \"Space-Time Inhomogeneous K-function\",\n      xlab = \"Spatial Distance (m)\",\n      ylab = \"Temporal Distance (days)\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex03/ex03.html#key-findings",
    "href": "Hands-on_Ex/Hands-on_ex03/ex03.html#key-findings",
    "title": "Hands-on Exercise 03: Spatio-Temporal Point Patterns Analysis",
    "section": "9.1 Key Findings",
    "text": "9.1 Key Findings\nBased on our spatio-temporal point pattern analysis of forest fires in Kepulauan Bangka Belitung:\n\n9.1.1 Spatial Distribution\n\nFire events show clear spatial clustering patterns\nCertain areas experience higher fire density consistently\n\n\n\n9.1.2 Temporal Patterns\n\nStrong seasonal variation in fire occurrence\nPeak fire activity during specific months (typically dry season)\n\n\n\n9.1.3 Spatio-temporal Clustering\n\nThe K-function analysis reveals significant spatio-temporal clustering\nFires tend to occur close together in both space and time\nThis suggests possible fire spread or common underlying causes"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex03/ex03.html#interpretation-guidelines",
    "href": "Hands-on_Ex/Hands-on_ex03/ex03.html#interpretation-guidelines",
    "title": "Hands-on Exercise 03: Spatio-Temporal Point Patterns Analysis",
    "section": "9.2 Interpretation Guidelines",
    "text": "9.2 Interpretation Guidelines\n\n9.2.1 For K-function Contour Plot:\n\nHigh values at small u and v: Indicates clustering at short spatial and temporal distances\nFlat contours: Suggests random distribution\nRapid increase in contours: Shows the spatial and temporal extent of clustering\n\n\n\n9.2.2 For STKDE:\n\nHigh density areas: Represent hotspots of fire activity\nTemporal evolution: Shows how fire risk areas change over time"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex03/ex03.html#conclusions",
    "href": "Hands-on_Ex/Hands-on_ex03/ex03.html#conclusions",
    "title": "Hands-on Exercise 03: Spatio-Temporal Point Patterns Analysis",
    "section": "9.3 Conclusions",
    "text": "9.3 Conclusions\nThe analysis reveals that forest fires in Kepulauan Bangka Belitung are not randomly distributed in space and time. Instead, they exhibit:\n\nSpatial clustering: Fires concentrate in specific geographic areas\nTemporal clustering: Fires occur more frequently during certain periods\nSpatio-temporal dependence: Recent fires increase the likelihood of nearby fires\n\nThese patterns are likely driven by: - Environmental factors (vegetation type, moisture) - Human activities (land clearing, agricultural practices) - Weather conditions (dry season effects)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_ex03/ex03.html#session-information",
    "href": "Hands-on_Ex/Hands-on_ex03/ex03.html#session-information",
    "title": "Hands-on Exercise 03: Spatio-Temporal Point Patterns Analysis",
    "section": "9.4 Session Information",
    "text": "9.4 Session Information\n\n\nShow code\nsessionInfo()\n\n\nR version 4.5.0 (2025-04-11 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 11 x64 (build 26100)\n\nMatrix products: default\n  LAPACK version 3.12.1\n\nlocale:\n[1] LC_COLLATE=Chinese (Simplified)_Hong Kong SAR.utf8 \n[2] LC_CTYPE=Chinese (Simplified)_Hong Kong SAR.utf8   \n[3] LC_MONETARY=Chinese (Simplified)_Hong Kong SAR.utf8\n[4] LC_NUMERIC=C                                       \n[5] LC_TIME=Chinese (Simplified)_Hong Kong SAR.utf8    \n\ntime zone: Asia/Shanghai\ntzcode source: internal\n\nattached base packages:\n[1] tcltk     stats     graphics  grDevices utils     datasets  methods  \n[8] base     \n\nother attached packages:\n [1] stpp_2.0-8             splancs_2.01-45        rpanel_1.1-5.2        \n [4] here_1.0.2             geodata_0.6-6          terra_1.8-60          \n [7] lubridate_1.9.4        forcats_1.0.0          stringr_1.5.1         \n[10] dplyr_1.1.4            purrr_1.0.4            readr_2.1.5           \n[13] tidyr_1.3.1            tibble_3.3.0           ggplot2_3.5.2         \n[16] tidyverse_2.0.0        tmap_4.2               sparr_2.3-16          \n[19] spatstat_3.4-1         spatstat.linnet_3.3-2  spatstat.model_3.4-2  \n[22] rpart_4.1.24           spatstat.explore_3.5-3 nlme_3.1-168          \n[25] spatstat.random_3.4-2  spatstat.geom_3.6-0    spatstat.univar_3.1-4 \n[28] spatstat.data_3.1-8    raster_3.6-32          sp_2.2-0              \n[31] sf_1.0-21             \n\nloaded via a namespace (and not attached):\n [1] DBI_1.2.3             deldir_2.0-4          gridExtra_2.3        \n [4] tmaptools_3.3         s2_1.1.7              logger_0.4.0         \n [7] rlang_1.1.6           magrittr_2.0.3        e1071_1.7-16         \n[10] compiler_4.5.0        mgcv_1.9-1            png_0.1-8            \n[13] vctrs_0.6.5           crayon_1.5.3          pkgconfig_2.0.3      \n[16] wk_0.9.4              fastmap_1.2.0         lwgeom_0.2-14        \n[19] leafem_0.2.5          utf8_1.2.5            rmarkdown_2.29       \n[22] tzdb_0.5.0            spacesXYZ_1.5-1       bit_4.6.0            \n[25] xfun_0.52             jsonlite_2.0.0        goftest_1.2-3        \n[28] spatstat.utils_3.2-0  parallel_4.5.0        R6_2.6.1             \n[31] stringi_1.8.7         RColorBrewer_1.1-3    extrafontdb_1.0      \n[34] stars_0.6-8           Rcpp_1.0.14           iterators_1.0.14     \n[37] knitr_1.50            tensor_1.5.1          base64enc_0.1-3      \n[40] tidyselect_1.2.1      Matrix_1.7-3          splines_4.5.0        \n[43] timechange_0.3.0      rstudioapi_0.17.1     dichromat_2.0-0.1    \n[46] abind_1.4-8           yaml_2.3.10           maptiles_0.10.0      \n[49] doParallel_1.0.17     codetools_0.2-20      misc3d_0.9-1         \n[52] lattice_0.22-6        leafsync_0.1.0        withr_3.0.2          \n[55] evaluate_1.0.3        units_0.8-7           proxy_0.4-27         \n[58] polyclip_1.10-7       pillar_1.10.2         KernSmooth_2.23-26   \n[61] foreach_1.5.2         generics_0.1.3        vroom_1.6.5          \n[64] rprojroot_2.1.1       hms_1.1.3             scales_1.4.0         \n[67] class_7.3-23          glue_1.8.0            tools_4.5.0          \n[70] leaflegend_1.2.1      data.table_1.17.0     rgl_1.3.18           \n[73] XML_3.99-0.18         grid_4.5.0            crosstalk_1.2.1      \n[76] colorspace_2.1-1      cols4all_0.9          cli_3.6.5            \n[79] spatstat.sparse_3.1-0 rappdirs_0.3.3        plot3D_1.4.2         \n[82] gtable_0.3.6          digest_0.6.37         classInt_0.4-11      \n[85] htmlwidgets_1.6.4     farver_2.1.2          htmltools_0.5.8.1    \n[88] lifecycle_1.0.4       leaflet_2.2.3         bit64_4.6.0-1        \n[91] microbenchmark_1.5.0"
  }
]